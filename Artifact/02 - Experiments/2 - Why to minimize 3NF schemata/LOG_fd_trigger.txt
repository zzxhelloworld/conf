dataset : F:\freeman\javaworkspace\result\FD Results\Complete Data\lineitem.json

=============================

runtime between line 3 - 8 : 17129

=============================



average time of computing each minimal keys : 1.24 ms.


=============================



total time of computing all minimal keys : 3940 ms.


=============================

runtime between line 9 - 14 : 3462

=============================

runtime on line 15 : 64

=============================

runtime between line 16 - 18 : 1


decompisitions finished, statistics as follows:

exe time : 21160 ms.

=============================


maximal candidate key number for schemata : 19


=============================

all decomposition results :

schemata : [11, 14, 15, 2, 3, 4, 6, 7, 8]
FD set : 
[11, 14, 2, 3, 4, 6, 7, 8] -> [15]
[15, 2, 3, 4, 6, 8] -> [11]
[15, 2, 3, 4, 6, 8] -> [14]
[15, 2, 3, 4, 7] -> [6]
[15, 2, 3, 4, 7] -> [8]
[15, 2, 3, 4, 7] -> [11]
[15, 2, 3, 4, 7] -> [14]
[15, 2, 3, 6, 7, 8] -> [4]
[15, 2, 3, 6, 7, 8] -> [11]
[15, 2, 3, 6, 7, 8] -> [14]
[14, 15, 2, 3, 6, 7] -> [4]
[14, 15, 2, 3, 6, 7] -> [8]
[14, 15, 2, 3, 6, 7] -> [11]
[14, 15, 2, 3, 6, 8] -> [4]
[14, 15, 2, 3, 6, 8] -> [7]
[14, 15, 2, 3, 6, 8] -> [11]
[11, 15, 2, 3] -> [4]
[11, 15, 2, 3] -> [6]
[11, 15, 2, 3] -> [7]
[11, 15, 2, 3] -> [8]
[11, 15, 2, 3] -> [14]
[15, 2, 4, 6, 7] -> [8]
[15, 2, 4, 6, 8] -> [7]
[14, 15, 2, 4, 6] -> [3]
[14, 15, 2, 4, 6] -> [7]
[14, 15, 2, 4, 6] -> [8]
[14, 15, 2, 4, 6] -> [11]
[15, 2, 4, 7, 8] -> [6]
[14, 15, 2, 4, 7] -> [3]
[14, 15, 2, 4, 7] -> [6]
[14, 15, 2, 4, 7] -> [8]
[14, 15, 2, 4, 7] -> [11]
[14, 15, 2, 4, 8] -> [3]
[14, 15, 2, 4, 8] -> [6]
[14, 15, 2, 4, 8] -> [7]
[14, 15, 2, 4, 8] -> [11]
[11, 15, 2, 4] -> [3]
[11, 15, 2, 4] -> [6]
[11, 15, 2, 4] -> [7]
[11, 15, 2, 4] -> [8]
[11, 15, 2, 4] -> [14]
[14, 15, 2, 6, 7, 8] -> [3]
[14, 15, 2, 6, 7, 8] -> [4]
[14, 15, 2, 6, 7, 8] -> [11]
[11, 15, 2, 6] -> [3]
[11, 15, 2, 6] -> [4]
[11, 15, 2, 6] -> [7]
[11, 15, 2, 6] -> [8]
[11, 15, 2, 6] -> [14]
[11, 15, 2, 7] -> [3]
[11, 15, 2, 7] -> [4]
[11, 15, 2, 7] -> [6]
[11, 15, 2, 7] -> [8]
[11, 15, 2, 7] -> [14]
[11, 14, 15, 2, 8] -> [3]
[11, 14, 15, 2, 8] -> [4]
[11, 14, 15, 2, 8] -> [6]
[11, 14, 15, 2, 8] -> [7]
[11, 15, 3, 4, 6, 7] -> [2]
[11, 15, 3, 4, 6, 7] -> [14]
[11, 14, 15, 3, 4, 6, 8] -> [2]
[11, 14, 15, 3, 4, 6, 8] -> [7]
[11, 14, 15, 3, 4, 7] -> [2]
[11, 14, 15, 3, 4, 7] -> [6]
[11, 14, 15, 4, 6, 7] -> [2]
[11, 14, 15, 4, 6, 7] -> [3]
[11, 15, 4, 6, 7] -> [8]
[11, 14, 15, 4, 7] -> [8]
number of minimal keys : 19
########################

schemata : [11, 13, 14, 15, 2, 3, 6, 7, 8]
FD set : 
[15, 2, 3, 6, 7, 8] -> [11]
[15, 2, 3, 6, 7, 8] -> [13]
[15, 2, 3, 6, 7, 8] -> [14]
[13, 15, 2, 3, 6, 7] -> [8]
[13, 15, 2, 3, 6, 7] -> [11]
[13, 15, 2, 3, 6, 7] -> [14]
[14, 15, 2, 3, 6, 7] -> [8]
[14, 15, 2, 3, 6, 7] -> [11]
[14, 15, 2, 3, 6, 7] -> [13]
[14, 15, 2, 3, 6, 8] -> [7]
[14, 15, 2, 3, 6, 8] -> [11]
[14, 15, 2, 3, 6, 8] -> [13]
[13, 14, 15, 2, 3, 6] -> [7]
[13, 14, 15, 2, 3, 6] -> [8]
[13, 14, 15, 2, 3, 6] -> [11]
[13, 14, 15, 2, 3, 7, 8] -> [6]
[13, 14, 15, 2, 3, 7, 8] -> [11]
[11, 15, 2, 3] -> [6]
[11, 15, 2, 3] -> [7]
[11, 15, 2, 3] -> [8]
[11, 15, 2, 3] -> [13]
[11, 15, 2, 3] -> [14]
[14, 15, 2, 6, 7, 8] -> [3]
[14, 15, 2, 6, 7, 8] -> [11]
[14, 15, 2, 6, 7, 8] -> [13]
[13, 14, 15, 2, 6, 7] -> [3]
[13, 14, 15, 2, 6, 7] -> [8]
[13, 14, 15, 2, 6, 7] -> [11]
[13, 14, 15, 2, 6, 8] -> [3]
[13, 14, 15, 2, 6, 8] -> [7]
[13, 14, 15, 2, 6, 8] -> [11]
[11, 15, 2, 6] -> [3]
[11, 15, 2, 6] -> [7]
[11, 15, 2, 6] -> [8]
[11, 15, 2, 6] -> [13]
[11, 15, 2, 6] -> [14]
[11, 15, 2, 7] -> [3]
[11, 15, 2, 7] -> [6]
[11, 15, 2, 7] -> [8]
[11, 15, 2, 7] -> [13]
[11, 15, 2, 7] -> [14]
[11, 14, 15, 2, 8] -> [3]
[11, 14, 15, 2, 8] -> [6]
[11, 14, 15, 2, 8] -> [7]
[11, 14, 15, 2, 8] -> [13]
[11, 13, 15, 2] -> [3]
[11, 13, 15, 2] -> [6]
[11, 13, 15, 2] -> [7]
[11, 13, 15, 2] -> [8]
[11, 13, 15, 2] -> [14]
[11, 13, 14, 15, 3, 6, 7, 8] -> [2]
number of minimal keys : 15
########################

schemata : [10, 11, 13, 14, 15, 2, 3, 6, 7]
FD set : 
[10, 11, 13, 14, 2, 3, 6, 7] -> [15]
[13, 15, 2, 3, 6, 7] -> [10]
[13, 15, 2, 3, 6, 7] -> [11]
[13, 15, 2, 3, 6, 7] -> [14]
[14, 15, 2, 3, 6, 7] -> [10]
[14, 15, 2, 3, 6, 7] -> [11]
[14, 15, 2, 3, 6, 7] -> [13]
[13, 14, 15, 2, 3, 6] -> [7]
[13, 14, 15, 2, 3, 6] -> [10]
[13, 14, 15, 2, 3, 6] -> [11]
[11, 15, 2, 3] -> [6]
[11, 15, 2, 3] -> [7]
[11, 15, 2, 3] -> [10]
[11, 15, 2, 3] -> [13]
[11, 15, 2, 3] -> [14]
[13, 14, 15, 2, 6, 7] -> [3]
[13, 14, 15, 2, 6, 7] -> [10]
[13, 14, 15, 2, 6, 7] -> [11]
[11, 15, 2, 6] -> [3]
[11, 15, 2, 6] -> [7]
[11, 15, 2, 6] -> [10]
[11, 15, 2, 6] -> [13]
[11, 15, 2, 6] -> [14]
[11, 15, 2, 7] -> [3]
[11, 15, 2, 7] -> [6]
[11, 15, 2, 7] -> [10]
[11, 15, 2, 7] -> [13]
[11, 15, 2, 7] -> [14]
[10, 15, 2] -> [3]
[10, 15, 2] -> [6]
[10, 15, 2] -> [7]
[10, 15, 2] -> [11]
[10, 15, 2] -> [13]
[10, 15, 2] -> [14]
[11, 13, 15, 2] -> [3]
[11, 13, 15, 2] -> [6]
[11, 13, 15, 2] -> [7]
[11, 13, 15, 2] -> [10]
[11, 13, 15, 2] -> [14]
[10, 11, 15, 3, 6] -> [2]
[10, 11, 15, 3, 6] -> [7]
[10, 11, 15, 3, 6] -> [13]
[10, 11, 15, 3, 6] -> [14]
[10, 11, 14, 15, 3] -> [2]
[10, 11, 14, 15, 3] -> [6]
[10, 11, 14, 15, 3] -> [7]
[10, 11, 14, 15, 3] -> [13]
[10, 11, 13, 15, 6] -> [7]
[10, 11, 14, 15, 6] -> [2]
[10, 11, 14, 15, 6] -> [3]
[10, 11, 14, 15, 6] -> [7]
[10, 11, 14, 15, 6] -> [13]
[10, 11, 14, 15, 7] -> [2]
[10, 11, 14, 15, 7] -> [3]
[10, 11, 14, 15, 7] -> [6]
[10, 11, 14, 15, 7] -> [13]
number of minimal keys : 14
########################

schemata : [10, 11, 12, 13, 14, 15, 2, 6, 8]
FD set : 
[10, 11, 12, 13, 14, 2, 6, 8] -> [15]
[13, 14, 15, 2, 6, 8] -> [10]
[13, 14, 15, 2, 6, 8] -> [11]
[13, 14, 15, 2, 6, 8] -> [12]
[11, 15, 2, 6] -> [8]
[11, 15, 2, 6] -> [10]
[11, 15, 2, 6] -> [12]
[11, 15, 2, 6] -> [13]
[11, 15, 2, 6] -> [14]
[11, 14, 15, 2, 8] -> [6]
[11, 14, 15, 2, 8] -> [10]
[11, 14, 15, 2, 8] -> [12]
[11, 14, 15, 2, 8] -> [13]
[10, 15, 2] -> [6]
[10, 15, 2] -> [8]
[10, 15, 2] -> [11]
[10, 15, 2] -> [12]
[10, 15, 2] -> [13]
[10, 15, 2] -> [14]
[11, 13, 15, 2] -> [6]
[11, 13, 15, 2] -> [8]
[11, 13, 15, 2] -> [10]
[11, 13, 15, 2] -> [12]
[11, 13, 15, 2] -> [14]
[12, 15, 2] -> [6]
[12, 15, 2] -> [8]
[12, 15, 2] -> [10]
[12, 15, 2] -> [11]
[12, 15, 2] -> [13]
[12, 15, 2] -> [14]
[11, 12, 14, 15, 6, 8] -> [2]
[11, 12, 14, 15, 6, 8] -> [10]
[11, 12, 14, 15, 6, 8] -> [13]
[10, 11, 12, 15, 6] -> [2]
[10, 11, 12, 15, 6] -> [13]
[10, 11, 12, 15, 6] -> [14]
[10, 11, 13, 15, 6] -> [8]
[10, 11, 14, 15, 6] -> [2]
[10, 11, 14, 15, 6] -> [8]
[10, 11, 14, 15, 6] -> [12]
[10, 11, 14, 15, 6] -> [13]
[11, 12, 13, 15, 6] -> [2]
[11, 12, 13, 15, 6] -> [8]
[11, 12, 13, 15, 6] -> [10]
[11, 12, 13, 15, 6] -> [14]
[11, 12, 13, 14, 15, 8] -> [2]
[11, 12, 13, 14, 15, 8] -> [6]
[11, 12, 13, 14, 15, 8] -> [10]
[10, 11, 12, 14, 15] -> [2]
[10, 11, 12, 14, 15] -> [6]
[10, 11, 12, 14, 15] -> [13]
[10, 11, 12, 15] -> [8]
[10, 11, 13, 14, 15] -> [8]
number of minimal keys : 13
########################

schemata : [10, 11, 13, 14, 15, 2, 4, 7, 8]
FD set : 
[10, 11, 13, 14, 2, 4, 7, 8] -> [15]
[15, 2, 4, 7, 8] -> [13]
[13, 15, 2, 4, 7] -> [8]
[14, 15, 2, 4, 7] -> [8]
[14, 15, 2, 4, 7] -> [10]
[14, 15, 2, 4, 7] -> [11]
[14, 15, 2, 4, 8] -> [7]
[14, 15, 2, 4, 8] -> [10]
[14, 15, 2, 4, 8] -> [11]
[11, 15, 2, 4] -> [7]
[11, 15, 2, 4] -> [8]
[11, 15, 2, 4] -> [10]
[11, 15, 2, 4] -> [13]
[11, 15, 2, 4] -> [14]
[14, 15, 2, 4] -> [13]
[11, 15, 2, 7] -> [4]
[11, 15, 2, 7] -> [8]
[11, 15, 2, 7] -> [10]
[11, 15, 2, 7] -> [13]
[11, 15, 2, 7] -> [14]
[11, 14, 15, 2, 8] -> [4]
[11, 14, 15, 2, 8] -> [7]
[11, 14, 15, 2, 8] -> [10]
[11, 14, 15, 2, 8] -> [13]
[10, 15, 2] -> [4]
[10, 15, 2] -> [7]
[10, 15, 2] -> [8]
[10, 15, 2] -> [11]
[10, 15, 2] -> [13]
[10, 15, 2] -> [14]
[11, 13, 15, 2] -> [4]
[11, 13, 15, 2] -> [7]
[11, 13, 15, 2] -> [8]
[11, 13, 15, 2] -> [10]
[11, 13, 15, 2] -> [14]
[10, 11, 15, 4, 7] -> [2]
[10, 11, 15, 4, 7] -> [13]
[10, 11, 15, 4, 7] -> [14]
[10, 14, 15, 4, 7] -> [8]
[11, 13, 15, 4, 7] -> [8]
[11, 14, 15, 4, 7] -> [8]
[10, 11, 13, 15, 4] -> [2]
[10, 11, 13, 15, 4] -> [7]
[10, 11, 13, 15, 4] -> [14]
[10, 11, 14, 15, 4] -> [2]
[10, 11, 14, 15, 4] -> [7]
[10, 11, 14, 15, 4] -> [13]
[10, 11, 15, 4] -> [8]
[11, 13, 14, 15, 4] -> [8]
[10, 11, 14, 15, 7] -> [2]
[10, 11, 14, 15, 7] -> [4]
[10, 11, 14, 15, 7] -> [8]
[10, 11, 14, 15, 7] -> [13]
[10, 11, 13, 14, 15] -> [8]
number of minimal keys : 12
########################

schemata : [10, 11, 12, 13, 15, 2, 3, 7, 8]
FD set : 
[10, 11, 12, 13, 2, 3, 7, 8] -> [15]
[11, 15, 2, 3] -> [7]
[11, 15, 2, 3] -> [8]
[11, 15, 2, 3] -> [10]
[11, 15, 2, 3] -> [12]
[11, 15, 2, 3] -> [13]
[11, 15, 2, 7] -> [3]
[11, 15, 2, 7] -> [8]
[11, 15, 2, 7] -> [10]
[11, 15, 2, 7] -> [12]
[11, 15, 2, 7] -> [13]
[10, 15, 2] -> [3]
[10, 15, 2] -> [7]
[10, 15, 2] -> [8]
[10, 15, 2] -> [11]
[10, 15, 2] -> [12]
[10, 15, 2] -> [13]
[11, 13, 15, 2] -> [3]
[11, 13, 15, 2] -> [7]
[11, 13, 15, 2] -> [8]
[11, 13, 15, 2] -> [10]
[11, 13, 15, 2] -> [12]
[12, 15, 2] -> [3]
[12, 15, 2] -> [7]
[12, 15, 2] -> [8]
[12, 15, 2] -> [10]
[12, 15, 2] -> [11]
[12, 15, 2] -> [13]
[10, 11, 13, 15, 3, 7, 8] -> [2]
[10, 11, 13, 15, 3, 7, 8] -> [12]
[10, 12, 13, 15, 3, 7] -> [2]
[10, 12, 13, 15, 3, 7] -> [8]
[10, 12, 13, 15, 3, 7] -> [11]
[10, 11, 12, 13, 15, 3] -> [2]
[10, 11, 12, 13, 15, 3] -> [7]
[11, 12, 13, 15, 3] -> [8]
[10, 11, 12, 15, 7] -> [2]
[10, 11, 12, 15, 7] -> [3]
[10, 11, 12, 15, 7] -> [13]
[11, 12, 13, 15, 7] -> [2]
[11, 12, 13, 15, 7] -> [3]
[11, 12, 13, 15, 7] -> [8]
[11, 12, 13, 15, 7] -> [10]
[10, 11, 12, 15] -> [8]
number of minimal keys : 11
########################

schemata : [1, 10, 11, 14, 15, 2, 3, 8]
FD set : 
[1, 10, 11, 14, 2, 3, 8] -> [15]
[1, 15, 2, 3, 8] -> [10]
[1, 15, 2, 3, 8] -> [11]
[1, 15, 2, 3, 8] -> [14]
[1, 14, 15, 2, 3] -> [8]
[1, 14, 15, 2, 3] -> [10]
[1, 14, 15, 2, 3] -> [11]
[1, 14, 15, 2, 8] -> [3]
[1, 14, 15, 2, 8] -> [10]
[1, 14, 15, 2, 8] -> [11]
[1, 10, 15] -> [2]
[1, 10, 15] -> [3]
[1, 10, 15] -> [8]
[1, 10, 15] -> [11]
[1, 10, 15] -> [14]
[1, 11, 15] -> [2]
[1, 11, 15] -> [3]
[1, 11, 15] -> [8]
[1, 11, 15] -> [10]
[1, 11, 15] -> [14]
[11, 15, 2, 3] -> [1]
[11, 15, 2, 3] -> [8]
[11, 15, 2, 3] -> [10]
[11, 15, 2, 3] -> [14]
[11, 14, 15, 2, 8] -> [1]
[11, 14, 15, 2, 8] -> [3]
[11, 14, 15, 2, 8] -> [10]
[10, 15, 2] -> [1]
[10, 15, 2] -> [3]
[10, 15, 2] -> [8]
[10, 15, 2] -> [11]
[10, 15, 2] -> [14]
[10, 11, 14, 15, 3] -> [1]
[10, 11, 14, 15, 3] -> [2]
[10, 11, 14, 15, 3] -> [8]
number of minimal keys : 10
########################

schemata : [1, 10, 11, 15, 2, 3, 7, 8]
FD set : 
[1, 10, 11, 2, 3, 7, 8] -> [15]
[1, 15, 2, 3, 7] -> [10]
[1, 15, 2, 3, 7] -> [11]
[1, 15, 2, 3, 8] -> [7]
[1, 15, 2, 3, 8] -> [10]
[1, 15, 2, 3, 8] -> [11]
[1, 15, 3, 7] -> [8]
[1, 10, 15] -> [2]
[1, 10, 15] -> [3]
[1, 10, 15] -> [7]
[1, 10, 15] -> [8]
[1, 10, 15] -> [11]
[1, 11, 15] -> [2]
[1, 11, 15] -> [3]
[1, 11, 15] -> [7]
[1, 11, 15] -> [8]
[1, 11, 15] -> [10]
[11, 15, 2, 3] -> [1]
[11, 15, 2, 3] -> [7]
[11, 15, 2, 3] -> [8]
[11, 15, 2, 3] -> [10]
[11, 15, 2, 7] -> [1]
[11, 15, 2, 7] -> [3]
[11, 15, 2, 7] -> [8]
[11, 15, 2, 7] -> [10]
[10, 15, 2] -> [1]
[10, 15, 2] -> [3]
[10, 15, 2] -> [7]
[10, 15, 2] -> [8]
[10, 15, 2] -> [11]
number of minimal keys : 8
########################

schemata : [1, 10, 11, 12, 15, 2, 3, 8]
FD set : 
[1, 10, 11, 12, 2, 3, 8] -> [15]
[1, 15, 2, 3, 8] -> [10]
[1, 15, 2, 3, 8] -> [11]
[1, 15, 2, 3, 8] -> [12]
[1, 10, 15] -> [2]
[1, 10, 15] -> [3]
[1, 10, 15] -> [8]
[1, 10, 15] -> [11]
[1, 10, 15] -> [12]
[1, 11, 15] -> [2]
[1, 11, 15] -> [3]
[1, 11, 15] -> [8]
[1, 11, 15] -> [10]
[1, 11, 15] -> [12]
[1, 12, 15] -> [2]
[1, 12, 15] -> [3]
[1, 12, 15] -> [8]
[1, 12, 15] -> [10]
[1, 12, 15] -> [11]
[11, 15, 2, 3] -> [1]
[11, 15, 2, 3] -> [8]
[11, 15, 2, 3] -> [10]
[11, 15, 2, 3] -> [12]
[10, 15, 2] -> [1]
[10, 15, 2] -> [3]
[10, 15, 2] -> [8]
[10, 15, 2] -> [11]
[10, 15, 2] -> [12]
[12, 15, 2] -> [1]
[12, 15, 2] -> [3]
[12, 15, 2] -> [8]
[12, 15, 2] -> [10]
[12, 15, 2] -> [11]
[10, 11, 12, 15] -> [8]
number of minimal keys : 8
########################

schemata : [10, 13, 14, 15, 2, 4, 6, 7, 8]
FD set : 
[10, 13, 14, 2, 4, 6, 7, 8] -> [15]
[15, 2, 4, 6, 7] -> [8]
[15, 2, 4, 6, 7] -> [13]
[15, 2, 4, 6, 8] -> [7]
[15, 2, 4, 6, 8] -> [13]
[13, 15, 2, 4, 6] -> [7]
[13, 15, 2, 4, 6] -> [8]
[14, 15, 2, 4, 6] -> [7]
[14, 15, 2, 4, 6] -> [8]
[14, 15, 2, 4, 6] -> [10]
[15, 2, 4, 7, 8] -> [6]
[15, 2, 4, 7, 8] -> [13]
[13, 15, 2, 4, 7] -> [6]
[13, 15, 2, 4, 7] -> [8]
[14, 15, 2, 4, 7] -> [6]
[14, 15, 2, 4, 7] -> [8]
[14, 15, 2, 4, 7] -> [10]
[14, 15, 2, 4, 8] -> [6]
[14, 15, 2, 4, 8] -> [7]
[14, 15, 2, 4, 8] -> [10]
[14, 15, 2, 4] -> [13]
[14, 15, 2, 6, 7, 8] -> [4]
[14, 15, 2, 6, 7, 8] -> [10]
[14, 15, 2, 6, 7, 8] -> [13]
[13, 14, 15, 2, 6, 7] -> [4]
[13, 14, 15, 2, 6, 7] -> [8]
[13, 14, 15, 2, 6, 7] -> [10]
[13, 14, 15, 2, 6, 8] -> [4]
[13, 14, 15, 2, 6, 8] -> [7]
[13, 14, 15, 2, 6, 8] -> [10]
[10, 15, 2] -> [4]
[10, 15, 2] -> [6]
[10, 15, 2] -> [7]
[10, 15, 2] -> [8]
[10, 15, 2] -> [13]
[10, 15, 2] -> [14]
[10, 15, 4, 6, 7] -> [8]
[10, 15, 4, 6, 7] -> [13]
[10, 13, 14, 15, 4, 6, 8] -> [7]
[10, 14, 15, 4, 7] -> [8]
[10, 13, 14, 15, 6, 7, 8] -> [4]
number of minimal keys : 8
########################

schemata : [1, 11, 12, 13, 15, 2, 7, 8]
FD set : 
[1, 11, 12, 13, 2, 7, 8] -> [15]
[1, 15, 2, 7] -> [13]
[1, 15, 7, 8] -> [13]
[1, 11, 15] -> [2]
[1, 11, 15] -> [7]
[1, 11, 15] -> [8]
[1, 11, 15] -> [12]
[1, 11, 15] -> [13]
[1, 12, 15] -> [2]
[1, 12, 15] -> [7]
[1, 12, 15] -> [8]
[1, 12, 15] -> [11]
[1, 12, 15] -> [13]
[11, 15, 2, 7] -> [1]
[11, 15, 2, 7] -> [8]
[11, 15, 2, 7] -> [12]
[11, 15, 2, 7] -> [13]
[11, 13, 15, 2] -> [1]
[11, 13, 15, 2] -> [7]
[11, 13, 15, 2] -> [8]
[11, 13, 15, 2] -> [12]
[12, 15, 2] -> [1]
[12, 15, 2] -> [7]
[12, 15, 2] -> [8]
[12, 15, 2] -> [11]
[12, 15, 2] -> [13]
[11, 12, 13, 15, 7] -> [1]
[11, 12, 13, 15, 7] -> [2]
[11, 12, 13, 15, 7] -> [8]
number of minimal keys : 7
########################

schemata : [1, 11, 12, 13, 15, 6, 7, 8]
FD set : 
[1, 11, 12, 13, 6, 7, 8] -> [15]
[1, 15, 6, 7] -> [8]
[1, 15, 6, 7] -> [11]
[1, 15, 6, 7] -> [12]
[1, 15, 6, 7] -> [13]
[1, 15, 7, 8] -> [13]
[1, 11, 15] -> [6]
[1, 11, 15] -> [7]
[1, 11, 15] -> [8]
[1, 11, 15] -> [12]
[1, 11, 15] -> [13]
[1, 12, 15] -> [6]
[1, 12, 15] -> [7]
[1, 12, 15] -> [8]
[1, 12, 15] -> [11]
[1, 12, 15] -> [13]
[11, 12, 15, 6, 7] -> [1]
[11, 12, 15, 6, 7] -> [8]
[11, 12, 15, 6, 7] -> [13]
[11, 12, 13, 15, 6] -> [1]
[11, 12, 13, 15, 6] -> [7]
[11, 12, 13, 15, 6] -> [8]
[11, 12, 13, 15, 7] -> [1]
[11, 12, 13, 15, 7] -> [6]
[11, 12, 13, 15, 7] -> [8]
number of minimal keys : 7
########################

schemata : [11, 12, 13, 15, 2, 4, 6, 8]
FD set : 
[11, 12, 13, 2, 4, 6, 8] -> [15]
[15, 2, 4, 6, 8] -> [13]
[13, 15, 2, 4, 6] -> [8]
[11, 15, 2, 4] -> [6]
[11, 15, 2, 4] -> [8]
[11, 15, 2, 4] -> [12]
[11, 15, 2, 4] -> [13]
[11, 15, 2, 6] -> [4]
[11, 15, 2, 6] -> [8]
[11, 15, 2, 6] -> [12]
[11, 15, 2, 6] -> [13]
[11, 13, 15, 2] -> [4]
[11, 13, 15, 2] -> [6]
[11, 13, 15, 2] -> [8]
[11, 13, 15, 2] -> [12]
[12, 15, 2] -> [4]
[12, 15, 2] -> [6]
[12, 15, 2] -> [8]
[12, 15, 2] -> [11]
[12, 15, 2] -> [13]
[11, 13, 15, 4, 6] -> [8]
[11, 12, 15, 4] -> [2]
[11, 12, 15, 4] -> [6]
[11, 12, 15, 4] -> [8]
[11, 12, 15, 4] -> [13]
[11, 12, 13, 15, 6] -> [2]
[11, 12, 13, 15, 6] -> [4]
[11, 12, 13, 15, 6] -> [8]
number of minimal keys : 7
########################

schemata : [11, 13, 14, 15, 5, 6, 7, 8]
FD set : 
[11, 13, 14, 5, 6, 7, 8] -> [15]
[15, 5, 6, 7] -> [8]
[15, 5, 6, 7] -> [11]
[15, 5, 6, 7] -> [13]
[15, 5, 6, 7] -> [14]
[15, 5, 6, 8] -> [7]
[15, 5, 6, 8] -> [11]
[15, 5, 6, 8] -> [13]
[15, 5, 6, 8] -> [14]
[14, 15, 5, 6] -> [7]
[14, 15, 5, 6] -> [8]
[14, 15, 5, 6] -> [11]
[14, 15, 5, 6] -> [13]
[13, 15, 5, 7, 8] -> [6]
[13, 15, 5, 7, 8] -> [11]
[13, 15, 5, 7, 8] -> [14]
[13, 14, 15, 5, 7] -> [6]
[13, 14, 15, 5, 7] -> [11]
[14, 15, 5, 7] -> [8]
[11, 15, 5] -> [6]
[11, 15, 5] -> [7]
[11, 15, 5] -> [8]
[11, 15, 5] -> [13]
[11, 15, 5] -> [14]
[13, 14, 15, 5] -> [8]
number of minimal keys : 7
########################

schemata : [1, 11, 12, 13, 14, 3, 6, 7]
FD set : 
[1, 11, 12, 3, 6, 7] -> [13]
[1, 11, 12, 3, 6, 7] -> [14]
[1, 11, 13, 14, 3, 6, 7] -> [12]
[1, 11, 12, 14, 3, 7] -> [6]
[1, 11, 12, 14, 3, 7] -> [13]
[1, 11, 12, 13, 14, 3] -> [6]
[1, 11, 12, 13, 14, 3] -> [7]
[1, 11, 12, 14, 6, 7] -> [3]
[1, 11, 12, 14, 6, 7] -> [13]
[1, 11, 12, 13, 14, 7] -> [3]
[1, 11, 12, 13, 14, 7] -> [6]
number of minimal keys : 6
########################

schemata : [13, 14, 15, 2, 3, 6, 7, 9]
FD set : 
[13, 15, 2, 3, 6, 7] -> [9]
[13, 15, 2, 3, 6, 7] -> [14]
[14, 15, 2, 3, 6, 7] -> [9]
[14, 15, 2, 3, 6, 7] -> [13]
[13, 14, 15, 2, 3, 6] -> [7]
[13, 14, 15, 2, 3, 6] -> [9]
[13, 14, 15, 2, 3, 7, 9] -> [6]
[14, 15, 2, 6, 7, 9] -> [3]
[14, 15, 2, 6, 7, 9] -> [13]
[13, 14, 15, 2, 6, 7] -> [3]
[13, 14, 15, 2, 6, 7] -> [9]
number of minimal keys : 6
########################

schemata : [10, 12, 13, 15, 2, 4, 6, 7, 8]
FD set : 
[10, 12, 13, 2, 4, 6, 7, 8] -> [15]
[15, 2, 4, 6, 7] -> [8]
[15, 2, 4, 6, 7] -> [13]
[15, 2, 4, 6, 8] -> [7]
[15, 2, 4, 6, 8] -> [13]
[13, 15, 2, 4, 6] -> [7]
[13, 15, 2, 4, 6] -> [8]
[15, 2, 4, 7, 8] -> [6]
[15, 2, 4, 7, 8] -> [13]
[13, 15, 2, 4, 7] -> [6]
[13, 15, 2, 4, 7] -> [8]
[10, 15, 2] -> [4]
[10, 15, 2] -> [6]
[10, 15, 2] -> [7]
[10, 15, 2] -> [8]
[10, 15, 2] -> [12]
[10, 15, 2] -> [13]
[12, 15, 2] -> [4]
[12, 15, 2] -> [6]
[12, 15, 2] -> [7]
[12, 15, 2] -> [8]
[12, 15, 2] -> [10]
[12, 15, 2] -> [13]
[10, 15, 4, 6, 7] -> [8]
[10, 15, 4, 6, 7] -> [13]
[12, 13, 15, 4, 6, 7] -> [2]
[12, 13, 15, 4, 6, 7] -> [10]
[12, 15, 4, 6, 7] -> [8]
[10, 12, 15, 4, 6] -> [2]
[10, 12, 15, 4, 6] -> [7]
[10, 12, 15, 4, 6] -> [8]
[10, 12, 15, 4, 6] -> [13]
[10, 12, 13, 15, 4, 7] -> [2]
[10, 12, 13, 15, 4, 7] -> [6]
[12, 13, 15, 4, 7] -> [8]
[10, 12, 13, 15, 4] -> [8]
[10, 12, 15, 6, 7] -> [8]
[10, 12, 15, 6, 7] -> [13]
number of minimal keys : 6
########################

schemata : [0, 10, 12, 13, 14, 3, 5, 8]
FD set : 
[0, 3] -> [5]
[0, 3] -> [8]
[0, 3] -> [10]
[0, 3] -> [12]
[0, 3] -> [13]
[0, 3] -> [14]
[0, 14, 5, 8] -> [3]
[0, 14, 5, 8] -> [10]
[0, 14, 5, 8] -> [12]
[0, 14, 5, 8] -> [13]
[0, 10, 5] -> [3]
[0, 10, 5] -> [8]
[0, 10, 5] -> [12]
[0, 10, 5] -> [13]
[0, 10, 5] -> [14]
[0, 12, 5] -> [3]
[0, 12, 5] -> [8]
[0, 12, 5] -> [10]
[0, 12, 5] -> [13]
[0, 12, 5] -> [14]
[0, 13, 14, 5] -> [3]
[0, 13, 14, 5] -> [8]
[0, 13, 14, 5] -> [10]
[0, 13, 14, 5] -> [12]
[10, 12, 13, 14, 3, 5, 8] -> [0]
number of minimal keys : 6
########################

schemata : [1, 10, 12, 13, 14, 2, 3, 6]
FD set : 
[1, 10, 12, 13, 2, 3, 6] -> [14]
[1, 10, 12, 14, 2, 3, 6] -> [13]
[1, 10, 12, 13, 14, 2, 3] -> [6]
[1, 10, 12, 13, 14, 2, 6] -> [3]
[1, 10, 12, 13, 14, 3, 6] -> [2]
number of minimal keys : 5
########################

schemata : [0, 12, 13, 14, 15, 3, 6, 7]
FD set : 
[0, 3] -> [6]
[0, 3] -> [7]
[0, 3] -> [12]
[0, 3] -> [13]
[0, 3] -> [14]
[0, 3] -> [15]
[0, 15, 6] -> [3]
[0, 15, 6] -> [7]
[0, 15, 6] -> [12]
[0, 15, 6] -> [13]
[0, 15, 6] -> [14]
[0, 14, 15, 7] -> [3]
[0, 14, 15, 7] -> [6]
[0, 14, 15, 7] -> [12]
[0, 14, 15, 7] -> [13]
[0, 12, 15] -> [3]
[0, 12, 15] -> [6]
[0, 12, 15] -> [7]
[0, 12, 15] -> [13]
[0, 12, 15] -> [14]
[12, 13, 14, 15, 3, 6, 7] -> [0]
number of minimal keys : 5
########################

schemata : [0, 10, 11, 13, 14, 5, 8]
FD set : 
[0, 14, 5, 8] -> [10]
[0, 14, 5, 8] -> [11]
[0, 14, 5, 8] -> [13]
[0, 10, 5] -> [8]
[0, 10, 5] -> [11]
[0, 10, 5] -> [13]
[0, 10, 5] -> [14]
[0, 11, 5] -> [8]
[0, 11, 5] -> [10]
[0, 11, 5] -> [13]
[0, 11, 5] -> [14]
[0, 13, 14, 5] -> [8]
[0, 13, 14, 5] -> [10]
[0, 13, 14, 5] -> [11]
[10, 11, 13, 14, 5, 8] -> [0]
number of minimal keys : 5
########################

schemata : [0, 11, 13, 14, 2, 6, 8]
FD set : 
[0, 13, 14, 2, 6, 8] -> [11]
[0, 11, 2, 6] -> [8]
[0, 11, 13, 2, 6] -> [14]
[0, 11, 14, 2, 6] -> [13]
[0, 11, 13, 14, 2] -> [6]
[0, 11, 13, 14, 2] -> [8]
number of minimal keys : 4
########################

schemata : [1, 10, 12, 14, 2, 3, 6, 7]
FD set : 
[1, 12, 14, 2, 3, 6, 7] -> [10]
[1, 10, 12, 14, 2, 3, 6] -> [7]
[1, 10, 12, 2, 6, 7] -> [3]
[1, 10, 12, 2, 6, 7] -> [14]
[1, 10, 12, 14, 3, 6, 7] -> [2]
number of minimal keys : 4
########################

schemata : [1, 10, 12, 13, 2, 3, 6, 7]
FD set : 
[1, 10, 12, 13, 2, 3, 6] -> [7]
[1, 10, 12, 13, 2, 3, 7] -> [6]
[1, 10, 12, 2, 6, 7] -> [3]
[1, 10, 12, 2, 6, 7] -> [13]
[1, 10, 12, 13, 3, 6, 7] -> [2]
number of minimal keys : 4
########################

schemata : [1, 10, 12, 13, 14, 2, 3, 7]
FD set : 
[1, 10, 12, 13, 2, 3, 7] -> [14]
[1, 10, 12, 13, 14, 2, 3] -> [7]
[1, 10, 12, 13, 14, 2, 7] -> [3]
[1, 10, 12, 13, 14, 3, 7] -> [2]
number of minimal keys : 4
########################

schemata : [1, 11, 12, 13, 3, 4, 6, 7]
FD set : 
[1, 11, 13, 3, 4, 6, 7] -> [12]
[1, 11, 12, 3, 6, 7] -> [4]
[1, 11, 12, 3, 6, 7] -> [13]
[1, 11, 12, 4, 6] -> [3]
[1, 11, 12, 4, 6] -> [7]
[1, 11, 12, 4, 6] -> [13]
[1, 11, 12, 4, 7] -> [3]
[1, 11, 12, 4, 7] -> [6]
[1, 11, 12, 4, 7] -> [13]
number of minimal keys : 4
########################

schemata : [10, 11, 12, 13, 14, 15, 3]
FD set : 
[10, 11, 12, 13, 15, 3] -> [14]
[10, 11, 14, 15, 3] -> [12]
[10, 11, 14, 15, 3] -> [13]
[11, 12, 14, 15, 3] -> [10]
[11, 12, 14, 15, 3] -> [13]
[10, 11, 12, 14, 15] -> [3]
[10, 11, 12, 14, 15] -> [13]
number of minimal keys : 4
########################

schemata : [0, 1, 11, 13, 6]
FD set : 
[0, 1, 11, 6] -> [13]
[0, 1, 13, 6] -> [11]
[0, 1, 11, 13] -> [6]
number of minimal keys : 3
########################

schemata : [1, 10, 12, 13, 2, 3, 4, 7]
FD set : 
[1, 10, 12, 13, 2, 3, 4] -> [7]
[1, 10, 12, 13, 2, 3, 7] -> [4]
[1, 10, 12, 4, 7] -> [2]
[1, 10, 12, 4, 7] -> [3]
[1, 10, 12, 4, 7] -> [13]
number of minimal keys : 3
########################

schemata : [1, 14, 15, 2, 3, 9]
FD set : 
[1, 15, 2, 3, 9] -> [14]
[1, 14, 15, 2, 3] -> [9]
[1, 14, 15, 2, 9] -> [3]
number of minimal keys : 3
########################

schemata : [1, 13, 14, 15, 2, 3]
FD set : 
[1, 13, 15, 2, 3] -> [14]
[1, 14, 15, 2, 3] -> [13]
[1, 13, 14, 15, 2] -> [3]
number of minimal keys : 3
########################

schemata : [1, 13, 14, 15, 3, 8]
FD set : 
[1, 13, 15, 3, 8] -> [14]
[1, 14, 15, 3, 8] -> [13]
[1, 13, 14, 15, 3] -> [8]
number of minimal keys : 3
########################

schemata : [1, 13, 14, 15, 3, 7]
FD set : 
[1, 15, 3, 7] -> [13]
[1, 15, 3, 7] -> [14]
[1, 13, 14, 15, 3] -> [7]
[1, 13, 14, 15, 7] -> [3]
number of minimal keys : 3
########################

schemata : [1, 10, 11, 12, 13, 14, 6]
FD set : 
[1, 10, 11, 12, 6] -> [13]
[1, 10, 11, 12, 6] -> [14]
[1, 10, 11, 13, 14, 6] -> [12]
[1, 10, 11, 12, 13, 14] -> [6]
number of minimal keys : 3
########################

schemata : [10, 12, 14, 2, 3, 4, 6, 7]
FD set : 
[10, 12, 2, 3, 4, 6, 7] -> [14]
[10, 12, 14, 2, 3, 4, 7] -> [6]
[10, 12, 14, 2, 4, 6, 7] -> [3]
number of minimal keys : 3
########################

schemata : [14, 15, 2, 3, 4, 7, 9]
FD set : 
[15, 2, 3, 4, 7] -> [9]
[15, 2, 3, 4, 7] -> [14]
[14, 15, 2, 3, 4, 9] -> [7]
[14, 15, 2, 4, 7] -> [3]
[14, 15, 2, 4, 7] -> [9]
number of minimal keys : 3
########################

schemata : [11, 12, 14, 2, 3, 4, 6, 7]
FD set : 
[11, 12, 2, 3, 4, 6] -> [7]
[11, 12, 2, 3, 4, 6] -> [14]
[11, 12, 14, 2, 3, 6, 7] -> [4]
[11, 12, 14, 2, 4, 7] -> [3]
[11, 12, 14, 2, 4, 7] -> [6]
number of minimal keys : 3
########################

schemata : [10, 11, 12, 13, 14, 2, 3, 6]
FD set : 
[10, 11, 12, 14, 2, 3, 6] -> [13]
[10, 11, 12, 13, 14, 2, 3] -> [6]
[10, 11, 12, 13, 14, 2, 6] -> [3]
number of minimal keys : 3
########################

schemata : [1, 14, 2, 4, 5, 6, 7]
FD set : 
[1, 4] -> [5]
[1, 5] -> [4]
[14, 2, 4, 5, 6, 7] -> [1]
number of minimal keys : 3
########################

schemata : [12, 14, 15, 3, 4, 6, 7]
FD set : 
[12, 15, 3, 4, 6, 7] -> [14]
[12, 14, 15, 3, 4, 6] -> [7]
[12, 14, 15, 3, 4, 7] -> [6]
number of minimal keys : 3
########################

schemata : [11, 13, 14, 15, 3, 4, 7]
FD set : 
[11, 13, 15, 3, 4, 7] -> [14]
[11, 14, 15, 3, 4, 7] -> [13]
[11, 13, 14, 15, 3, 4] -> [7]
number of minimal keys : 3
########################

schemata : [10, 12, 14, 15, 2, 3, 6]
FD set : 
[10, 15, 2] -> [3]
[10, 15, 2] -> [6]
[10, 15, 2] -> [12]
[10, 15, 2] -> [14]
[12, 15, 2] -> [3]
[12, 15, 2] -> [6]
[12, 15, 2] -> [10]
[12, 15, 2] -> [14]
[10, 12, 14, 15, 3, 6] -> [2]
number of minimal keys : 3
########################

schemata : [10, 12, 13, 14, 15, 3, 7]
FD set : 
[10, 12, 13, 15, 3, 7] -> [14]
[10, 12, 14, 15, 3, 7] -> [13]
[10, 12, 13, 14, 15, 7] -> [3]
number of minimal keys : 3
########################

schemata : [10, 13, 14, 3, 4, 5, 6, 7, 8]
FD set : 
[10, 13, 3, 5, 6, 7] -> [4]
[10, 13, 3, 5, 6, 7] -> [8]
[10, 13, 3, 5, 6, 7] -> [14]
[10, 14, 3, 5, 6, 7] -> [4]
[10, 14, 3, 5, 6, 7] -> [8]
[10, 14, 3, 5, 6, 7] -> [13]
[10, 13, 14, 3, 5, 6] -> [4]
[10, 13, 14, 4, 5, 6, 7, 8] -> [3]
number of minimal keys : 3
########################

schemata : [11, 13, 14, 15, 4, 6, 7]
FD set : 
[11, 13, 15, 4, 6, 7] -> [14]
[11, 14, 15, 4, 6, 7] -> [13]
[11, 13, 14, 15, 4, 6] -> [7]
number of minimal keys : 3
########################

schemata : [11, 12, 13, 14, 15, 4, 6]
FD set : 
[11, 13, 14, 15, 4, 6] -> [12]
[11, 12, 15, 4] -> [6]
[11, 12, 15, 4] -> [13]
[11, 12, 15, 4] -> [14]
[11, 12, 13, 15, 6] -> [4]
[11, 12, 13, 15, 6] -> [14]
number of minimal keys : 3
########################

schemata : [10, 12, 13, 15, 3, 4, 7]
FD set : 
[10, 12, 15, 3, 4] -> [7]
[10, 12, 15, 3, 4] -> [13]
[10, 12, 13, 15, 3, 7] -> [4]
[10, 12, 13, 15, 4, 7] -> [3]
number of minimal keys : 3
########################

schemata : [10, 12, 14, 15, 4, 6, 7]
FD set : 
[10, 12, 15, 4, 6] -> [7]
[10, 12, 15, 4, 6] -> [14]
[10, 12, 14, 15, 4, 7] -> [6]
[10, 12, 14, 15, 6, 7] -> [4]
number of minimal keys : 3
########################

schemata : [10, 11, 13, 14, 5, 6, 7]
FD set : 
[10, 11, 13, 5, 6, 7] -> [14]
[10, 11, 13, 14, 5, 6] -> [7]
[10, 11, 14, 5, 7] -> [6]
[10, 11, 14, 5, 7] -> [13]
number of minimal keys : 3
########################

schemata : [10, 12, 13, 14, 15, 2, 7]
FD set : 
[10, 15, 2] -> [7]
[10, 15, 2] -> [12]
[10, 15, 2] -> [13]
[10, 15, 2] -> [14]
[12, 15, 2] -> [7]
[12, 15, 2] -> [10]
[12, 15, 2] -> [13]
[12, 15, 2] -> [14]
[10, 12, 13, 14, 15, 7] -> [2]
number of minimal keys : 3
########################

schemata : [11, 12, 13, 14, 15, 7, 8]
FD set : 
[11, 12, 13, 15, 7] -> [8]
[11, 12, 13, 15, 7] -> [14]
[11, 12, 14, 15, 7] -> [8]
[11, 12, 14, 15, 7] -> [13]
[11, 12, 13, 14, 15, 8] -> [7]
number of minimal keys : 3
########################

schemata : [0, 1, 2, 7, 8]
FD set : 
[0, 1, 2, 7] -> [8]
[0, 1, 7, 8] -> [2]
number of minimal keys : 2
########################

schemata : [0, 1, 13, 2, 3, 8]
FD set : 
[0, 1, 13, 2, 8] -> [3]
[0, 3] -> [1]
[0, 3] -> [2]
[0, 3] -> [8]
[0, 3] -> [13]
number of minimal keys : 2
########################

schemata : [0, 1, 13, 14, 2]
FD set : 
[0, 1, 14, 2] -> [13]
[0, 1, 13, 14] -> [2]
number of minimal keys : 2
########################

schemata : [0, 1, 11, 6, 8]
FD set : 
[0, 1, 11, 6] -> [8]
[0, 1, 11, 8] -> [6]
number of minimal keys : 2
########################

schemata : [0, 1, 11, 13, 8]
FD set : 
[0, 1, 11, 8] -> [13]
[0, 1, 11, 13] -> [8]
number of minimal keys : 2
########################

schemata : [0, 13, 2, 4, 6, 7]
FD set : 
[0, 2, 4, 6] -> [7]
[0, 2, 4, 6] -> [13]
[0, 13, 2, 4, 7] -> [6]
number of minimal keys : 2
########################

schemata : [0, 14, 2, 3, 4, 7]
FD set : 
[0, 14, 2, 4, 7] -> [3]
[0, 3] -> [2]
[0, 3] -> [4]
[0, 3] -> [7]
[0, 3] -> [14]
number of minimal keys : 2
########################

schemata : [0, 11, 13, 14, 2, 4]
FD set : 
[0, 11, 2, 4] -> [13]
[0, 11, 2, 4] -> [14]
[0, 13, 14, 2, 4] -> [11]
number of minimal keys : 2
########################

schemata : [0, 11, 14, 2, 7, 8]
FD set : 
[0, 11, 2, 7, 8] -> [14]
[0, 11, 14, 2, 7] -> [8]
number of minimal keys : 2
########################

schemata : [0, 10, 12, 2, 3, 7]
FD set : 
[0, 10, 12, 2, 7] -> [3]
[0, 3] -> [2]
[0, 3] -> [7]
[0, 3] -> [10]
[0, 3] -> [12]
number of minimal keys : 2
########################

schemata : [0, 10, 13, 2, 6, 7]
FD set : 
[0, 10, 2, 6] -> [7]
[0, 10, 2, 6] -> [13]
[0, 10, 13, 2, 7] -> [6]
number of minimal keys : 2
########################

schemata : [0, 11, 13, 14, 2, 7]
FD set : 
[0, 11, 13, 2, 7] -> [14]
[0, 11, 14, 2, 7] -> [13]
number of minimal keys : 2
########################

schemata : [0, 11, 14, 2, 3, 7]
FD set : 
[0, 11, 14, 2, 7] -> [3]
[0, 3] -> [2]
[0, 3] -> [7]
[0, 3] -> [11]
[0, 3] -> [14]
number of minimal keys : 2
########################

schemata : [0, 12, 13, 2, 3, 7]
FD set : 
[0, 12, 13, 2, 7] -> [3]
[0, 3] -> [2]
[0, 3] -> [7]
[0, 3] -> [12]
[0, 3] -> [13]
number of minimal keys : 2
########################

schemata : [0, 12, 14, 2, 3, 7]
FD set : 
[0, 12, 14, 2, 7] -> [3]
[0, 3] -> [2]
[0, 3] -> [7]
[0, 3] -> [12]
[0, 3] -> [14]
number of minimal keys : 2
########################

schemata : [0, 10, 12, 13, 2, 3]
FD set : 
[0, 10, 12, 13, 2] -> [3]
[0, 3] -> [2]
[0, 3] -> [10]
[0, 3] -> [12]
[0, 3] -> [13]
number of minimal keys : 2
########################

schemata : [0, 11, 12, 13, 14, 2]
FD set : 
[0, 11, 12, 2] -> [13]
[0, 11, 12, 2] -> [14]
[0, 12, 13, 14, 2] -> [11]
number of minimal keys : 2
########################

schemata : [0, 11, 12, 13, 3, 4, 6, 8]
FD set : 
[0, 3] -> [4]
[0, 3] -> [6]
[0, 3] -> [8]
[0, 3] -> [11]
[0, 3] -> [12]
[0, 3] -> [13]
[0, 11, 12, 13, 4, 6, 8] -> [3]
number of minimal keys : 2
########################

schemata : [0, 11, 12, 14, 3, 4, 6, 8]
FD set : 
[0, 3] -> [4]
[0, 3] -> [6]
[0, 3] -> [8]
[0, 3] -> [11]
[0, 3] -> [12]
[0, 3] -> [14]
[0, 11, 12, 14, 4, 6, 8] -> [3]
number of minimal keys : 2
########################

schemata : [0, 11, 12, 14, 4, 7, 8]
FD set : 
[0, 11, 12, 4, 7, 8] -> [14]
[0, 11, 12, 14, 4, 7] -> [8]
number of minimal keys : 2
########################

schemata : [0, 10, 11, 12, 3, 4, 7]
FD set : 
[0, 3] -> [4]
[0, 3] -> [7]
[0, 3] -> [10]
[0, 3] -> [11]
[0, 3] -> [12]
[0, 10, 11, 12, 4, 7] -> [3]
number of minimal keys : 2
########################

schemata : [0, 10, 11, 13, 3, 4, 7]
FD set : 
[0, 3] -> [4]
[0, 3] -> [7]
[0, 3] -> [10]
[0, 3] -> [11]
[0, 3] -> [13]
[0, 10, 11, 13, 4, 7] -> [3]
number of minimal keys : 2
########################

schemata : [0, 10, 11, 14, 4, 6, 7]
FD set : 
[0, 10, 11, 4, 6] -> [7]
[0, 10, 11, 14, 4, 7] -> [6]
number of minimal keys : 2
########################

schemata : [0, 10, 12, 14, 3, 4, 7]
FD set : 
[0, 3] -> [4]
[0, 3] -> [7]
[0, 3] -> [10]
[0, 3] -> [12]
[0, 3] -> [14]
[0, 10, 12, 14, 4, 7] -> [3]
number of minimal keys : 2
########################

schemata : [0, 11, 12, 13, 4, 7, 8]
FD set : 
[0, 11, 12, 4, 7, 8] -> [13]
[0, 11, 12, 13, 4, 7] -> [8]
number of minimal keys : 2
########################

schemata : [0, 11, 12, 14, 4, 6, 7]
FD set : 
[0, 11, 12, 4, 6, 7] -> [14]
[0, 11, 12, 14, 4, 7] -> [6]
number of minimal keys : 2
########################

schemata : [0, 10, 11, 12, 13, 4, 8]
FD set : 
[0, 10, 11, 12, 4, 8] -> [13]
[0, 10, 11, 12, 13, 4] -> [8]
number of minimal keys : 2
########################

schemata : [0, 10, 11, 12, 13, 14, 4]
FD set : 
[0, 10, 11, 12, 13, 4] -> [14]
[0, 11, 12, 13, 14, 4] -> [10]
number of minimal keys : 2
########################

schemata : [0, 14, 15, 5, 8]
FD set : 
[0, 14, 5, 8] -> [15]
[0, 15, 5] -> [8]
[0, 15, 5] -> [14]
number of minimal keys : 2
########################

schemata : [0, 13, 14, 15, 5]
FD set : 
[0, 13, 14, 5] -> [15]
[0, 15, 5] -> [13]
[0, 15, 5] -> [14]
number of minimal keys : 2
########################

schemata : [0, 10, 11, 13, 14, 6, 7, 8]
FD set : 
[0, 10, 11, 14, 6, 7, 8] -> [13]
[0, 10, 11, 13, 6, 7] -> [8]
number of minimal keys : 2
########################

schemata : [0, 10, 12, 13, 14, 6, 7, 8]
FD set : 
[0, 10, 12, 14, 6, 7, 8] -> [13]
[0, 10, 12, 13, 14, 6, 7] -> [8]
number of minimal keys : 2
########################

schemata : [0, 11, 12, 13, 3, 6, 7, 8]
FD set : 
[0, 3] -> [6]
[0, 3] -> [7]
[0, 3] -> [8]
[0, 3] -> [11]
[0, 3] -> [12]
[0, 3] -> [13]
[0, 11, 12, 13, 6, 7, 8] -> [3]
number of minimal keys : 2
########################

schemata : [0, 10, 11, 12, 13, 3, 7, 8]
FD set : 
[0, 3] -> [7]
[0, 3] -> [8]
[0, 3] -> [10]
[0, 3] -> [11]
[0, 3] -> [12]
[0, 3] -> [13]
[0, 10, 11, 12, 13, 7, 8] -> [3]
number of minimal keys : 2
########################

schemata : [0, 11, 12, 15]
FD set : 
[0, 11, 15] -> [12]
[0, 12, 15] -> [11]
number of minimal keys : 2
########################

schemata : [1, 10, 11, 13, 2, 6, 7]
FD set : 
[1, 10, 11, 2, 6, 7] -> [13]
[1, 10, 11, 13, 2, 6] -> [7]
number of minimal keys : 2
########################

schemata : [1, 10, 13, 14, 2, 3, 6, 7]
FD set : 
[1, 10, 13, 14, 2, 6, 7] -> [3]
[1, 10, 13, 14, 3, 6, 7] -> [2]
number of minimal keys : 2
########################

schemata : [1, 14, 15, 2, 6, 9]
FD set : 
[1, 15, 2, 6, 9] -> [14]
[1, 14, 15, 2, 9] -> [6]
number of minimal keys : 2
########################

schemata : [1, 10, 11, 12, 13, 2, 6]
FD set : 
[1, 10, 11, 13, 2, 6] -> [12]
[1, 10, 11, 12, 6] -> [2]
[1, 10, 11, 12, 6] -> [13]
number of minimal keys : 2
########################

schemata : [1, 10, 11, 14, 2, 3, 6]
FD set : 
[1, 10, 11, 14, 2, 6] -> [3]
[1, 10, 11, 14, 3, 6] -> [2]
number of minimal keys : 2
########################

schemata : [1, 13, 14, 15, 2, 8]
FD set : 
[1, 14, 15, 2, 8] -> [13]
[1, 13, 14, 15, 2] -> [8]
number of minimal keys : 2
########################

schemata : [1, 10, 11, 12, 13, 2, 3]
FD set : 
[1, 10, 11, 12, 13, 2] -> [3]
[1, 10, 11, 12, 13, 3] -> [2]
number of minimal keys : 2
########################

schemata : [1, 10, 11, 12, 13, 14, 2]
FD set : 
[1, 10, 11, 12, 14, 2] -> [13]
[1, 10, 11, 12, 13, 14] -> [2]
number of minimal keys : 2
########################

schemata : [1, 12, 13, 14, 2, 3, 4, 7]
FD set : 
[1, 12, 14, 2, 3, 4, 7] -> [13]
[1, 12, 13, 14, 3, 4, 7] -> [2]
number of minimal keys : 2
########################

schemata : [1, 14, 15, 3, 4, 9]
FD set : 
[1, 15, 3, 4, 9] -> [14]
[1, 14, 15, 4] -> [3]
[1, 14, 15, 4] -> [9]
number of minimal keys : 2
########################

schemata : [1, 12, 13, 3, 5, 6, 7, 8]
FD set : 
[1, 12, 3, 5, 6, 7, 8] -> [13]
[1, 12, 13, 5, 6, 7] -> [8]
number of minimal keys : 2
########################

schemata : [1, 10, 11, 13, 3, 6, 7]
FD set : 
[1, 10, 11, 3, 6, 7] -> [13]
[1, 10, 11, 13, 3, 6] -> [7]
number of minimal keys : 2
########################

schemata : [1, 10, 11, 12, 13, 3, 6]
FD set : 
[1, 10, 11, 13, 3, 6] -> [12]
[1, 10, 11, 12, 6] -> [3]
[1, 10, 11, 12, 6] -> [13]
number of minimal keys : 2
########################

schemata : [1, 10, 11, 12, 14, 2, 3]
FD set : 
[1, 10, 11, 12, 14, 2] -> [3]
[1, 10, 11, 12, 14, 3] -> [2]
number of minimal keys : 2
########################

schemata : [1, 11, 12, 13, 14, 3, 5]
FD set : 
[1, 11, 12, 13, 14, 3] -> [5]
[1, 11, 12, 14, 5] -> [3]
[1, 11, 12, 14, 5] -> [13]
number of minimal keys : 2
########################

schemata : [1, 11, 12, 13, 2, 4, 8]
FD set : 
[1, 11, 12, 2, 4] -> [8]
[1, 11, 12, 2, 4] -> [13]
[1, 11, 12, 13, 4, 8] -> [2]
number of minimal keys : 2
########################

schemata : [1, 15, 4, 8, 9]
FD set : 
[1, 15, 4, 8] -> [9]
[1, 15, 4, 9] -> [8]
number of minimal keys : 2
########################

schemata : [1, 10, 12, 13, 14, 6, 7]
FD set : 
[1, 10, 12, 13, 6, 7] -> [14]
[1, 10, 12, 13, 14, 7] -> [6]
number of minimal keys : 2
########################

schemata : [1, 11, 12, 13, 14, 2, 6, 8]
FD set : 
[1, 11, 12, 2, 6] -> [8]
[1, 11, 12, 13, 14, 2] -> [8]
[1, 11, 12, 13, 14, 6, 8] -> [2]
number of minimal keys : 2
########################

schemata : [1, 13, 15, 6, 8, 9]
FD set : 
[1, 15, 6, 8] -> [9]
[1, 13, 15, 6, 9] -> [8]
[1, 13, 15, 8] -> [9]
number of minimal keys : 2
########################

schemata : [1, 14, 15, 6, 8, 9]
FD set : 
[1, 15, 6, 8] -> [9]
[1, 14, 15, 6, 9] -> [8]
[1, 14, 15, 8] -> [9]
number of minimal keys : 2
########################

schemata : [1, 12, 13, 14, 15, 6]
FD set : 
[1, 13, 14, 15, 6] -> [12]
[1, 12, 15] -> [6]
[1, 12, 15] -> [13]
[1, 12, 15] -> [14]
number of minimal keys : 2
########################

schemata : [1, 14, 15, 3, 7, 9]
FD set : 
[1, 15, 3, 7] -> [9]
[1, 15, 3, 7] -> [14]
[1, 14, 15, 7, 9] -> [3]
number of minimal keys : 2
########################

schemata : [1, 10, 11, 13, 14, 3, 7]
FD set : 
[1, 10, 11, 13, 14, 3] -> [7]
[1, 10, 11, 13, 14, 7] -> [3]
number of minimal keys : 2
########################

schemata : [1, 13, 14, 15, 7, 9]
FD set : 
[1, 14, 15, 7, 9] -> [13]
[1, 13, 14, 15, 7] -> [9]
number of minimal keys : 2
########################

schemata : [1, 13, 14, 15, 8, 9]
FD set : 
[1, 13, 15, 8] -> [9]
[1, 14, 15, 8] -> [9]
[1, 13, 14, 15, 9] -> [8]
number of minimal keys : 2
########################

schemata : [1, 10, 11, 12, 13, 14, 8]
FD set : 
[1, 10, 11, 12, 13, 8] -> [14]
[1, 10, 11, 12, 13, 14] -> [8]
number of minimal keys : 2
########################

schemata : [10, 13, 14, 2, 3, 4, 6, 7, 8]
FD set : 
[10, 13, 14, 2, 3, 4, 6, 7] -> [8]
[10, 13, 14, 2, 4, 6, 7, 8] -> [3]
number of minimal keys : 2
########################

schemata : [12, 13, 15, 2, 3, 4, 8]
FD set : 
[13, 15, 2, 3, 4, 8] -> [12]
[12, 15, 2] -> [3]
[12, 15, 2] -> [4]
[12, 15, 2] -> [8]
[12, 15, 2] -> [13]
number of minimal keys : 2
########################

schemata : [10, 11, 12, 14, 2, 3, 4]
FD set : 
[10, 11, 12, 2, 3, 4] -> [14]
[10, 11, 12, 14, 2, 4] -> [3]
number of minimal keys : 2
########################

schemata : [10, 13, 2, 3, 5, 6, 7]
FD set : 
[10, 2, 3, 5, 6, 7] -> [13]
[10, 13, 2, 3, 5, 6] -> [7]
number of minimal keys : 2
########################

schemata : [10, 13, 14, 2, 3, 5, 7]
FD set : 
[10, 13, 2, 3, 5, 7] -> [14]
[10, 14, 2, 3, 5, 7] -> [13]
number of minimal keys : 2
########################

schemata : [10, 12, 2, 3, 5, 6, 8]
FD set : 
[10, 12, 2, 3, 5, 8] -> [6]
[10, 12, 2, 5, 6] -> [3]
[10, 12, 2, 5, 6] -> [8]
number of minimal keys : 2
########################

schemata : [10, 11, 12, 13, 2, 3, 6, 7]
FD set : 
[10, 11, 12, 2, 3, 6, 7] -> [13]
[10, 11, 12, 13, 2, 6, 7] -> [3]
number of minimal keys : 2
########################

schemata : [12, 13, 15, 2, 3, 6, 7]
FD set : 
[13, 15, 2, 3, 6, 7] -> [12]
[12, 15, 2] -> [3]
[12, 15, 2] -> [6]
[12, 15, 2] -> [7]
[12, 15, 2] -> [13]
number of minimal keys : 2
########################

schemata : [12, 14, 15, 2, 3, 6, 7]
FD set : 
[14, 15, 2, 3, 6, 7] -> [12]
[12, 15, 2] -> [3]
[12, 15, 2] -> [6]
[12, 15, 2] -> [7]
[12, 15, 2] -> [14]
number of minimal keys : 2
########################

schemata : [12, 14, 15, 2, 3, 6, 8]
FD set : 
[14, 15, 2, 3, 6, 8] -> [12]
[12, 15, 2] -> [3]
[12, 15, 2] -> [6]
[12, 15, 2] -> [8]
[12, 15, 2] -> [14]
number of minimal keys : 2
########################

schemata : [12, 13, 14, 15, 2, 3, 6]
FD set : 
[13, 14, 15, 2, 3, 6] -> [12]
[12, 15, 2] -> [3]
[12, 15, 2] -> [6]
[12, 15, 2] -> [13]
[12, 15, 2] -> [14]
number of minimal keys : 2
########################

schemata : [13, 15, 2, 4, 6, 9]
FD set : 
[15, 2, 4, 6, 9] -> [13]
[13, 15, 2, 4, 6] -> [9]
number of minimal keys : 2
########################

schemata : [10, 11, 12, 14, 2, 4, 6]
FD set : 
[10, 11, 12, 2, 4, 6] -> [14]
[10, 11, 12, 14, 2, 4] -> [6]
number of minimal keys : 2
########################

schemata : [10, 11, 13, 14, 2, 4, 6, 7]
FD set : 
[10, 11, 2, 4, 6, 7] -> [13]
[10, 11, 2, 4, 6, 7] -> [14]
[10, 11, 13, 14, 2, 4, 6] -> [7]
number of minimal keys : 2
########################

schemata : [13, 15, 2, 4, 7, 9]
FD set : 
[15, 2, 4, 7, 9] -> [13]
[13, 15, 2, 4, 7] -> [9]
number of minimal keys : 2
########################

schemata : [10, 11, 12, 13, 2, 4, 7]
FD set : 
[10, 11, 12, 2, 4, 7] -> [13]
[10, 11, 12, 13, 2, 4] -> [7]
number of minimal keys : 2
########################

schemata : [10, 11, 13, 14, 2, 3, 4, 7]
FD set : 
[10, 11, 2, 3, 4, 7] -> [14]
[10, 11, 13, 14, 2, 4, 7] -> [3]
number of minimal keys : 2
########################

schemata : [10, 11, 12, 13, 2, 4, 6]
FD set : 
[10, 11, 12, 2, 4, 6] -> [13]
[10, 11, 12, 13, 2, 4] -> [6]
number of minimal keys : 2
########################

schemata : [12, 13, 14, 2, 5, 6, 7]
FD set : 
[12, 13, 2, 5, 6, 7] -> [14]
[12, 14, 2, 5, 6] -> [7]
[12, 14, 2, 5, 6] -> [13]
number of minimal keys : 2
########################

schemata : [10, 13, 14, 2, 5, 6, 7]
FD set : 
[10, 14, 2, 5, 6, 7] -> [13]
[10, 13, 14, 2, 5, 6] -> [7]
number of minimal keys : 2
########################

schemata : [10, 11, 14, 2, 5, 6]
FD set : 
[11, 14, 2, 5, 6] -> [10]
[10, 11, 2, 5] -> [6]
[10, 11, 2, 5] -> [14]
number of minimal keys : 2
########################

schemata : [12, 13, 14, 2, 5, 7, 8]
FD set : 
[12, 14, 2, 5, 7, 8] -> [13]
[12, 13, 14, 2, 5, 7] -> [8]
number of minimal keys : 2
########################

schemata : [10, 12, 13, 2, 5, 6, 8]
FD set : 
[10, 12, 2, 5, 6] -> [8]
[10, 12, 2, 5, 6] -> [13]
[10, 12, 13, 2, 5, 8] -> [6]
number of minimal keys : 2
########################

schemata : [13, 14, 15, 2, 5]
FD set : 
[13, 15, 2, 5] -> [14]
[14, 15, 2, 5] -> [13]
number of minimal keys : 2
########################

schemata : [12, 13, 14, 15, 2, 6, 7]
FD set : 
[13, 14, 15, 2, 6, 7] -> [12]
[12, 15, 2] -> [6]
[12, 15, 2] -> [7]
[12, 15, 2] -> [13]
[12, 15, 2] -> [14]
number of minimal keys : 2
########################

schemata : [10, 12, 13, 3, 4, 5, 7, 8]
FD set : 
[10, 12, 3, 4, 5, 7, 8] -> [13]
[10, 12, 13, 3, 5] -> [4]
[10, 12, 13, 5, 7] -> [8]
number of minimal keys : 2
########################

schemata : [11, 13, 15, 3, 4, 6, 8, 9]
FD set : 
[11, 15, 3, 4, 6, 8, 9] -> [13]
[11, 13, 15, 3, 4] -> [8]
[11, 13, 15, 3, 6] -> [9]
[11, 13, 15, 4, 6] -> [8]
[11, 13, 15, 4] -> [9]
number of minimal keys : 2
########################

schemata : [12, 13, 14, 15, 3, 4, 6]
FD set : 
[12, 13, 15, 3, 4, 6] -> [14]
[12, 14, 15, 3, 4, 6] -> [13]
number of minimal keys : 2
########################

schemata : [10, 13, 14, 15, 3, 4, 7]
FD set : 
[10, 14, 15, 3, 4, 7] -> [13]
[10, 13, 14, 15, 4, 7] -> [3]
number of minimal keys : 2
########################

schemata : [12, 13, 14, 15, 3, 4, 7]
FD set : 
[12, 14, 15, 3, 4, 7] -> [13]
[12, 13, 14, 15, 4, 7] -> [3]
number of minimal keys : 2
########################

schemata : [10, 11, 13, 15, 3, 4]
FD set : 
[10, 11, 15, 3, 4] -> [13]
[10, 11, 13, 15, 4] -> [3]
number of minimal keys : 2
########################

schemata : [11, 13, 14, 15, 3, 4, 6]
FD set : 
[11, 13, 14, 15, 3, 4] -> [6]
[11, 13, 14, 15, 4, 6] -> [3]
number of minimal keys : 2
########################

schemata : [12, 14, 2, 3, 5, 6, 7]
FD set : 
[12, 14, 2, 5, 6] -> [3]
[12, 14, 2, 5, 6] -> [7]
[12, 14, 3, 5, 6, 7] -> [2]
number of minimal keys : 2
########################

schemata : [10, 11, 14, 3, 5, 6]
FD set : 
[10, 11, 3, 5, 6] -> [14]
[10, 11, 14, 5, 6] -> [3]
number of minimal keys : 2
########################

schemata : [11, 12, 13, 14, 3, 5, 6]
FD set : 
[11, 12, 13, 3, 5, 6] -> [14]
[11, 12, 14, 5, 6] -> [3]
[11, 12, 14, 5, 6] -> [13]
number of minimal keys : 2
########################

schemata : [1, 11, 12, 3, 5, 7, 8]
FD set : 
[1, 11, 12, 5, 7] -> [3]
[1, 11, 12, 5, 7] -> [8]
[11, 12, 3, 5, 7, 8] -> [1]
number of minimal keys : 2
########################

schemata : [11, 13, 15, 3, 5, 9]
FD set : 
[13, 15, 3, 5, 9] -> [11]
[11, 15, 5] -> [3]
[11, 15, 5] -> [9]
[11, 15, 5] -> [13]
number of minimal keys : 2
########################

schemata : [10, 11, 12, 15, 3, 6]
FD set : 
[10, 11, 15, 3, 6] -> [12]
[10, 11, 12, 15, 6] -> [3]
number of minimal keys : 2
########################

schemata : [11, 12, 13, 4, 5, 6, 8]
FD set : 
[11, 12, 4, 5, 6, 8] -> [13]
[11, 12, 13, 5, 6] -> [4]
[11, 12, 13, 5, 6] -> [8]
number of minimal keys : 2
########################

schemata : [12, 13, 15, 4, 5, 6]
FD set : 
[13, 15, 4, 5, 6] -> [12]
[12, 15, 5] -> [4]
[12, 15, 5] -> [6]
[12, 15, 5] -> [13]
number of minimal keys : 2
########################

schemata : [12, 13, 14, 15, 4, 5]
FD set : 
[13, 14, 15, 4, 5] -> [12]
[12, 15, 5] -> [4]
[12, 15, 5] -> [13]
[12, 15, 5] -> [14]
number of minimal keys : 2
########################

schemata : [12, 13, 14, 15, 4, 6, 7]
FD set : 
[12, 13, 15, 4, 6, 7] -> [14]
[12, 13, 14, 15, 4, 7] -> [6]
number of minimal keys : 2
########################

schemata : [12, 14, 15, 4, 6, 7, 8]
FD set : 
[12, 15, 4, 6, 7] -> [8]
[12, 14, 15, 4, 6, 8] -> [7]
[12, 14, 15, 4, 7] -> [8]
number of minimal keys : 2
########################

schemata : [10, 11, 13, 15, 4, 6]
FD set : 
[10, 11, 15, 4, 6] -> [13]
[10, 11, 13, 15, 4] -> [6]
number of minimal keys : 2
########################

schemata : [10, 13, 14, 15, 3, 4, 6]
FD set : 
[10, 15, 3, 4, 6] -> [13]
[10, 15, 3, 4, 6] -> [14]
[10, 13, 14, 15, 4, 6] -> [3]
number of minimal keys : 2
########################

schemata : [10, 11, 12, 13, 15, 4]
FD set : 
[10, 11, 13, 15, 4] -> [12]
[11, 12, 15, 4] -> [10]
[11, 12, 15, 4] -> [13]
number of minimal keys : 2
########################

schemata : [10, 12, 13, 14, 15, 4, 6]
FD set : 
[10, 12, 15, 4, 6] -> [13]
[10, 12, 15, 4, 6] -> [14]
[10, 12, 13, 14, 15, 4] -> [6]
number of minimal keys : 2
########################

schemata : [10, 11, 12, 14, 5, 6]
FD set : 
[11, 12, 14, 5, 6] -> [10]
[10, 11, 12, 5] -> [6]
[10, 11, 12, 5] -> [14]
number of minimal keys : 2
########################

schemata : [12, 13, 15, 5, 7, 9]
FD set : 
[13, 15, 5, 7, 9] -> [12]
[12, 15, 5] -> [7]
[12, 15, 5] -> [9]
[12, 15, 5] -> [13]
number of minimal keys : 2
########################

schemata : [15, 5, 7, 8, 9]
FD set : 
[15, 5, 7, 9] -> [8]
[15, 5, 8] -> [9]
number of minimal keys : 2
########################

schemata : [10, 12, 13, 14, 3, 5, 7]
FD set : 
[10, 12, 14, 3, 5, 7] -> [13]
[10, 12, 13, 14, 5, 7] -> [3]
number of minimal keys : 2
########################

schemata : [14, 15, 5, 8, 9]
FD set : 
[15, 5, 8] -> [9]
[14, 15, 5, 9] -> [8]
number of minimal keys : 2
########################

schemata : [11, 12, 14, 15, 6, 7]
FD set : 
[11, 12, 15, 6, 7] -> [14]
[11, 12, 14, 15, 7] -> [6]
number of minimal keys : 2
########################

schemata : [11, 12, 14, 15, 4, 6, 8]
FD set : 
[11, 12, 15, 4] -> [6]
[11, 12, 15, 4] -> [8]
[11, 12, 15, 4] -> [14]
[11, 12, 14, 15, 6, 8] -> [4]
number of minimal keys : 2
########################

schemata : [10, 11, 13, 15, 6, 7, 8]
FD set : 
[10, 11, 13, 15, 6] -> [7]
[10, 11, 13, 15, 6] -> [8]
[10, 11, 13, 15, 7, 8] -> [6]
number of minimal keys : 2
########################

schemata : [0, 1, 2, 9]
FD set : 
[0, 1, 2] -> [9]
number of minimal keys : 1
########################

schemata : [0, 1, 14, 2, 6]
FD set : 
[0, 1, 2, 6] -> [14]
number of minimal keys : 1
########################

schemata : [0, 1, 14, 5]
FD set : 
[0, 1, 5] -> [14]
number of minimal keys : 1
########################

schemata : [0, 1, 6, 9]
FD set : 
[0, 1, 6] -> [9]
number of minimal keys : 1
########################

schemata : [0, 1, 14, 6, 8]
FD set : 
[0, 1, 14, 6] -> [8]
number of minimal keys : 1
########################

schemata : [0, 1, 7, 9]
FD set : 
[0, 1, 7] -> [9]
number of minimal keys : 1
########################

schemata : [0, 1, 11, 7, 8]
FD set : 
[0, 1, 11, 7] -> [8]
number of minimal keys : 1
########################

schemata : [0, 1, 13, 14, 7]
FD set : 
[0, 1, 13, 7] -> [14]
number of minimal keys : 1
########################

schemata : [0, 1, 14, 8, 9]
FD set : 
[0, 1, 14, 8] -> [9]
number of minimal keys : 1
########################

schemata : [0, 1, 10, 13]
FD set : 
[0, 1, 10] -> [13]
number of minimal keys : 1
########################

schemata : [0, 1, 10, 14]
FD set : 
[0, 1, 10] -> [14]
number of minimal keys : 1
########################

schemata : [0, 1, 11, 9]
FD set : 
[0, 1, 11] -> [9]
number of minimal keys : 1
########################

schemata : [0, 1, 11, 13, 14]
FD set : 
[0, 1, 11, 14] -> [13]
number of minimal keys : 1
########################

schemata : [0, 1, 12, 13]
FD set : 
[0, 1, 12] -> [13]
number of minimal keys : 1
########################

schemata : [0, 1, 12, 14]
FD set : 
[0, 1, 12] -> [14]
number of minimal keys : 1
########################

schemata : [0, 1, 13, 9]
FD set : 
[0, 1, 13] -> [9]
number of minimal keys : 1
########################

schemata : [0, 1, 13, 15]
FD set : 
[0, 1, 15] -> [13]
number of minimal keys : 1
########################

schemata : [0, 1, 14, 15]
FD set : 
[0, 1, 15] -> [14]
number of minimal keys : 1
########################

schemata : [0, 2, 4, 9]
FD set : 
[0, 2, 4] -> [9]
number of minimal keys : 1
########################

schemata : [0, 14, 2, 4, 6]
FD set : 
[0, 2, 4, 6] -> [14]
number of minimal keys : 1
########################

schemata : [0, 10, 14, 2, 4]
FD set : 
[0, 10, 2, 4] -> [14]
number of minimal keys : 1
########################

schemata : [0, 11, 2, 4, 7]
FD set : 
[0, 11, 2, 4] -> [7]
number of minimal keys : 1
########################

schemata : [0, 12, 13, 2, 4]
FD set : 
[0, 12, 2, 4] -> [13]
number of minimal keys : 1
########################

schemata : [0, 12, 14, 2, 4]
FD set : 
[0, 12, 2, 4] -> [14]
number of minimal keys : 1
########################

schemata : [0, 13, 2, 4, 8]
FD set : 
[0, 13, 2, 4] -> [8]
number of minimal keys : 1
########################

schemata : [0, 14, 2, 4, 8]
FD set : 
[0, 14, 2, 4] -> [8]
number of minimal keys : 1
########################

schemata : [0, 14, 2, 5]
FD set : 
[0, 2, 5] -> [14]
number of minimal keys : 1
########################

schemata : [0, 2, 6, 7, 9]
FD set : 
[0, 2, 6, 7] -> [9]
number of minimal keys : 1
########################

schemata : [0, 14, 2, 6, 7, 8]
FD set : 
[0, 14, 2, 6, 7] -> [8]
number of minimal keys : 1
########################

schemata : [0, 13, 14, 2, 6, 7]
FD set : 
[0, 14, 2, 6, 7] -> [13]
number of minimal keys : 1
########################

schemata : [0, 10, 14, 2, 6]
FD set : 
[0, 10, 2, 6] -> [14]
number of minimal keys : 1
########################

schemata : [0, 12, 2, 6, 7]
FD set : 
[0, 12, 2, 6] -> [7]
number of minimal keys : 1
########################

schemata : [0, 13, 2, 6, 9]
FD set : 
[0, 13, 2, 6] -> [9]
number of minimal keys : 1
########################

schemata : [0, 14, 2, 6, 9]
FD set : 
[0, 14, 2, 6] -> [9]
number of minimal keys : 1
########################

schemata : [0, 10, 2, 7, 8]
FD set : 
[0, 10, 2, 7] -> [8]
number of minimal keys : 1
########################

schemata : [0, 11, 2, 7, 9]
FD set : 
[0, 11, 2, 7] -> [9]
number of minimal keys : 1
########################

schemata : [0, 12, 2, 7, 8]
FD set : 
[0, 12, 2, 7] -> [8]
number of minimal keys : 1
########################

schemata : [0, 14, 2, 7, 9]
FD set : 
[0, 14, 2, 7] -> [9]
number of minimal keys : 1
########################

schemata : [0, 11, 2, 8, 9]
FD set : 
[0, 11, 2, 8] -> [9]
number of minimal keys : 1
########################

schemata : [0, 13, 14, 2, 8, 9]
FD set : 
[0, 13, 14, 2, 8] -> [9]
number of minimal keys : 1
########################

schemata : [0, 10, 11, 2, 7]
FD set : 
[0, 10, 11, 2] -> [7]
number of minimal keys : 1
########################

schemata : [0, 10, 12, 2, 8]
FD set : 
[0, 10, 12, 2] -> [8]
number of minimal keys : 1
########################

schemata : [0, 10, 13, 2, 8]
FD set : 
[0, 10, 13, 2] -> [8]
number of minimal keys : 1
########################

schemata : [0, 10, 13, 14, 2]
FD set : 
[0, 10, 14, 2] -> [13]
number of minimal keys : 1
########################

schemata : [0, 11, 13, 2, 9]
FD set : 
[0, 11, 13, 2] -> [9]
number of minimal keys : 1
########################

schemata : [0, 11, 14, 2, 9]
FD set : 
[0, 11, 14, 2] -> [9]
number of minimal keys : 1
########################

schemata : [0, 12, 2, 9]
FD set : 
[0, 12, 2] -> [9]
number of minimal keys : 1
########################

schemata : [0, 12, 13, 2, 8]
FD set : 
[0, 12, 13, 2] -> [8]
number of minimal keys : 1
########################

schemata : [0, 12, 14, 2, 8]
FD set : 
[0, 12, 14, 2] -> [8]
number of minimal keys : 1
########################

schemata : [0, 15, 2, 7]
FD set : 
[0, 15, 2] -> [7]
number of minimal keys : 1
########################

schemata : [0, 14, 15, 2]
FD set : 
[0, 15, 2] -> [14]
number of minimal keys : 1
########################

schemata : [0, 11, 4, 6, 7, 8, 9]
FD set : 
[0, 11, 4, 6, 7, 8] -> [9]
number of minimal keys : 1
########################

schemata : [0, 10, 12, 13, 4, 6, 7]
FD set : 
[0, 10, 12, 4, 6, 7] -> [13]
number of minimal keys : 1
########################

schemata : [0, 11, 13, 14, 4, 6, 7, 8]
FD set : 
[0, 11, 13, 14, 4, 6, 7] -> [8]
number of minimal keys : 1
########################

schemata : [0, 12, 4, 6, 7, 8]
FD set : 
[0, 12, 4, 6, 7] -> [8]
number of minimal keys : 1
########################

schemata : [0, 12, 4, 6, 7, 9]
FD set : 
[0, 12, 4, 6, 7] -> [9]
number of minimal keys : 1
########################

schemata : [0, 11, 13, 4, 6, 8, 9]
FD set : 
[0, 11, 13, 4, 6, 8] -> [9]
number of minimal keys : 1
########################

schemata : [0, 10, 12, 4, 6, 8]
FD set : 
[0, 10, 12, 4, 6] -> [8]
number of minimal keys : 1
########################

schemata : [0, 10, 12, 13, 14, 4, 6]
FD set : 
[0, 10, 12, 13, 4, 6] -> [14]
number of minimal keys : 1
########################

schemata : [0, 10, 13, 14, 4, 6, 8]
FD set : 
[0, 10, 13, 14, 4, 6] -> [8]
number of minimal keys : 1
########################

schemata : [0, 11, 14, 4, 6, 9]
FD set : 
[0, 11, 14, 4, 6] -> [9]
number of minimal keys : 1
########################

schemata : [0, 12, 13, 4, 6, 9]
FD set : 
[0, 12, 13, 4, 6] -> [9]
number of minimal keys : 1
########################

schemata : [0, 12, 14, 4, 6, 9]
FD set : 
[0, 12, 14, 4, 6] -> [9]
number of minimal keys : 1
########################

schemata : [0, 10, 12, 13, 4, 7, 8]
FD set : 
[0, 10, 12, 13, 4, 7] -> [8]
number of minimal keys : 1
########################

schemata : [0, 10, 13, 14, 4, 7, 8]
FD set : 
[0, 10, 13, 14, 4, 7] -> [8]
number of minimal keys : 1
########################

schemata : [0, 11, 14, 4, 7, 9]
FD set : 
[0, 11, 14, 4, 7] -> [9]
number of minimal keys : 1
########################

schemata : [0, 12, 13, 4, 7, 9]
FD set : 
[0, 12, 13, 4, 7] -> [9]
number of minimal keys : 1
########################

schemata : [0, 12, 13, 14, 4, 7, 8]
FD set : 
[0, 12, 13, 14, 4, 7] -> [8]
number of minimal keys : 1
########################

schemata : [0, 11, 13, 14, 4, 8, 9]
FD set : 
[0, 11, 13, 14, 4, 8] -> [9]
number of minimal keys : 1
########################

schemata : [0, 10, 11, 13, 14, 4, 8]
FD set : 
[0, 10, 11, 13, 14, 4] -> [8]
number of minimal keys : 1
########################

schemata : [0, 10, 12, 13, 14, 4, 8]
FD set : 
[0, 10, 12, 13, 14, 4] -> [8]
number of minimal keys : 1
########################

schemata : [0, 11, 12, 4, 9]
FD set : 
[0, 11, 12, 4] -> [9]
number of minimal keys : 1
########################

schemata : [0, 11, 12, 13, 14, 4, 6]
FD set : 
[0, 11, 12, 13, 14, 4] -> [6]
number of minimal keys : 1
########################

schemata : [0, 15, 4, 7]
FD set : 
[0, 15, 4] -> [7]
number of minimal keys : 1
########################

schemata : [0, 14, 15, 4]
FD set : 
[0, 15, 4] -> [14]
number of minimal keys : 1
########################

schemata : [0, 5, 9]
FD set : 
[0, 5] -> [9]
number of minimal keys : 1
########################

schemata : [0, 14, 5, 6]
FD set : 
[0, 5, 6] -> [14]
number of minimal keys : 1
########################

schemata : [0, 13, 5, 7]
FD set : 
[0, 5, 7] -> [13]
number of minimal keys : 1
########################

schemata : [0, 14, 5, 7]
FD set : 
[0, 5, 7] -> [14]
number of minimal keys : 1
########################

schemata : [0, 13, 4, 5]
FD set : 
[0, 13, 5] -> [4]
number of minimal keys : 1
########################

schemata : [0, 14, 4, 5]
FD set : 
[0, 14, 5] -> [4]
number of minimal keys : 1
########################

schemata : [0, 11, 12, 14, 6, 7, 8]
FD set : 
[0, 11, 12, 14, 6, 7] -> [8]
number of minimal keys : 1
########################

schemata : [0, 11, 13, 14, 6, 7, 9]
FD set : 
[0, 11, 13, 14, 6, 7] -> [9]
number of minimal keys : 1
########################

schemata : [0, 12, 14, 6, 7, 9]
FD set : 
[0, 12, 14, 6, 7] -> [9]
number of minimal keys : 1
########################

schemata : [0, 11, 13, 14, 6, 8, 9]
FD set : 
[0, 11, 13, 14, 6, 8] -> [9]
number of minimal keys : 1
########################

schemata : [0, 10, 11, 12, 6, 8]
FD set : 
[0, 10, 11, 12, 6] -> [8]
number of minimal keys : 1
########################

schemata : [0, 10, 11, 12, 13, 6, 7]
FD set : 
[0, 10, 11, 12, 13, 6] -> [7]
number of minimal keys : 1
########################

schemata : [0, 10, 11, 12, 14, 6, 7]
FD set : 
[0, 10, 11, 12, 14, 6] -> [7]
number of minimal keys : 1
########################

schemata : [0, 11, 12, 6, 9]
FD set : 
[0, 11, 12, 6] -> [9]
number of minimal keys : 1
########################

schemata : [0, 11, 12, 13, 14, 6, 8]
FD set : 
[0, 11, 12, 13, 14, 6] -> [8]
number of minimal keys : 1
########################

schemata : [0, 11, 12, 7, 9]
FD set : 
[0, 11, 12, 7] -> [9]
number of minimal keys : 1
########################

schemata : [0, 15, 7, 8]
FD set : 
[0, 15, 7] -> [8]
number of minimal keys : 1
########################

schemata : [0, 10, 11, 12, 13, 14, 7]
FD set : 
[0, 10, 11, 12, 13, 14] -> [7]
number of minimal keys : 1
########################

schemata : [0, 10, 15, 7]
FD set : 
[0, 10, 15] -> [7]
number of minimal keys : 1
########################

schemata : [0, 10, 14, 15]
FD set : 
[0, 10, 15] -> [14]
number of minimal keys : 1
########################

schemata : [0, 11, 15, 7]
FD set : 
[0, 11, 15] -> [7]
number of minimal keys : 1
########################

schemata : [0, 11, 14, 15]
FD set : 
[0, 11, 15] -> [14]
number of minimal keys : 1
########################

schemata : [0, 15, 9]
FD set : 
[0, 15] -> [9]
number of minimal keys : 1
########################

schemata : [1, 10, 13, 2, 3, 6, 7, 8]
FD set : 
[1, 10, 13, 2, 3, 6, 7] -> [8]
number of minimal keys : 1
########################

schemata : [1, 10, 14, 2, 3, 6, 7, 8]
FD set : 
[1, 10, 14, 2, 3, 6, 7] -> [8]
number of minimal keys : 1
########################

schemata : [1, 11, 13, 2, 3, 6, 7, 8]
FD set : 
[1, 11, 13, 2, 3, 6, 7] -> [8]
number of minimal keys : 1
########################

schemata : [1, 12, 13, 2, 3, 6, 7, 8]
FD set : 
[1, 12, 13, 2, 3, 6, 7] -> [8]
number of minimal keys : 1
########################

schemata : [1, 11, 13, 2, 3, 6, 9]
FD set : 
[1, 11, 13, 2, 3, 6] -> [9]
number of minimal keys : 1
########################

schemata : [1, 11, 14, 2, 3, 6, 9]
FD set : 
[1, 11, 14, 2, 3, 6] -> [9]
number of minimal keys : 1
########################

schemata : [1, 11, 2, 3, 7, 9]
FD set : 
[1, 11, 2, 3, 7] -> [9]
number of minimal keys : 1
########################

schemata : [1, 11, 12, 2, 3, 7, 8]
FD set : 
[1, 11, 12, 2, 3, 7] -> [8]
number of minimal keys : 1
########################

schemata : [1, 12, 13, 14, 2, 3, 7, 8]
FD set : 
[1, 12, 13, 14, 2, 3, 7] -> [8]
number of minimal keys : 1
########################

schemata : [1, 11, 12, 14, 2, 3, 6]
FD set : 
[1, 11, 12, 14, 2, 3] -> [6]
number of minimal keys : 1
########################

schemata : [1, 11, 13, 14, 2, 3, 9]
FD set : 
[1, 11, 13, 14, 2, 3] -> [9]
number of minimal keys : 1
########################

schemata : [1, 12, 13, 2, 3, 9]
FD set : 
[1, 12, 13, 2, 3] -> [9]
number of minimal keys : 1
########################

schemata : [1, 11, 12, 13, 2, 6, 7]
FD set : 
[1, 11, 12, 2, 6, 7] -> [13]
number of minimal keys : 1
########################

schemata : [1, 11, 13, 2, 6, 7, 9]
FD set : 
[1, 11, 13, 2, 6, 7] -> [9]
number of minimal keys : 1
########################

schemata : [1, 12, 2, 6, 7, 9]
FD set : 
[1, 12, 2, 6, 7] -> [9]
number of minimal keys : 1
########################

schemata : [1, 10, 12, 13, 2, 6, 8]
FD set : 
[1, 10, 12, 13, 2, 6] -> [8]
number of minimal keys : 1
########################

schemata : [1, 11, 13, 14, 2, 6, 9]
FD set : 
[1, 11, 13, 14, 2, 6] -> [9]
number of minimal keys : 1
########################

schemata : [1, 12, 13, 2, 6, 9]
FD set : 
[1, 12, 13, 2, 6] -> [9]
number of minimal keys : 1
########################

schemata : [1, 12, 14, 2, 6, 9]
FD set : 
[1, 12, 14, 2, 6] -> [9]
number of minimal keys : 1
########################

schemata : [1, 10, 12, 13, 2, 7, 8]
FD set : 
[1, 10, 12, 13, 2, 7] -> [8]
number of minimal keys : 1
########################

schemata : [1, 11, 13, 14, 2, 7, 9]
FD set : 
[1, 11, 13, 14, 2, 7] -> [9]
number of minimal keys : 1
########################

schemata : [1, 15, 2, 8, 9]
FD set : 
[1, 15, 2, 8] -> [9]
number of minimal keys : 1
########################

schemata : [1, 10, 11, 13, 14, 2, 8]
FD set : 
[1, 10, 11, 13, 14, 2] -> [8]
number of minimal keys : 1
########################

schemata : [1, 13, 15, 2, 9]
FD set : 
[1, 13, 15, 2] -> [9]
number of minimal keys : 1
########################

schemata : [1, 14, 2, 3, 4, 6, 7]
FD set : 
[1, 14, 3, 4, 6, 7] -> [2]
number of minimal keys : 1
########################

schemata : [1, 10, 14, 2, 3, 4, 6]
FD set : 
[1, 10, 14, 3, 4, 6] -> [2]
number of minimal keys : 1
########################

schemata : [1, 10, 14, 2, 3, 4, 7]
FD set : 
[1, 10, 14, 3, 4, 7] -> [2]
number of minimal keys : 1
########################

schemata : [1, 11, 14, 2, 3, 4, 7]
FD set : 
[1, 11, 14, 3, 4, 7] -> [2]
number of minimal keys : 1
########################

schemata : [1, 10, 13, 3, 5, 6, 7]
FD set : 
[1, 10, 3, 5, 6, 7] -> [13]
number of minimal keys : 1
########################

schemata : [1, 10, 13, 14, 3, 5, 6]
FD set : 
[1, 10, 14, 3, 5, 6] -> [13]
number of minimal keys : 1
########################

schemata : [1, 11, 3, 5, 6, 9]
FD set : 
[1, 11, 3, 5, 6] -> [9]
number of minimal keys : 1
########################

schemata : [1, 11, 13, 3, 5, 6, 8]
FD set : 
[1, 11, 13, 3, 5, 6] -> [8]
number of minimal keys : 1
########################

schemata : [1, 11, 13, 14, 3, 5, 6]
FD set : 
[1, 11, 14, 3, 5, 6] -> [13]
number of minimal keys : 1
########################

schemata : [1, 12, 13, 14, 3, 5, 6]
FD set : 
[1, 12, 14, 3, 5, 6] -> [13]
number of minimal keys : 1
########################

schemata : [1, 10, 13, 14, 3, 5, 7]
FD set : 
[1, 10, 14, 3, 5, 7] -> [13]
number of minimal keys : 1
########################

schemata : [1, 12, 14, 3, 5, 7, 8]
FD set : 
[1, 12, 14, 3, 5, 7] -> [8]
number of minimal keys : 1
########################

schemata : [1, 11, 12, 13, 3, 5, 8]
FD set : 
[1, 11, 12, 3, 5, 8] -> [13]
number of minimal keys : 1
########################

schemata : [1, 10, 12, 13, 3, 5, 8]
FD set : 
[1, 10, 12, 13, 3, 5] -> [8]
number of minimal keys : 1
########################

schemata : [1, 10, 13, 14, 3, 5, 8]
FD set : 
[1, 10, 13, 14, 3, 5] -> [8]
number of minimal keys : 1
########################

schemata : [1, 11, 13, 3, 5, 9]
FD set : 
[1, 11, 13, 3, 5] -> [9]
number of minimal keys : 1
########################

schemata : [1, 11, 13, 14, 3, 5, 8]
FD set : 
[1, 11, 13, 14, 3, 5] -> [8]
number of minimal keys : 1
########################

schemata : [1, 11, 14, 3, 5, 9]
FD set : 
[1, 11, 14, 3, 5] -> [9]
number of minimal keys : 1
########################

schemata : [1, 12, 14, 3, 5, 9]
FD set : 
[1, 12, 14, 3, 5] -> [9]
number of minimal keys : 1
########################

schemata : [1, 12, 13, 14, 3, 6, 7, 8]
FD set : 
[1, 12, 13, 14, 3, 6, 7] -> [8]
number of minimal keys : 1
########################

schemata : [1, 11, 13, 3, 6, 8, 9]
FD set : 
[1, 11, 13, 3, 6, 8] -> [9]
number of minimal keys : 1
########################

schemata : [1, 10, 11, 3, 6, 8]
FD set : 
[1, 10, 11, 3, 6] -> [8]
number of minimal keys : 1
########################

schemata : [1, 10, 12, 13, 3, 6, 8]
FD set : 
[1, 10, 12, 13, 3, 6] -> [8]
number of minimal keys : 1
########################

schemata : [1, 10, 12, 14, 3, 6, 8]
FD set : 
[1, 10, 12, 14, 3, 6] -> [8]
number of minimal keys : 1
########################

schemata : [1, 11, 12, 13, 3, 6, 8]
FD set : 
[1, 11, 12, 13, 3, 6] -> [8]
number of minimal keys : 1
########################

schemata : [1, 11, 13, 14, 3, 6, 9]
FD set : 
[1, 11, 13, 14, 3, 6] -> [9]
number of minimal keys : 1
########################

schemata : [1, 12, 13, 3, 6, 9]
FD set : 
[1, 12, 13, 3, 6] -> [9]
number of minimal keys : 1
########################

schemata : [1, 12, 14, 3, 6, 9]
FD set : 
[1, 12, 14, 3, 6] -> [9]
number of minimal keys : 1
########################

schemata : [1, 15, 3, 6, 8]
FD set : 
[1, 15, 3, 6] -> [8]
number of minimal keys : 1
########################

schemata : [1, 10, 12, 13, 3, 7, 8]
FD set : 
[1, 10, 12, 13, 3, 7] -> [8]
number of minimal keys : 1
########################

schemata : [1, 10, 12, 14, 3, 7, 8]
FD set : 
[1, 10, 12, 14, 3, 7] -> [8]
number of minimal keys : 1
########################

schemata : [1, 11, 12, 13, 3, 7, 8]
FD set : 
[1, 11, 12, 13, 3, 7] -> [8]
number of minimal keys : 1
########################

schemata : [1, 11, 13, 3, 7, 9]
FD set : 
[1, 11, 13, 3, 7] -> [9]
number of minimal keys : 1
########################

schemata : [1, 11, 14, 3, 7, 9]
FD set : 
[1, 11, 14, 3, 7] -> [9]
number of minimal keys : 1
########################

schemata : [1, 12, 13, 3, 7, 9]
FD set : 
[1, 12, 13, 3, 7] -> [9]
number of minimal keys : 1
########################

schemata : [1, 12, 14, 3, 7, 9]
FD set : 
[1, 12, 14, 3, 7] -> [9]
number of minimal keys : 1
########################

schemata : [1, 11, 14, 3, 8, 9]
FD set : 
[1, 11, 14, 3, 8] -> [9]
number of minimal keys : 1
########################

schemata : [1, 15, 3, 8, 9]
FD set : 
[1, 15, 3, 8] -> [9]
number of minimal keys : 1
########################

schemata : [1, 10, 11, 13, 14, 2, 3]
FD set : 
[1, 10, 11, 13, 14, 3] -> [2]
number of minimal keys : 1
########################

schemata : [1, 11, 12, 14, 3, 8]
FD set : 
[1, 11, 12, 14, 3] -> [8]
number of minimal keys : 1
########################

schemata : [1, 12, 13, 14, 3, 9]
FD set : 
[1, 12, 13, 14, 3] -> [9]
number of minimal keys : 1
########################

schemata : [1, 10, 13, 2, 4, 6, 7]
FD set : 
[1, 10, 13, 4, 6, 7] -> [2]
number of minimal keys : 1
########################

schemata : [1, 12, 14, 3, 4, 6, 7]
FD set : 
[1, 12, 14, 4, 6, 7] -> [3]
number of minimal keys : 1
########################

schemata : [1, 10, 11, 14, 4, 7]
FD set : 
[1, 10, 11, 14, 4] -> [7]
number of minimal keys : 1
########################

schemata : [1, 10, 13, 14, 5, 6, 7]
FD set : 
[1, 10, 14, 5, 6, 7] -> [13]
number of minimal keys : 1
########################

schemata : [1, 11, 13, 14, 5, 6, 7]
FD set : 
[1, 11, 14, 5, 6, 7] -> [13]
number of minimal keys : 1
########################

schemata : [1, 10, 11, 3, 5, 6]
FD set : 
[1, 10, 11, 5, 6] -> [3]
number of minimal keys : 1
########################

schemata : [1, 10, 12, 5, 6, 8]
FD set : 
[1, 10, 12, 5, 6] -> [8]
number of minimal keys : 1
########################

schemata : [1, 10, 12, 13, 5, 6]
FD set : 
[1, 10, 12, 5, 6] -> [13]
number of minimal keys : 1
########################

schemata : [1, 10, 14, 5, 6, 8]
FD set : 
[1, 10, 14, 5, 6] -> [8]
number of minimal keys : 1
########################

schemata : [1, 11, 12, 13, 5, 6]
FD set : 
[1, 11, 12, 5, 6] -> [13]
number of minimal keys : 1
########################

schemata : [1, 11, 13, 5, 6, 9]
FD set : 
[1, 11, 13, 5, 6] -> [9]
number of minimal keys : 1
########################

schemata : [1, 11, 13, 14, 5, 6, 8]
FD set : 
[1, 11, 13, 14, 5, 6] -> [8]
number of minimal keys : 1
########################

schemata : [1, 11, 14, 5, 6, 9]
FD set : 
[1, 11, 14, 5, 6] -> [9]
number of minimal keys : 1
########################

schemata : [1, 12, 5, 6, 9]
FD set : 
[1, 12, 5, 6] -> [9]
number of minimal keys : 1
########################

schemata : [1, 13, 15, 5, 6]
FD set : 
[1, 15, 5, 6] -> [13]
number of minimal keys : 1
########################

schemata : [1, 10, 12, 13, 5, 7]
FD set : 
[1, 10, 12, 5, 7] -> [13]
number of minimal keys : 1
########################

schemata : [1, 10, 12, 14, 5, 7]
FD set : 
[1, 10, 12, 5, 7] -> [14]
number of minimal keys : 1
########################

schemata : [1, 10, 14, 5, 7, 8]
FD set : 
[1, 10, 14, 5, 7] -> [8]
number of minimal keys : 1
########################

schemata : [1, 11, 5, 7, 9]
FD set : 
[1, 11, 5, 7] -> [9]
number of minimal keys : 1
########################

schemata : [1, 11, 12, 13, 5, 7]
FD set : 
[1, 11, 12, 5, 7] -> [13]
number of minimal keys : 1
########################

schemata : [1, 13, 15, 5, 7]
FD set : 
[1, 15, 5, 7] -> [13]
number of minimal keys : 1
########################

schemata : [1, 11, 13, 5, 8, 9]
FD set : 
[1, 11, 13, 5, 8] -> [9]
number of minimal keys : 1
########################

schemata : [1, 11, 14, 5, 8, 9]
FD set : 
[1, 11, 14, 5, 8] -> [9]
number of minimal keys : 1
########################

schemata : [1, 10, 11, 5, 8]
FD set : 
[1, 10, 11, 5] -> [8]
number of minimal keys : 1
########################

schemata : [1, 10, 11, 13, 3, 5]
FD set : 
[1, 10, 11, 13, 5] -> [3]
number of minimal keys : 1
########################

schemata : [1, 10, 11, 13, 5, 7]
FD set : 
[1, 10, 11, 13, 5] -> [7]
number of minimal keys : 1
########################

schemata : [1, 10, 12, 14, 5, 8]
FD set : 
[1, 10, 12, 14, 5] -> [8]
number of minimal keys : 1
########################

schemata : [1, 13, 15, 5, 9]
FD set : 
[1, 13, 15, 5] -> [9]
number of minimal keys : 1
########################

schemata : [1, 13, 14, 15, 5]
FD set : 
[1, 14, 15, 5] -> [13]
number of minimal keys : 1
########################

schemata : [1, 11, 13, 6, 7, 8, 9]
FD set : 
[1, 11, 13, 6, 7, 8] -> [9]
number of minimal keys : 1
########################

schemata : [1, 11, 14, 6, 7, 8, 9]
FD set : 
[1, 11, 14, 6, 7, 8] -> [9]
number of minimal keys : 1
########################

schemata : [1, 10, 12, 14, 6, 7, 8]
FD set : 
[1, 10, 12, 14, 6, 7] -> [8]
number of minimal keys : 1
########################

schemata : [1, 14, 15, 6, 7]
FD set : 
[1, 15, 6, 7] -> [14]
number of minimal keys : 1
########################

schemata : [1, 10, 11, 14, 6, 8]
FD set : 
[1, 10, 11, 14, 6] -> [8]
number of minimal keys : 1
########################

schemata : [1, 10, 12, 13, 14, 6, 8]
FD set : 
[1, 10, 12, 13, 14, 6] -> [8]
number of minimal keys : 1
########################

schemata : [1, 11, 13, 14, 7, 8, 9]
FD set : 
[1, 11, 13, 14, 7, 8] -> [9]
number of minimal keys : 1
########################

schemata : [1, 10, 11, 12, 14, 7]
FD set : 
[1, 10, 11, 12, 7] -> [14]
number of minimal keys : 1
########################

schemata : [1, 10, 11, 13, 7, 8]
FD set : 
[1, 10, 11, 13, 7] -> [8]
number of minimal keys : 1
########################

schemata : [1, 10, 11, 14, 2, 7]
FD set : 
[1, 10, 11, 14, 7] -> [2]
number of minimal keys : 1
########################

schemata : [1, 11, 12, 14, 2, 7]
FD set : 
[1, 11, 12, 14, 7] -> [2]
number of minimal keys : 1
########################

schemata : [1, 11, 12, 14, 7, 8]
FD set : 
[1, 11, 12, 14, 7] -> [8]
number of minimal keys : 1
########################

schemata : [1, 12, 13, 14, 7, 9]
FD set : 
[1, 12, 13, 14, 7] -> [9]
number of minimal keys : 1
########################

schemata : [1, 10, 11, 12, 13, 3, 8]
FD set : 
[1, 10, 11, 12, 13, 8] -> [3]
number of minimal keys : 1
########################

schemata : [1, 10, 15, 6]
FD set : 
[1, 10, 15] -> [6]
number of minimal keys : 1
########################

schemata : [1, 10, 13, 15]
FD set : 
[1, 10, 15] -> [13]
number of minimal keys : 1
########################

schemata : [1, 11, 12, 9]
FD set : 
[1, 11, 12] -> [9]
number of minimal keys : 1
########################

schemata : [11, 2, 3, 4, 6, 7, 8, 9]
FD set : 
[11, 2, 3, 4, 6, 7, 8] -> [9]
number of minimal keys : 1
########################

schemata : [11, 13, 2, 3, 4, 6, 8, 9]
FD set : 
[11, 13, 2, 3, 4, 6, 8] -> [9]
number of minimal keys : 1
########################

schemata : [11, 14, 2, 3, 4, 6, 8, 9]
FD set : 
[11, 14, 2, 3, 4, 6, 8] -> [9]
number of minimal keys : 1
########################

schemata : [10, 11, 13, 2, 3, 4, 6]
FD set : 
[10, 11, 2, 3, 4, 6] -> [13]
number of minimal keys : 1
########################

schemata : [10, 11, 14, 2, 3, 4, 6]
FD set : 
[10, 11, 2, 3, 4, 6] -> [14]
number of minimal keys : 1
########################

schemata : [11, 12, 13, 2, 3, 4, 6]
FD set : 
[11, 12, 2, 3, 4, 6] -> [13]
number of minimal keys : 1
########################

schemata : [12, 2, 3, 4, 6, 9]
FD set : 
[12, 2, 3, 4, 6] -> [9]
number of minimal keys : 1
########################

schemata : [10, 12, 13, 2, 3, 4, 7, 8]
FD set : 
[10, 12, 13, 2, 3, 4, 7] -> [8]
number of minimal keys : 1
########################

schemata : [12, 13, 2, 3, 4, 7, 9]
FD set : 
[12, 13, 2, 3, 4, 7] -> [9]
number of minimal keys : 1
########################

schemata : [13, 15, 2, 3, 4, 7]
FD set : 
[15, 2, 3, 4, 7] -> [13]
number of minimal keys : 1
########################

schemata : [11, 13, 14, 2, 3, 4, 8, 9]
FD set : 
[11, 13, 14, 2, 3, 4, 8] -> [9]
number of minimal keys : 1
########################

schemata : [10, 12, 13, 14, 2, 3, 4, 8]
FD set : 
[10, 12, 13, 14, 2, 3, 4] -> [8]
number of minimal keys : 1
########################

schemata : [11, 12, 13, 2, 3, 4, 8]
FD set : 
[11, 12, 13, 2, 3, 4] -> [8]
number of minimal keys : 1
########################

schemata : [11, 12, 14, 2, 3, 4, 8]
FD set : 
[11, 12, 14, 2, 3, 4] -> [8]
number of minimal keys : 1
########################

schemata : [12, 14, 2, 3, 4, 9]
FD set : 
[12, 14, 2, 3, 4] -> [9]
number of minimal keys : 1
########################

schemata : [1, 13, 2, 3, 5, 6, 7]
FD set : 
[13, 2, 3, 5, 6, 7] -> [1]
number of minimal keys : 1
########################

schemata : [13, 14, 2, 3, 5, 6, 8, 9]
FD set : 
[13, 14, 2, 3, 5, 6, 8] -> [9]
number of minimal keys : 1
########################

schemata : [11, 13, 2, 3, 5, 6]
FD set : 
[11, 2, 3, 5, 6] -> [13]
number of minimal keys : 1
########################

schemata : [13, 2, 3, 4, 5, 6]
FD set : 
[13, 2, 3, 5, 6] -> [4]
number of minimal keys : 1
########################

schemata : [14, 2, 3, 4, 5, 6]
FD set : 
[14, 2, 3, 5, 6] -> [4]
number of minimal keys : 1
########################

schemata : [13, 2, 3, 4, 5, 7, 8]
FD set : 
[13, 2, 3, 5, 7, 8] -> [4]
number of minimal keys : 1
########################

schemata : [10, 2, 3, 5, 7, 8]
FD set : 
[10, 2, 3, 5, 7] -> [8]
number of minimal keys : 1
########################

schemata : [11, 2, 3, 5, 7, 8]
FD set : 
[11, 2, 3, 5, 7] -> [8]
number of minimal keys : 1
########################

schemata : [11, 13, 14, 2, 3, 5, 7]
FD set : 
[11, 13, 2, 3, 5, 7] -> [14]
number of minimal keys : 1
########################

schemata : [12, 13, 2, 3, 5, 7, 8]
FD set : 
[12, 13, 2, 3, 5, 7] -> [8]
number of minimal keys : 1
########################

schemata : [13, 14, 2, 3, 4, 5, 7]
FD set : 
[13, 14, 2, 3, 5, 7] -> [4]
number of minimal keys : 1
########################

schemata : [10, 2, 3, 4, 5]
FD set : 
[10, 2, 3, 5] -> [4]
number of minimal keys : 1
########################

schemata : [1, 10, 13, 2, 3, 5]
FD set : 
[10, 13, 2, 3, 5] -> [1]
number of minimal keys : 1
########################

schemata : [11, 2, 3, 5, 9]
FD set : 
[11, 2, 3, 5] -> [9]
number of minimal keys : 1
########################

schemata : [11, 14, 2, 3, 5, 8]
FD set : 
[11, 14, 2, 3, 5] -> [8]
number of minimal keys : 1
########################

schemata : [1, 12, 2, 3, 5]
FD set : 
[12, 2, 3, 5] -> [1]
number of minimal keys : 1
########################

schemata : [11, 14, 2, 3, 6, 7, 8, 9]
FD set : 
[11, 14, 2, 3, 6, 7, 8] -> [9]
number of minimal keys : 1
########################

schemata : [10, 11, 2, 3, 6, 7, 8]
FD set : 
[10, 11, 2, 3, 6, 7] -> [8]
number of minimal keys : 1
########################

schemata : [10, 12, 13, 2, 3, 6, 7, 8]
FD set : 
[10, 12, 13, 2, 3, 6, 7] -> [8]
number of minimal keys : 1
########################

schemata : [11, 12, 2, 3, 7, 9]
FD set : 
[11, 12, 2, 3, 7] -> [9]
number of minimal keys : 1
########################

schemata : [15, 2, 3, 8, 9]
FD set : 
[15, 2, 3, 8] -> [9]
number of minimal keys : 1
########################

schemata : [11, 12, 13, 2, 3, 9]
FD set : 
[11, 12, 13, 2, 3] -> [9]
number of minimal keys : 1
########################

schemata : [11, 13, 2, 4, 6, 7, 8, 9]
FD set : 
[11, 13, 2, 4, 6, 7, 8] -> [9]
number of minimal keys : 1
########################

schemata : [12, 2, 4, 6, 7, 9]
FD set : 
[12, 2, 4, 6, 7] -> [9]
number of minimal keys : 1
########################

schemata : [11, 13, 14, 2, 4, 6, 8, 9]
FD set : 
[11, 13, 14, 2, 4, 6, 8] -> [9]
number of minimal keys : 1
########################

schemata : [10, 11, 2, 4, 6, 8]
FD set : 
[10, 11, 2, 4, 6] -> [8]
number of minimal keys : 1
########################

schemata : [10, 12, 13, 14, 2, 4, 6, 7]
FD set : 
[10, 12, 13, 14, 2, 4, 6] -> [7]
number of minimal keys : 1
########################

schemata : [10, 12, 14, 2, 4, 6, 8]
FD set : 
[10, 12, 14, 2, 4, 6] -> [8]
number of minimal keys : 1
########################

schemata : [11, 12, 14, 2, 4, 6, 8]
FD set : 
[11, 12, 14, 2, 4, 6] -> [8]
number of minimal keys : 1
########################

schemata : [12, 14, 2, 4, 6, 9]
FD set : 
[12, 14, 2, 4, 6] -> [9]
number of minimal keys : 1
########################

schemata : [11, 13, 14, 2, 4, 7, 8, 9]
FD set : 
[11, 13, 14, 2, 4, 7, 8] -> [9]
number of minimal keys : 1
########################

schemata : [11, 12, 2, 4, 7, 8]
FD set : 
[11, 12, 2, 4, 7] -> [8]
number of minimal keys : 1
########################

schemata : [12, 13, 14, 2, 4, 7, 9]
FD set : 
[12, 13, 14, 2, 4, 7] -> [9]
number of minimal keys : 1
########################

schemata : [10, 11, 13, 14, 2, 3, 4, 8]
FD set : 
[10, 11, 13, 14, 2, 4, 8] -> [3]
number of minimal keys : 1
########################

schemata : [15, 2, 4, 8, 9]
FD set : 
[15, 2, 4, 8] -> [9]
number of minimal keys : 1
########################

schemata : [10, 11, 12, 2, 4, 8]
FD set : 
[10, 11, 12, 2, 4] -> [8]
number of minimal keys : 1
########################

schemata : [11, 12, 2, 4, 9]
FD set : 
[11, 12, 2, 4] -> [9]
number of minimal keys : 1
########################

schemata : [11, 12, 13, 14, 2, 4, 6]
FD set : 
[11, 12, 13, 14, 2, 4] -> [6]
number of minimal keys : 1
########################

schemata : [14, 2, 4, 5, 6, 7, 8]
FD set : 
[14, 2, 5, 6, 7, 8] -> [4]
number of minimal keys : 1
########################

schemata : [14, 2, 4, 5, 6, 7, 9]
FD set : 
[14, 2, 5, 6, 7, 9] -> [4]
number of minimal keys : 1
########################

schemata : [11, 2, 3, 5, 6, 7]
FD set : 
[11, 2, 5, 6, 7] -> [3]
number of minimal keys : 1
########################

schemata : [13, 2, 4, 5, 6, 7]
FD set : 
[13, 2, 5, 6, 7] -> [4]
number of minimal keys : 1
########################

schemata : [1, 10, 2, 5, 6]
FD set : 
[10, 2, 5, 6] -> [1]
number of minimal keys : 1
########################

schemata : [1, 11, 2, 5, 6]
FD set : 
[11, 2, 5, 6] -> [1]
number of minimal keys : 1
########################

schemata : [11, 2, 5, 6, 9]
FD set : 
[11, 2, 5, 6] -> [9]
number of minimal keys : 1
########################

schemata : [1, 12, 2, 5, 6]
FD set : 
[12, 2, 5, 6] -> [1]
number of minimal keys : 1
########################

schemata : [13, 14, 2, 4, 5, 7, 8]
FD set : 
[13, 14, 2, 5, 7, 8] -> [4]
number of minimal keys : 1
########################

schemata : [13, 14, 2, 4, 5, 7, 9]
FD set : 
[13, 14, 2, 5, 7, 9] -> [4]
number of minimal keys : 1
########################

schemata : [1, 10, 2, 5, 7]
FD set : 
[10, 2, 5, 7] -> [1]
number of minimal keys : 1
########################

schemata : [10, 13, 2, 5, 7, 8]
FD set : 
[10, 13, 2, 5, 7] -> [8]
number of minimal keys : 1
########################

schemata : [1, 11, 2, 5, 7]
FD set : 
[11, 2, 5, 7] -> [1]
number of minimal keys : 1
########################

schemata : [11, 14, 2, 5, 7, 8]
FD set : 
[11, 14, 2, 5, 7] -> [8]
number of minimal keys : 1
########################

schemata : [1, 12, 2, 5, 7]
FD set : 
[12, 2, 5, 7] -> [1]
number of minimal keys : 1
########################

schemata : [12, 2, 5, 7, 9]
FD set : 
[12, 2, 5, 7] -> [9]
number of minimal keys : 1
########################

schemata : [10, 2, 4, 5, 8]
FD set : 
[10, 2, 5, 8] -> [4]
number of minimal keys : 1
########################

schemata : [1, 11, 2, 5, 8]
FD set : 
[11, 2, 5, 8] -> [1]
number of minimal keys : 1
########################

schemata : [1, 12, 2, 5, 8]
FD set : 
[12, 2, 5, 8] -> [1]
number of minimal keys : 1
########################

schemata : [1, 10, 12, 2, 5]
FD set : 
[10, 12, 2, 5] -> [1]
number of minimal keys : 1
########################

schemata : [10, 12, 13, 14, 2, 5]
FD set : 
[10, 12, 14, 2, 5] -> [13]
number of minimal keys : 1
########################

schemata : [10, 13, 2, 4, 5]
FD set : 
[10, 13, 2, 5] -> [4]
number of minimal keys : 1
########################

schemata : [1, 10, 14, 2, 5]
FD set : 
[10, 14, 2, 5] -> [1]
number of minimal keys : 1
########################

schemata : [10, 14, 2, 5, 8]
FD set : 
[10, 14, 2, 5] -> [8]
number of minimal keys : 1
########################

schemata : [11, 2, 4, 5]
FD set : 
[11, 2, 5] -> [4]
number of minimal keys : 1
########################

schemata : [11, 12, 2, 5, 8]
FD set : 
[11, 12, 2, 5] -> [8]
number of minimal keys : 1
########################

schemata : [11, 12, 13, 2, 5]
FD set : 
[11, 12, 2, 5] -> [13]
number of minimal keys : 1
########################

schemata : [1, 11, 14, 2, 5]
FD set : 
[11, 14, 2, 5] -> [1]
number of minimal keys : 1
########################

schemata : [12, 2, 4, 5]
FD set : 
[12, 2, 5] -> [4]
number of minimal keys : 1
########################

schemata : [1, 12, 13, 2, 5]
FD set : 
[12, 13, 2, 5] -> [1]
number of minimal keys : 1
########################

schemata : [1, 12, 14, 2, 5]
FD set : 
[12, 14, 2, 5] -> [1]
number of minimal keys : 1
########################

schemata : [1, 15, 2, 5]
FD set : 
[15, 2, 5] -> [1]
number of minimal keys : 1
########################

schemata : [15, 2, 5, 9]
FD set : 
[15, 2, 5] -> [9]
number of minimal keys : 1
########################

schemata : [10, 11, 12, 2, 6, 7, 8]
FD set : 
[10, 11, 12, 2, 6, 7] -> [8]
number of minimal keys : 1
########################

schemata : [11, 12, 2, 6, 7, 9]
FD set : 
[11, 12, 2, 6, 7] -> [9]
number of minimal keys : 1
########################

schemata : [11, 12, 14, 2, 6, 7, 8]
FD set : 
[11, 12, 14, 2, 6, 7] -> [8]
number of minimal keys : 1
########################

schemata : [15, 2, 6, 8, 9]
FD set : 
[15, 2, 6, 8] -> [9]
number of minimal keys : 1
########################

schemata : [11, 12, 13, 2, 6, 9]
FD set : 
[11, 12, 13, 2, 6] -> [9]
number of minimal keys : 1
########################

schemata : [14, 15, 2, 7, 8, 9]
FD set : 
[14, 15, 2, 7, 8] -> [9]
number of minimal keys : 1
########################

schemata : [10, 11, 12, 14, 2, 3, 7]
FD set : 
[10, 11, 12, 14, 2, 7] -> [3]
number of minimal keys : 1
########################

schemata : [10, 11, 12, 14, 2, 7, 8]
FD set : 
[10, 11, 12, 14, 2, 7] -> [8]
number of minimal keys : 1
########################

schemata : [11, 12, 14, 2, 7, 9]
FD set : 
[11, 12, 14, 2, 7] -> [9]
number of minimal keys : 1
########################

schemata : [13, 15, 2, 8, 9]
FD set : 
[13, 15, 2, 8] -> [9]
number of minimal keys : 1
########################

schemata : [11, 15, 2, 9]
FD set : 
[11, 15, 2] -> [9]
number of minimal keys : 1
########################

schemata : [11, 13, 14, 3, 4, 5, 7, 8]
FD set : 
[11, 13, 14, 3, 4, 5, 7] -> [8]
number of minimal keys : 1
########################

schemata : [14, 15, 3, 4, 6, 7, 8, 9]
FD set : 
[14, 15, 3, 4, 6, 7, 8] -> [9]
number of minimal keys : 1
########################

schemata : [11, 12, 13, 14, 3, 4, 6, 9]
FD set : 
[11, 12, 13, 14, 3, 4, 6] -> [9]
number of minimal keys : 1
########################

schemata : [12, 14, 15, 3, 4, 6, 8]
FD set : 
[12, 14, 15, 3, 4, 6] -> [8]
number of minimal keys : 1
########################

schemata : [10, 13, 15, 3, 4, 7, 8]
FD set : 
[10, 13, 15, 3, 4, 7] -> [8]
number of minimal keys : 1
########################

schemata : [11, 15, 3, 4, 7, 9]
FD set : 
[11, 15, 3, 4, 7] -> [9]
number of minimal keys : 1
########################

schemata : [10, 12, 14, 15, 3, 4]
FD set : 
[10, 12, 15, 3, 4] -> [14]
number of minimal keys : 1
########################

schemata : [11, 3, 5, 6, 7, 8]
FD set : 
[11, 3, 5, 6, 7] -> [8]
number of minimal keys : 1
########################

schemata : [11, 13, 14, 3, 5, 6, 7]
FD set : 
[11, 14, 3, 5, 6, 7] -> [13]
number of minimal keys : 1
########################

schemata : [11, 3, 5, 6, 8, 9]
FD set : 
[11, 3, 5, 6, 8] -> [9]
number of minimal keys : 1
########################

schemata : [11, 12, 3, 4, 5, 6]
FD set : 
[11, 12, 3, 5, 6] -> [4]
number of minimal keys : 1
########################

schemata : [11, 13, 3, 5, 6, 9]
FD set : 
[11, 13, 3, 5, 6] -> [9]
number of minimal keys : 1
########################

schemata : [11, 13, 14, 3, 4, 5, 6]
FD set : 
[11, 13, 14, 3, 5, 6] -> [4]
number of minimal keys : 1
########################

schemata : [11, 13, 14, 3, 5, 6, 8]
FD set : 
[11, 13, 14, 3, 5, 6] -> [8]
number of minimal keys : 1
########################

schemata : [11, 14, 3, 5, 6, 9]
FD set : 
[11, 14, 3, 5, 6] -> [9]
number of minimal keys : 1
########################

schemata : [12, 3, 5, 6, 9]
FD set : 
[12, 3, 5, 6] -> [9]
number of minimal keys : 1
########################

schemata : [12, 13, 14, 3, 4, 5, 6]
FD set : 
[12, 13, 14, 3, 5, 6] -> [4]
number of minimal keys : 1
########################

schemata : [13, 15, 3, 5, 6]
FD set : 
[15, 3, 5, 6] -> [13]
number of minimal keys : 1
########################

schemata : [10, 11, 3, 5, 6, 7]
FD set : 
[10, 11, 3, 5, 7] -> [6]
number of minimal keys : 1
########################

schemata : [11, 12, 13, 3, 5, 7]
FD set : 
[11, 12, 3, 5, 7] -> [13]
number of minimal keys : 1
########################

schemata : [12, 14, 3, 5, 7, 9]
FD set : 
[12, 14, 3, 5, 7] -> [9]
number of minimal keys : 1
########################

schemata : [13, 15, 3, 5, 7]
FD set : 
[15, 3, 5, 7] -> [13]
number of minimal keys : 1
########################

schemata : [14, 15, 3, 5, 7]
FD set : 
[15, 3, 5, 7] -> [14]
number of minimal keys : 1
########################

schemata : [11, 14, 3, 5, 8, 9]
FD set : 
[11, 14, 3, 5, 8] -> [9]
number of minimal keys : 1
########################

schemata : [10, 11, 3, 5, 8]
FD set : 
[10, 11, 3, 5] -> [8]
number of minimal keys : 1
########################

schemata : [10, 11, 13, 3, 4, 5]
FD set : 
[10, 11, 13, 3, 5] -> [4]
number of minimal keys : 1
########################

schemata : [10, 12, 14, 3, 4, 5]
FD set : 
[10, 12, 14, 3, 5] -> [4]
number of minimal keys : 1
########################

schemata : [11, 12, 14, 3, 4, 5]
FD set : 
[11, 12, 14, 3, 5] -> [4]
number of minimal keys : 1
########################

schemata : [11, 12, 14, 3, 5, 8]
FD set : 
[11, 12, 14, 3, 5] -> [8]
number of minimal keys : 1
########################

schemata : [12, 13, 3, 5, 9]
FD set : 
[12, 13, 3, 5] -> [9]
number of minimal keys : 1
########################

schemata : [14, 15, 3, 5, 9]
FD set : 
[14, 15, 3, 5] -> [9]
number of minimal keys : 1
########################

schemata : [15, 3, 4, 5]
FD set : 
[15, 3, 5] -> [4]
number of minimal keys : 1
########################

schemata : [12, 13, 15, 3, 6, 7, 8]
FD set : 
[12, 13, 15, 3, 6, 7] -> [8]
number of minimal keys : 1
########################

schemata : [10, 12, 15, 3, 6, 8]
FD set : 
[10, 12, 15, 3, 6] -> [8]
number of minimal keys : 1
########################

schemata : [11, 12, 15, 3, 6, 8]
FD set : 
[11, 12, 15, 3, 6] -> [8]
number of minimal keys : 1
########################

schemata : [12, 13, 14, 15, 3, 6, 8]
FD set : 
[12, 13, 14, 15, 3, 6] -> [8]
number of minimal keys : 1
########################

schemata : [12, 15, 3, 6, 9]
FD set : 
[12, 15, 3, 6] -> [9]
number of minimal keys : 1
########################

schemata : [11, 15, 3, 7, 8, 9]
FD set : 
[11, 15, 3, 7, 8] -> [9]
number of minimal keys : 1
########################

schemata : [10, 13, 14, 15, 3, 7, 8]
FD set : 
[10, 13, 14, 15, 3, 7] -> [8]
number of minimal keys : 1
########################

schemata : [11, 13, 15, 3, 7, 9]
FD set : 
[11, 13, 15, 3, 7] -> [9]
number of minimal keys : 1
########################

schemata : [12, 13, 15, 3, 7, 9]
FD set : 
[12, 13, 15, 3, 7] -> [9]
number of minimal keys : 1
########################

schemata : [11, 14, 15, 3, 8, 9]
FD set : 
[11, 14, 15, 3, 8] -> [9]
number of minimal keys : 1
########################

schemata : [10, 12, 13, 14, 15, 3, 8]
FD set : 
[10, 12, 13, 14, 15, 3] -> [8]
number of minimal keys : 1
########################

schemata : [11, 12, 14, 15, 3, 6]
FD set : 
[11, 12, 14, 15, 3] -> [6]
number of minimal keys : 1
########################

schemata : [11, 12, 15, 3, 9]
FD set : 
[11, 12, 15, 3] -> [9]
number of minimal keys : 1
########################

schemata : [11, 13, 14, 15, 3, 9]
FD set : 
[11, 13, 14, 15, 3] -> [9]
number of minimal keys : 1
########################

schemata : [12, 14, 15, 3, 9]
FD set : 
[12, 14, 15, 3] -> [9]
number of minimal keys : 1
########################

schemata : [12, 13, 4, 5, 7, 9]
FD set : 
[12, 13, 4, 5, 7] -> [9]
number of minimal keys : 1
########################

schemata : [12, 14, 4, 5, 7, 9]
FD set : 
[12, 14, 4, 5, 7] -> [9]
number of minimal keys : 1
########################

schemata : [12, 15, 4, 6, 9]
FD set : 
[12, 15, 4, 6] -> [9]
number of minimal keys : 1
########################

schemata : [10, 12, 14, 15, 4, 8]
FD set : 
[10, 12, 14, 15, 4] -> [8]
number of minimal keys : 1
########################

schemata : [11, 14, 15, 4, 9]
FD set : 
[11, 14, 15, 4] -> [9]
number of minimal keys : 1
########################

schemata : [12, 13, 15, 4, 9]
FD set : 
[12, 13, 15, 4] -> [9]
number of minimal keys : 1
########################

schemata : [12, 14, 15, 4, 9]
FD set : 
[12, 14, 15, 4] -> [9]
number of minimal keys : 1
########################

schemata : [11, 5, 6, 7, 8, 9]
FD set : 
[11, 5, 6, 7, 8] -> [9]
number of minimal keys : 1
########################

schemata : [11, 13, 4, 5, 6, 7, 8]
FD set : 
[11, 13, 5, 6, 7, 8] -> [4]
number of minimal keys : 1
########################

schemata : [12, 14, 4, 5, 6, 7, 8]
FD set : 
[12, 14, 5, 6, 7, 8] -> [4]
number of minimal keys : 1
########################

schemata : [10, 11, 4, 5, 6, 7]
FD set : 
[10, 11, 5, 6, 7] -> [4]
number of minimal keys : 1
########################

schemata : [10, 12, 3, 5, 6, 7]
FD set : 
[10, 12, 5, 6, 7] -> [3]
number of minimal keys : 1
########################

schemata : [10, 12, 5, 6, 7, 8]
FD set : 
[10, 12, 5, 6, 7] -> [8]
number of minimal keys : 1
########################

schemata : [11, 12, 3, 5, 6, 7]
FD set : 
[11, 12, 5, 6, 7] -> [3]
number of minimal keys : 1
########################

schemata : [11, 13, 5, 6, 7, 9]
FD set : 
[11, 13, 5, 6, 7] -> [9]
number of minimal keys : 1
########################

schemata : [11, 13, 14, 4, 5, 6, 7]
FD set : 
[11, 13, 14, 5, 6, 7] -> [4]
number of minimal keys : 1
########################

schemata : [11, 14, 5, 6, 7, 9]
FD set : 
[11, 14, 5, 6, 7] -> [9]
number of minimal keys : 1
########################

schemata : [12, 5, 6, 7, 9]
FD set : 
[12, 5, 6, 7] -> [9]
number of minimal keys : 1
########################

schemata : [12, 13, 14, 5, 6, 7, 8]
FD set : 
[12, 13, 14, 5, 6, 7] -> [8]
number of minimal keys : 1
########################

schemata : [10, 12, 13, 3, 5, 6, 8]
FD set : 
[10, 12, 13, 5, 6, 8] -> [3]
number of minimal keys : 1
########################

schemata : [11, 13, 5, 6, 8, 9]
FD set : 
[11, 13, 5, 6, 8] -> [9]
number of minimal keys : 1
########################

schemata : [11, 14, 5, 6, 8, 9]
FD set : 
[11, 14, 5, 6, 8] -> [9]
number of minimal keys : 1
########################

schemata : [15, 4, 5, 6, 9]
FD set : 
[15, 5, 6, 9] -> [4]
number of minimal keys : 1
########################

schemata : [13, 15, 5, 6, 9]
FD set : 
[15, 5, 6, 9] -> [13]
number of minimal keys : 1
########################

schemata : [10, 11, 5, 6, 8]
FD set : 
[10, 11, 5, 6] -> [8]
number of minimal keys : 1
########################

schemata : [10, 12, 13, 4, 5, 6]
FD set : 
[10, 12, 13, 5, 6] -> [4]
number of minimal keys : 1
########################

schemata : [10, 12, 14, 4, 5, 6]
FD set : 
[10, 12, 14, 5, 6] -> [4]
number of minimal keys : 1
########################

schemata : [10, 12, 14, 5, 6, 8]
FD set : 
[10, 12, 14, 5, 6] -> [8]
number of minimal keys : 1
########################

schemata : [11, 13, 14, 5, 6, 9]
FD set : 
[11, 13, 14, 5, 6] -> [9]
number of minimal keys : 1
########################

schemata : [12, 13, 5, 6, 9]
FD set : 
[12, 13, 5, 6] -> [9]
number of minimal keys : 1
########################

schemata : [12, 14, 5, 6, 9]
FD set : 
[12, 14, 5, 6] -> [9]
number of minimal keys : 1
########################

schemata : [11, 12, 4, 5, 7, 8]
FD set : 
[11, 12, 5, 7, 8] -> [4]
number of minimal keys : 1
########################

schemata : [11, 13, 5, 7, 8, 9]
FD set : 
[11, 13, 5, 7, 8] -> [9]
number of minimal keys : 1
########################

schemata : [11, 14, 5, 7, 8, 9]
FD set : 
[11, 14, 5, 7, 8] -> [9]
number of minimal keys : 1
########################

schemata : [15, 4, 5, 7, 9]
FD set : 
[15, 5, 7, 9] -> [4]
number of minimal keys : 1
########################

schemata : [10, 11, 5, 7, 8]
FD set : 
[10, 11, 5, 7] -> [8]
number of minimal keys : 1
########################

schemata : [10, 11, 13, 4, 5, 7]
FD set : 
[10, 11, 13, 5, 7] -> [4]
number of minimal keys : 1
########################

schemata : [10, 12, 14, 4, 5, 7]
FD set : 
[10, 12, 14, 5, 7] -> [4]
number of minimal keys : 1
########################

schemata : [10, 12, 14, 5, 7, 8]
FD set : 
[10, 12, 14, 5, 7] -> [8]
number of minimal keys : 1
########################

schemata : [11, 12, 13, 4, 5, 7]
FD set : 
[11, 12, 13, 5, 7] -> [4]
number of minimal keys : 1
########################

schemata : [11, 12, 14, 3, 5, 7]
FD set : 
[11, 12, 14, 5, 7] -> [3]
number of minimal keys : 1
########################

schemata : [11, 13, 14, 5, 7, 9]
FD set : 
[11, 13, 14, 5, 7] -> [9]
number of minimal keys : 1
########################

schemata : [13, 15, 4, 5, 7]
FD set : 
[13, 15, 5, 7] -> [4]
number of minimal keys : 1
########################

schemata : [14, 15, 5, 7, 9]
FD set : 
[14, 15, 5, 7] -> [9]
number of minimal keys : 1
########################

schemata : [10, 11, 12, 13, 5]
FD set : 
[10, 11, 12, 5] -> [13]
number of minimal keys : 1
########################

schemata : [10, 11, 14, 4, 5]
FD set : 
[10, 11, 14, 5] -> [4]
number of minimal keys : 1
########################

schemata : [10, 15, 5, 7]
FD set : 
[10, 15, 5] -> [7]
number of minimal keys : 1
########################

schemata : [10, 13, 15, 5]
FD set : 
[10, 15, 5] -> [13]
number of minimal keys : 1
########################

schemata : [11, 12, 5, 9]
FD set : 
[11, 12, 5] -> [9]
number of minimal keys : 1
########################

schemata : [11, 12, 13, 14, 5, 8]
FD set : 
[11, 12, 13, 14, 5] -> [8]
number of minimal keys : 1
########################

schemata : [12, 13, 14, 5, 9]
FD set : 
[12, 13, 14, 5] -> [9]
number of minimal keys : 1
########################

schemata : [13, 14, 15, 5, 9]
FD set : 
[13, 14, 15, 5] -> [9]
number of minimal keys : 1
########################

schemata : [11, 15, 6, 7, 8, 9]
FD set : 
[11, 15, 6, 7, 8] -> [9]
number of minimal keys : 1
########################

schemata : [11, 13, 14, 15, 6, 7, 9]
FD set : 
[11, 13, 14, 15, 6, 7] -> [9]
number of minimal keys : 1
########################

schemata : [12, 15, 6, 7, 9]
FD set : 
[12, 15, 6, 7] -> [9]
number of minimal keys : 1
########################

schemata : [11, 13, 14, 15, 6, 8, 9]
FD set : 
[11, 13, 14, 15, 6, 8] -> [9]
number of minimal keys : 1
########################

schemata : [11, 12, 15, 6, 9]
FD set : 
[11, 12, 15, 6] -> [9]
number of minimal keys : 1
########################

schemata : [12, 14, 15, 6, 9]
FD set : 
[12, 14, 15, 6] -> [9]
number of minimal keys : 1
########################

schemata : [11, 13, 15, 7, 8, 9]
FD set : 
[11, 13, 15, 7, 8] -> [9]
number of minimal keys : 1
########################

schemata : [11, 14, 15, 7, 8, 9]
FD set : 
[11, 14, 15, 7, 8] -> [9]
number of minimal keys : 1
########################

schemata : [10, 12, 14, 15, 7, 8]
FD set : 
[10, 12, 14, 15, 7] -> [8]
number of minimal keys : 1
########################

schemata : [11, 12, 15, 7, 9]
FD set : 
[11, 12, 15, 7] -> [9]
number of minimal keys : 1
########################

schemata : [12, 14, 15, 7, 9]
FD set : 
[12, 14, 15, 7] -> [9]
number of minimal keys : 1
########################

schemata : [10, 9]
FD set : 
[10] -> [9]
number of minimal keys : 1
########################

schemata : [11, 12, 13, 15, 9]
FD set : 
[11, 12, 13, 15] -> [9]
number of minimal keys : 1
########################

schemata : [12, 13, 14, 15, 9]
FD set : 
[12, 13, 14, 15] -> [9]
number of minimal keys : 1
########################


=============================

average key num on all schematas : 1.5911413969335604

=============================

final decomposition number of schemata : 587

=============================

final decomposition number of schemata in BCNF : 558

=============================

BCNF schemata as follows :

BCNF schemata : [11, 13, 14, 15, 2, 3, 6, 7, 8]
FD set : 
[15, 2, 3, 6, 7, 8] -> [11]
[15, 2, 3, 6, 7, 8] -> [13]
[15, 2, 3, 6, 7, 8] -> [14]
[13, 15, 2, 3, 6, 7] -> [8]
[13, 15, 2, 3, 6, 7] -> [11]
[13, 15, 2, 3, 6, 7] -> [14]
[14, 15, 2, 3, 6, 7] -> [8]
[14, 15, 2, 3, 6, 7] -> [11]
[14, 15, 2, 3, 6, 7] -> [13]
[14, 15, 2, 3, 6, 8] -> [7]
[14, 15, 2, 3, 6, 8] -> [11]
[14, 15, 2, 3, 6, 8] -> [13]
[13, 14, 15, 2, 3, 6] -> [7]
[13, 14, 15, 2, 3, 6] -> [8]
[13, 14, 15, 2, 3, 6] -> [11]
[13, 14, 15, 2, 3, 7, 8] -> [6]
[13, 14, 15, 2, 3, 7, 8] -> [11]
[11, 15, 2, 3] -> [6]
[11, 15, 2, 3] -> [7]
[11, 15, 2, 3] -> [8]
[11, 15, 2, 3] -> [13]
[11, 15, 2, 3] -> [14]
[14, 15, 2, 6, 7, 8] -> [3]
[14, 15, 2, 6, 7, 8] -> [11]
[14, 15, 2, 6, 7, 8] -> [13]
[13, 14, 15, 2, 6, 7] -> [3]
[13, 14, 15, 2, 6, 7] -> [8]
[13, 14, 15, 2, 6, 7] -> [11]
[13, 14, 15, 2, 6, 8] -> [3]
[13, 14, 15, 2, 6, 8] -> [7]
[13, 14, 15, 2, 6, 8] -> [11]
[11, 15, 2, 6] -> [3]
[11, 15, 2, 6] -> [7]
[11, 15, 2, 6] -> [8]
[11, 15, 2, 6] -> [13]
[11, 15, 2, 6] -> [14]
[11, 15, 2, 7] -> [3]
[11, 15, 2, 7] -> [6]
[11, 15, 2, 7] -> [8]
[11, 15, 2, 7] -> [13]
[11, 15, 2, 7] -> [14]
[11, 14, 15, 2, 8] -> [3]
[11, 14, 15, 2, 8] -> [6]
[11, 14, 15, 2, 8] -> [7]
[11, 14, 15, 2, 8] -> [13]
[11, 13, 15, 2] -> [3]
[11, 13, 15, 2] -> [6]
[11, 13, 15, 2] -> [7]
[11, 13, 15, 2] -> [8]
[11, 13, 15, 2] -> [14]
[11, 13, 14, 15, 3, 6, 7, 8] -> [2]
number of minimal keys : 15
########################

BCNF schemata : [1, 10, 11, 14, 15, 2, 3, 8]
FD set : 
[1, 10, 11, 14, 2, 3, 8] -> [15]
[1, 15, 2, 3, 8] -> [10]
[1, 15, 2, 3, 8] -> [11]
[1, 15, 2, 3, 8] -> [14]
[1, 14, 15, 2, 3] -> [8]
[1, 14, 15, 2, 3] -> [10]
[1, 14, 15, 2, 3] -> [11]
[1, 14, 15, 2, 8] -> [3]
[1, 14, 15, 2, 8] -> [10]
[1, 14, 15, 2, 8] -> [11]
[1, 10, 15] -> [2]
[1, 10, 15] -> [3]
[1, 10, 15] -> [8]
[1, 10, 15] -> [11]
[1, 10, 15] -> [14]
[1, 11, 15] -> [2]
[1, 11, 15] -> [3]
[1, 11, 15] -> [8]
[1, 11, 15] -> [10]
[1, 11, 15] -> [14]
[11, 15, 2, 3] -> [1]
[11, 15, 2, 3] -> [8]
[11, 15, 2, 3] -> [10]
[11, 15, 2, 3] -> [14]
[11, 14, 15, 2, 8] -> [1]
[11, 14, 15, 2, 8] -> [3]
[11, 14, 15, 2, 8] -> [10]
[10, 15, 2] -> [1]
[10, 15, 2] -> [3]
[10, 15, 2] -> [8]
[10, 15, 2] -> [11]
[10, 15, 2] -> [14]
[10, 11, 14, 15, 3] -> [1]
[10, 11, 14, 15, 3] -> [2]
[10, 11, 14, 15, 3] -> [8]
number of minimal keys : 10
########################

BCNF schemata : [1, 11, 12, 13, 14, 3, 6, 7]
FD set : 
[1, 11, 12, 3, 6, 7] -> [13]
[1, 11, 12, 3, 6, 7] -> [14]
[1, 11, 13, 14, 3, 6, 7] -> [12]
[1, 11, 12, 14, 3, 7] -> [6]
[1, 11, 12, 14, 3, 7] -> [13]
[1, 11, 12, 13, 14, 3] -> [6]
[1, 11, 12, 13, 14, 3] -> [7]
[1, 11, 12, 14, 6, 7] -> [3]
[1, 11, 12, 14, 6, 7] -> [13]
[1, 11, 12, 13, 14, 7] -> [3]
[1, 11, 12, 13, 14, 7] -> [6]
number of minimal keys : 6
########################

BCNF schemata : [13, 14, 15, 2, 3, 6, 7, 9]
FD set : 
[13, 15, 2, 3, 6, 7] -> [9]
[13, 15, 2, 3, 6, 7] -> [14]
[14, 15, 2, 3, 6, 7] -> [9]
[14, 15, 2, 3, 6, 7] -> [13]
[13, 14, 15, 2, 3, 6] -> [7]
[13, 14, 15, 2, 3, 6] -> [9]
[13, 14, 15, 2, 3, 7, 9] -> [6]
[14, 15, 2, 6, 7, 9] -> [3]
[14, 15, 2, 6, 7, 9] -> [13]
[13, 14, 15, 2, 6, 7] -> [3]
[13, 14, 15, 2, 6, 7] -> [9]
number of minimal keys : 6
########################

BCNF schemata : [0, 10, 12, 13, 14, 3, 5, 8]
FD set : 
[0, 3] -> [5]
[0, 3] -> [8]
[0, 3] -> [10]
[0, 3] -> [12]
[0, 3] -> [13]
[0, 3] -> [14]
[0, 14, 5, 8] -> [3]
[0, 14, 5, 8] -> [10]
[0, 14, 5, 8] -> [12]
[0, 14, 5, 8] -> [13]
[0, 10, 5] -> [3]
[0, 10, 5] -> [8]
[0, 10, 5] -> [12]
[0, 10, 5] -> [13]
[0, 10, 5] -> [14]
[0, 12, 5] -> [3]
[0, 12, 5] -> [8]
[0, 12, 5] -> [10]
[0, 12, 5] -> [13]
[0, 12, 5] -> [14]
[0, 13, 14, 5] -> [3]
[0, 13, 14, 5] -> [8]
[0, 13, 14, 5] -> [10]
[0, 13, 14, 5] -> [12]
[10, 12, 13, 14, 3, 5, 8] -> [0]
number of minimal keys : 6
########################

BCNF schemata : [1, 10, 12, 13, 14, 2, 3, 6]
FD set : 
[1, 10, 12, 13, 2, 3, 6] -> [14]
[1, 10, 12, 14, 2, 3, 6] -> [13]
[1, 10, 12, 13, 14, 2, 3] -> [6]
[1, 10, 12, 13, 14, 2, 6] -> [3]
[1, 10, 12, 13, 14, 3, 6] -> [2]
number of minimal keys : 5
########################

BCNF schemata : [0, 12, 13, 14, 15, 3, 6, 7]
FD set : 
[0, 3] -> [6]
[0, 3] -> [7]
[0, 3] -> [12]
[0, 3] -> [13]
[0, 3] -> [14]
[0, 3] -> [15]
[0, 15, 6] -> [3]
[0, 15, 6] -> [7]
[0, 15, 6] -> [12]
[0, 15, 6] -> [13]
[0, 15, 6] -> [14]
[0, 14, 15, 7] -> [3]
[0, 14, 15, 7] -> [6]
[0, 14, 15, 7] -> [12]
[0, 14, 15, 7] -> [13]
[0, 12, 15] -> [3]
[0, 12, 15] -> [6]
[0, 12, 15] -> [7]
[0, 12, 15] -> [13]
[0, 12, 15] -> [14]
[12, 13, 14, 15, 3, 6, 7] -> [0]
number of minimal keys : 5
########################

BCNF schemata : [0, 10, 11, 13, 14, 5, 8]
FD set : 
[0, 14, 5, 8] -> [10]
[0, 14, 5, 8] -> [11]
[0, 14, 5, 8] -> [13]
[0, 10, 5] -> [8]
[0, 10, 5] -> [11]
[0, 10, 5] -> [13]
[0, 10, 5] -> [14]
[0, 11, 5] -> [8]
[0, 11, 5] -> [10]
[0, 11, 5] -> [13]
[0, 11, 5] -> [14]
[0, 13, 14, 5] -> [8]
[0, 13, 14, 5] -> [10]
[0, 13, 14, 5] -> [11]
[10, 11, 13, 14, 5, 8] -> [0]
number of minimal keys : 5
########################

BCNF schemata : [1, 10, 12, 14, 2, 3, 6, 7]
FD set : 
[1, 12, 14, 2, 3, 6, 7] -> [10]
[1, 10, 12, 14, 2, 3, 6] -> [7]
[1, 10, 12, 2, 6, 7] -> [3]
[1, 10, 12, 2, 6, 7] -> [14]
[1, 10, 12, 14, 3, 6, 7] -> [2]
number of minimal keys : 4
########################

BCNF schemata : [1, 10, 12, 13, 2, 3, 6, 7]
FD set : 
[1, 10, 12, 13, 2, 3, 6] -> [7]
[1, 10, 12, 13, 2, 3, 7] -> [6]
[1, 10, 12, 2, 6, 7] -> [3]
[1, 10, 12, 2, 6, 7] -> [13]
[1, 10, 12, 13, 3, 6, 7] -> [2]
number of minimal keys : 4
########################

BCNF schemata : [1, 10, 12, 13, 14, 2, 3, 7]
FD set : 
[1, 10, 12, 13, 2, 3, 7] -> [14]
[1, 10, 12, 13, 14, 2, 3] -> [7]
[1, 10, 12, 13, 14, 2, 7] -> [3]
[1, 10, 12, 13, 14, 3, 7] -> [2]
number of minimal keys : 4
########################

BCNF schemata : [1, 11, 12, 13, 3, 4, 6, 7]
FD set : 
[1, 11, 13, 3, 4, 6, 7] -> [12]
[1, 11, 12, 3, 6, 7] -> [4]
[1, 11, 12, 3, 6, 7] -> [13]
[1, 11, 12, 4, 6] -> [3]
[1, 11, 12, 4, 6] -> [7]
[1, 11, 12, 4, 6] -> [13]
[1, 11, 12, 4, 7] -> [3]
[1, 11, 12, 4, 7] -> [6]
[1, 11, 12, 4, 7] -> [13]
number of minimal keys : 4
########################

BCNF schemata : [10, 11, 12, 13, 14, 15, 3]
FD set : 
[10, 11, 12, 13, 15, 3] -> [14]
[10, 11, 14, 15, 3] -> [12]
[10, 11, 14, 15, 3] -> [13]
[11, 12, 14, 15, 3] -> [10]
[11, 12, 14, 15, 3] -> [13]
[10, 11, 12, 14, 15] -> [3]
[10, 11, 12, 14, 15] -> [13]
number of minimal keys : 4
########################

BCNF schemata : [0, 1, 11, 13, 6]
FD set : 
[0, 1, 11, 6] -> [13]
[0, 1, 13, 6] -> [11]
[0, 1, 11, 13] -> [6]
number of minimal keys : 3
########################

BCNF schemata : [1, 10, 12, 13, 2, 3, 4, 7]
FD set : 
[1, 10, 12, 13, 2, 3, 4] -> [7]
[1, 10, 12, 13, 2, 3, 7] -> [4]
[1, 10, 12, 4, 7] -> [2]
[1, 10, 12, 4, 7] -> [3]
[1, 10, 12, 4, 7] -> [13]
number of minimal keys : 3
########################

BCNF schemata : [1, 14, 15, 2, 3, 9]
FD set : 
[1, 15, 2, 3, 9] -> [14]
[1, 14, 15, 2, 3] -> [9]
[1, 14, 15, 2, 9] -> [3]
number of minimal keys : 3
########################

BCNF schemata : [1, 13, 14, 15, 2, 3]
FD set : 
[1, 13, 15, 2, 3] -> [14]
[1, 14, 15, 2, 3] -> [13]
[1, 13, 14, 15, 2] -> [3]
number of minimal keys : 3
########################

BCNF schemata : [1, 13, 14, 15, 3, 8]
FD set : 
[1, 13, 15, 3, 8] -> [14]
[1, 14, 15, 3, 8] -> [13]
[1, 13, 14, 15, 3] -> [8]
number of minimal keys : 3
########################

BCNF schemata : [1, 13, 14, 15, 3, 7]
FD set : 
[1, 15, 3, 7] -> [13]
[1, 15, 3, 7] -> [14]
[1, 13, 14, 15, 3] -> [7]
[1, 13, 14, 15, 7] -> [3]
number of minimal keys : 3
########################

BCNF schemata : [1, 10, 11, 12, 13, 14, 6]
FD set : 
[1, 10, 11, 12, 6] -> [13]
[1, 10, 11, 12, 6] -> [14]
[1, 10, 11, 13, 14, 6] -> [12]
[1, 10, 11, 12, 13, 14] -> [6]
number of minimal keys : 3
########################

BCNF schemata : [10, 12, 14, 2, 3, 4, 6, 7]
FD set : 
[10, 12, 2, 3, 4, 6, 7] -> [14]
[10, 12, 14, 2, 3, 4, 7] -> [6]
[10, 12, 14, 2, 4, 6, 7] -> [3]
number of minimal keys : 3
########################

BCNF schemata : [14, 15, 2, 3, 4, 7, 9]
FD set : 
[15, 2, 3, 4, 7] -> [9]
[15, 2, 3, 4, 7] -> [14]
[14, 15, 2, 3, 4, 9] -> [7]
[14, 15, 2, 4, 7] -> [3]
[14, 15, 2, 4, 7] -> [9]
number of minimal keys : 3
########################

BCNF schemata : [11, 12, 14, 2, 3, 4, 6, 7]
FD set : 
[11, 12, 2, 3, 4, 6] -> [7]
[11, 12, 2, 3, 4, 6] -> [14]
[11, 12, 14, 2, 3, 6, 7] -> [4]
[11, 12, 14, 2, 4, 7] -> [3]
[11, 12, 14, 2, 4, 7] -> [6]
number of minimal keys : 3
########################

BCNF schemata : [10, 11, 12, 13, 14, 2, 3, 6]
FD set : 
[10, 11, 12, 14, 2, 3, 6] -> [13]
[10, 11, 12, 13, 14, 2, 3] -> [6]
[10, 11, 12, 13, 14, 2, 6] -> [3]
number of minimal keys : 3
########################

BCNF schemata : [12, 14, 15, 3, 4, 6, 7]
FD set : 
[12, 15, 3, 4, 6, 7] -> [14]
[12, 14, 15, 3, 4, 6] -> [7]
[12, 14, 15, 3, 4, 7] -> [6]
number of minimal keys : 3
########################

BCNF schemata : [11, 13, 14, 15, 3, 4, 7]
FD set : 
[11, 13, 15, 3, 4, 7] -> [14]
[11, 14, 15, 3, 4, 7] -> [13]
[11, 13, 14, 15, 3, 4] -> [7]
number of minimal keys : 3
########################

BCNF schemata : [10, 12, 14, 15, 2, 3, 6]
FD set : 
[10, 15, 2] -> [3]
[10, 15, 2] -> [6]
[10, 15, 2] -> [12]
[10, 15, 2] -> [14]
[12, 15, 2] -> [3]
[12, 15, 2] -> [6]
[12, 15, 2] -> [10]
[12, 15, 2] -> [14]
[10, 12, 14, 15, 3, 6] -> [2]
number of minimal keys : 3
########################

BCNF schemata : [10, 12, 13, 14, 15, 3, 7]
FD set : 
[10, 12, 13, 15, 3, 7] -> [14]
[10, 12, 14, 15, 3, 7] -> [13]
[10, 12, 13, 14, 15, 7] -> [3]
number of minimal keys : 3
########################

BCNF schemata : [11, 13, 14, 15, 4, 6, 7]
FD set : 
[11, 13, 15, 4, 6, 7] -> [14]
[11, 14, 15, 4, 6, 7] -> [13]
[11, 13, 14, 15, 4, 6] -> [7]
number of minimal keys : 3
########################

BCNF schemata : [11, 12, 13, 14, 15, 4, 6]
FD set : 
[11, 13, 14, 15, 4, 6] -> [12]
[11, 12, 15, 4] -> [6]
[11, 12, 15, 4] -> [13]
[11, 12, 15, 4] -> [14]
[11, 12, 13, 15, 6] -> [4]
[11, 12, 13, 15, 6] -> [14]
number of minimal keys : 3
########################

BCNF schemata : [10, 12, 13, 15, 3, 4, 7]
FD set : 
[10, 12, 15, 3, 4] -> [7]
[10, 12, 15, 3, 4] -> [13]
[10, 12, 13, 15, 3, 7] -> [4]
[10, 12, 13, 15, 4, 7] -> [3]
number of minimal keys : 3
########################

BCNF schemata : [10, 12, 14, 15, 4, 6, 7]
FD set : 
[10, 12, 15, 4, 6] -> [7]
[10, 12, 15, 4, 6] -> [14]
[10, 12, 14, 15, 4, 7] -> [6]
[10, 12, 14, 15, 6, 7] -> [4]
number of minimal keys : 3
########################

BCNF schemata : [10, 11, 13, 14, 5, 6, 7]
FD set : 
[10, 11, 13, 5, 6, 7] -> [14]
[10, 11, 13, 14, 5, 6] -> [7]
[10, 11, 14, 5, 7] -> [6]
[10, 11, 14, 5, 7] -> [13]
number of minimal keys : 3
########################

BCNF schemata : [10, 12, 13, 14, 15, 2, 7]
FD set : 
[10, 15, 2] -> [7]
[10, 15, 2] -> [12]
[10, 15, 2] -> [13]
[10, 15, 2] -> [14]
[12, 15, 2] -> [7]
[12, 15, 2] -> [10]
[12, 15, 2] -> [13]
[12, 15, 2] -> [14]
[10, 12, 13, 14, 15, 7] -> [2]
number of minimal keys : 3
########################

BCNF schemata : [11, 12, 13, 14, 15, 7, 8]
FD set : 
[11, 12, 13, 15, 7] -> [8]
[11, 12, 13, 15, 7] -> [14]
[11, 12, 14, 15, 7] -> [8]
[11, 12, 14, 15, 7] -> [13]
[11, 12, 13, 14, 15, 8] -> [7]
number of minimal keys : 3
########################

BCNF schemata : [0, 1, 2, 7, 8]
FD set : 
[0, 1, 2, 7] -> [8]
[0, 1, 7, 8] -> [2]
number of minimal keys : 2
########################

BCNF schemata : [0, 1, 13, 2, 3, 8]
FD set : 
[0, 1, 13, 2, 8] -> [3]
[0, 3] -> [1]
[0, 3] -> [2]
[0, 3] -> [8]
[0, 3] -> [13]
number of minimal keys : 2
########################

BCNF schemata : [0, 1, 13, 14, 2]
FD set : 
[0, 1, 14, 2] -> [13]
[0, 1, 13, 14] -> [2]
number of minimal keys : 2
########################

BCNF schemata : [0, 1, 11, 6, 8]
FD set : 
[0, 1, 11, 6] -> [8]
[0, 1, 11, 8] -> [6]
number of minimal keys : 2
########################

BCNF schemata : [0, 1, 11, 13, 8]
FD set : 
[0, 1, 11, 8] -> [13]
[0, 1, 11, 13] -> [8]
number of minimal keys : 2
########################

BCNF schemata : [0, 13, 2, 4, 6, 7]
FD set : 
[0, 2, 4, 6] -> [7]
[0, 2, 4, 6] -> [13]
[0, 13, 2, 4, 7] -> [6]
number of minimal keys : 2
########################

BCNF schemata : [0, 14, 2, 3, 4, 7]
FD set : 
[0, 14, 2, 4, 7] -> [3]
[0, 3] -> [2]
[0, 3] -> [4]
[0, 3] -> [7]
[0, 3] -> [14]
number of minimal keys : 2
########################

BCNF schemata : [0, 11, 13, 14, 2, 4]
FD set : 
[0, 11, 2, 4] -> [13]
[0, 11, 2, 4] -> [14]
[0, 13, 14, 2, 4] -> [11]
number of minimal keys : 2
########################

BCNF schemata : [0, 11, 14, 2, 7, 8]
FD set : 
[0, 11, 2, 7, 8] -> [14]
[0, 11, 14, 2, 7] -> [8]
number of minimal keys : 2
########################

BCNF schemata : [0, 10, 12, 2, 3, 7]
FD set : 
[0, 10, 12, 2, 7] -> [3]
[0, 3] -> [2]
[0, 3] -> [7]
[0, 3] -> [10]
[0, 3] -> [12]
number of minimal keys : 2
########################

BCNF schemata : [0, 10, 13, 2, 6, 7]
FD set : 
[0, 10, 2, 6] -> [7]
[0, 10, 2, 6] -> [13]
[0, 10, 13, 2, 7] -> [6]
number of minimal keys : 2
########################

BCNF schemata : [0, 11, 13, 14, 2, 7]
FD set : 
[0, 11, 13, 2, 7] -> [14]
[0, 11, 14, 2, 7] -> [13]
number of minimal keys : 2
########################

BCNF schemata : [0, 11, 14, 2, 3, 7]
FD set : 
[0, 11, 14, 2, 7] -> [3]
[0, 3] -> [2]
[0, 3] -> [7]
[0, 3] -> [11]
[0, 3] -> [14]
number of minimal keys : 2
########################

BCNF schemata : [0, 12, 13, 2, 3, 7]
FD set : 
[0, 12, 13, 2, 7] -> [3]
[0, 3] -> [2]
[0, 3] -> [7]
[0, 3] -> [12]
[0, 3] -> [13]
number of minimal keys : 2
########################

BCNF schemata : [0, 12, 14, 2, 3, 7]
FD set : 
[0, 12, 14, 2, 7] -> [3]
[0, 3] -> [2]
[0, 3] -> [7]
[0, 3] -> [12]
[0, 3] -> [14]
number of minimal keys : 2
########################

BCNF schemata : [0, 10, 12, 13, 2, 3]
FD set : 
[0, 10, 12, 13, 2] -> [3]
[0, 3] -> [2]
[0, 3] -> [10]
[0, 3] -> [12]
[0, 3] -> [13]
number of minimal keys : 2
########################

BCNF schemata : [0, 11, 12, 13, 14, 2]
FD set : 
[0, 11, 12, 2] -> [13]
[0, 11, 12, 2] -> [14]
[0, 12, 13, 14, 2] -> [11]
number of minimal keys : 2
########################

BCNF schemata : [0, 11, 12, 13, 3, 4, 6, 8]
FD set : 
[0, 3] -> [4]
[0, 3] -> [6]
[0, 3] -> [8]
[0, 3] -> [11]
[0, 3] -> [12]
[0, 3] -> [13]
[0, 11, 12, 13, 4, 6, 8] -> [3]
number of minimal keys : 2
########################

BCNF schemata : [0, 11, 12, 14, 3, 4, 6, 8]
FD set : 
[0, 3] -> [4]
[0, 3] -> [6]
[0, 3] -> [8]
[0, 3] -> [11]
[0, 3] -> [12]
[0, 3] -> [14]
[0, 11, 12, 14, 4, 6, 8] -> [3]
number of minimal keys : 2
########################

BCNF schemata : [0, 11, 12, 14, 4, 7, 8]
FD set : 
[0, 11, 12, 4, 7, 8] -> [14]
[0, 11, 12, 14, 4, 7] -> [8]
number of minimal keys : 2
########################

BCNF schemata : [0, 10, 11, 12, 3, 4, 7]
FD set : 
[0, 3] -> [4]
[0, 3] -> [7]
[0, 3] -> [10]
[0, 3] -> [11]
[0, 3] -> [12]
[0, 10, 11, 12, 4, 7] -> [3]
number of minimal keys : 2
########################

BCNF schemata : [0, 10, 11, 13, 3, 4, 7]
FD set : 
[0, 3] -> [4]
[0, 3] -> [7]
[0, 3] -> [10]
[0, 3] -> [11]
[0, 3] -> [13]
[0, 10, 11, 13, 4, 7] -> [3]
number of minimal keys : 2
########################

BCNF schemata : [0, 10, 12, 14, 3, 4, 7]
FD set : 
[0, 3] -> [4]
[0, 3] -> [7]
[0, 3] -> [10]
[0, 3] -> [12]
[0, 3] -> [14]
[0, 10, 12, 14, 4, 7] -> [3]
number of minimal keys : 2
########################

BCNF schemata : [0, 11, 12, 13, 4, 7, 8]
FD set : 
[0, 11, 12, 4, 7, 8] -> [13]
[0, 11, 12, 13, 4, 7] -> [8]
number of minimal keys : 2
########################

BCNF schemata : [0, 11, 12, 14, 4, 6, 7]
FD set : 
[0, 11, 12, 4, 6, 7] -> [14]
[0, 11, 12, 14, 4, 7] -> [6]
number of minimal keys : 2
########################

BCNF schemata : [0, 10, 11, 12, 13, 4, 8]
FD set : 
[0, 10, 11, 12, 4, 8] -> [13]
[0, 10, 11, 12, 13, 4] -> [8]
number of minimal keys : 2
########################

BCNF schemata : [0, 10, 11, 12, 13, 14, 4]
FD set : 
[0, 10, 11, 12, 13, 4] -> [14]
[0, 11, 12, 13, 14, 4] -> [10]
number of minimal keys : 2
########################

BCNF schemata : [0, 14, 15, 5, 8]
FD set : 
[0, 14, 5, 8] -> [15]
[0, 15, 5] -> [8]
[0, 15, 5] -> [14]
number of minimal keys : 2
########################

BCNF schemata : [0, 13, 14, 15, 5]
FD set : 
[0, 13, 14, 5] -> [15]
[0, 15, 5] -> [13]
[0, 15, 5] -> [14]
number of minimal keys : 2
########################

BCNF schemata : [0, 10, 12, 13, 14, 6, 7, 8]
FD set : 
[0, 10, 12, 14, 6, 7, 8] -> [13]
[0, 10, 12, 13, 14, 6, 7] -> [8]
number of minimal keys : 2
########################

BCNF schemata : [0, 11, 12, 13, 3, 6, 7, 8]
FD set : 
[0, 3] -> [6]
[0, 3] -> [7]
[0, 3] -> [8]
[0, 3] -> [11]
[0, 3] -> [12]
[0, 3] -> [13]
[0, 11, 12, 13, 6, 7, 8] -> [3]
number of minimal keys : 2
########################

BCNF schemata : [0, 10, 11, 12, 13, 3, 7, 8]
FD set : 
[0, 3] -> [7]
[0, 3] -> [8]
[0, 3] -> [10]
[0, 3] -> [11]
[0, 3] -> [12]
[0, 3] -> [13]
[0, 10, 11, 12, 13, 7, 8] -> [3]
number of minimal keys : 2
########################

BCNF schemata : [0, 11, 12, 15]
FD set : 
[0, 11, 15] -> [12]
[0, 12, 15] -> [11]
number of minimal keys : 2
########################

BCNF schemata : [1, 10, 11, 13, 2, 6, 7]
FD set : 
[1, 10, 11, 2, 6, 7] -> [13]
[1, 10, 11, 13, 2, 6] -> [7]
number of minimal keys : 2
########################

BCNF schemata : [1, 10, 13, 14, 2, 3, 6, 7]
FD set : 
[1, 10, 13, 14, 2, 6, 7] -> [3]
[1, 10, 13, 14, 3, 6, 7] -> [2]
number of minimal keys : 2
########################

BCNF schemata : [1, 14, 15, 2, 6, 9]
FD set : 
[1, 15, 2, 6, 9] -> [14]
[1, 14, 15, 2, 9] -> [6]
number of minimal keys : 2
########################

BCNF schemata : [1, 10, 11, 12, 13, 2, 6]
FD set : 
[1, 10, 11, 13, 2, 6] -> [12]
[1, 10, 11, 12, 6] -> [2]
[1, 10, 11, 12, 6] -> [13]
number of minimal keys : 2
########################

BCNF schemata : [1, 10, 11, 14, 2, 3, 6]
FD set : 
[1, 10, 11, 14, 2, 6] -> [3]
[1, 10, 11, 14, 3, 6] -> [2]
number of minimal keys : 2
########################

BCNF schemata : [1, 13, 14, 15, 2, 8]
FD set : 
[1, 14, 15, 2, 8] -> [13]
[1, 13, 14, 15, 2] -> [8]
number of minimal keys : 2
########################

BCNF schemata : [1, 10, 11, 12, 13, 2, 3]
FD set : 
[1, 10, 11, 12, 13, 2] -> [3]
[1, 10, 11, 12, 13, 3] -> [2]
number of minimal keys : 2
########################

BCNF schemata : [1, 10, 11, 12, 13, 14, 2]
FD set : 
[1, 10, 11, 12, 14, 2] -> [13]
[1, 10, 11, 12, 13, 14] -> [2]
number of minimal keys : 2
########################

BCNF schemata : [1, 12, 13, 14, 2, 3, 4, 7]
FD set : 
[1, 12, 14, 2, 3, 4, 7] -> [13]
[1, 12, 13, 14, 3, 4, 7] -> [2]
number of minimal keys : 2
########################

BCNF schemata : [1, 14, 15, 3, 4, 9]
FD set : 
[1, 15, 3, 4, 9] -> [14]
[1, 14, 15, 4] -> [3]
[1, 14, 15, 4] -> [9]
number of minimal keys : 2
########################

BCNF schemata : [1, 10, 11, 13, 3, 6, 7]
FD set : 
[1, 10, 11, 3, 6, 7] -> [13]
[1, 10, 11, 13, 3, 6] -> [7]
number of minimal keys : 2
########################

BCNF schemata : [1, 10, 11, 12, 13, 3, 6]
FD set : 
[1, 10, 11, 13, 3, 6] -> [12]
[1, 10, 11, 12, 6] -> [3]
[1, 10, 11, 12, 6] -> [13]
number of minimal keys : 2
########################

BCNF schemata : [1, 10, 11, 12, 14, 2, 3]
FD set : 
[1, 10, 11, 12, 14, 2] -> [3]
[1, 10, 11, 12, 14, 3] -> [2]
number of minimal keys : 2
########################

BCNF schemata : [1, 11, 12, 13, 14, 3, 5]
FD set : 
[1, 11, 12, 13, 14, 3] -> [5]
[1, 11, 12, 14, 5] -> [3]
[1, 11, 12, 14, 5] -> [13]
number of minimal keys : 2
########################

BCNF schemata : [1, 11, 12, 13, 2, 4, 8]
FD set : 
[1, 11, 12, 2, 4] -> [8]
[1, 11, 12, 2, 4] -> [13]
[1, 11, 12, 13, 4, 8] -> [2]
number of minimal keys : 2
########################

BCNF schemata : [1, 15, 4, 8, 9]
FD set : 
[1, 15, 4, 8] -> [9]
[1, 15, 4, 9] -> [8]
number of minimal keys : 2
########################

BCNF schemata : [1, 10, 12, 13, 14, 6, 7]
FD set : 
[1, 10, 12, 13, 6, 7] -> [14]
[1, 10, 12, 13, 14, 7] -> [6]
number of minimal keys : 2
########################

BCNF schemata : [1, 12, 13, 14, 15, 6]
FD set : 
[1, 13, 14, 15, 6] -> [12]
[1, 12, 15] -> [6]
[1, 12, 15] -> [13]
[1, 12, 15] -> [14]
number of minimal keys : 2
########################

BCNF schemata : [1, 14, 15, 3, 7, 9]
FD set : 
[1, 15, 3, 7] -> [9]
[1, 15, 3, 7] -> [14]
[1, 14, 15, 7, 9] -> [3]
number of minimal keys : 2
########################

BCNF schemata : [1, 10, 11, 13, 14, 3, 7]
FD set : 
[1, 10, 11, 13, 14, 3] -> [7]
[1, 10, 11, 13, 14, 7] -> [3]
number of minimal keys : 2
########################

BCNF schemata : [1, 13, 14, 15, 7, 9]
FD set : 
[1, 14, 15, 7, 9] -> [13]
[1, 13, 14, 15, 7] -> [9]
number of minimal keys : 2
########################

BCNF schemata : [1, 10, 11, 12, 13, 14, 8]
FD set : 
[1, 10, 11, 12, 13, 8] -> [14]
[1, 10, 11, 12, 13, 14] -> [8]
number of minimal keys : 2
########################

BCNF schemata : [10, 13, 14, 2, 3, 4, 6, 7, 8]
FD set : 
[10, 13, 14, 2, 3, 4, 6, 7] -> [8]
[10, 13, 14, 2, 4, 6, 7, 8] -> [3]
number of minimal keys : 2
########################

BCNF schemata : [12, 13, 15, 2, 3, 4, 8]
FD set : 
[13, 15, 2, 3, 4, 8] -> [12]
[12, 15, 2] -> [3]
[12, 15, 2] -> [4]
[12, 15, 2] -> [8]
[12, 15, 2] -> [13]
number of minimal keys : 2
########################

BCNF schemata : [10, 11, 12, 14, 2, 3, 4]
FD set : 
[10, 11, 12, 2, 3, 4] -> [14]
[10, 11, 12, 14, 2, 4] -> [3]
number of minimal keys : 2
########################

BCNF schemata : [10, 13, 2, 3, 5, 6, 7]
FD set : 
[10, 2, 3, 5, 6, 7] -> [13]
[10, 13, 2, 3, 5, 6] -> [7]
number of minimal keys : 2
########################

BCNF schemata : [10, 13, 14, 2, 3, 5, 7]
FD set : 
[10, 13, 2, 3, 5, 7] -> [14]
[10, 14, 2, 3, 5, 7] -> [13]
number of minimal keys : 2
########################

BCNF schemata : [10, 12, 2, 3, 5, 6, 8]
FD set : 
[10, 12, 2, 3, 5, 8] -> [6]
[10, 12, 2, 5, 6] -> [3]
[10, 12, 2, 5, 6] -> [8]
number of minimal keys : 2
########################

BCNF schemata : [10, 11, 12, 13, 2, 3, 6, 7]
FD set : 
[10, 11, 12, 2, 3, 6, 7] -> [13]
[10, 11, 12, 13, 2, 6, 7] -> [3]
number of minimal keys : 2
########################

BCNF schemata : [12, 13, 15, 2, 3, 6, 7]
FD set : 
[13, 15, 2, 3, 6, 7] -> [12]
[12, 15, 2] -> [3]
[12, 15, 2] -> [6]
[12, 15, 2] -> [7]
[12, 15, 2] -> [13]
number of minimal keys : 2
########################

BCNF schemata : [12, 14, 15, 2, 3, 6, 7]
FD set : 
[14, 15, 2, 3, 6, 7] -> [12]
[12, 15, 2] -> [3]
[12, 15, 2] -> [6]
[12, 15, 2] -> [7]
[12, 15, 2] -> [14]
number of minimal keys : 2
########################

BCNF schemata : [12, 14, 15, 2, 3, 6, 8]
FD set : 
[14, 15, 2, 3, 6, 8] -> [12]
[12, 15, 2] -> [3]
[12, 15, 2] -> [6]
[12, 15, 2] -> [8]
[12, 15, 2] -> [14]
number of minimal keys : 2
########################

BCNF schemata : [12, 13, 14, 15, 2, 3, 6]
FD set : 
[13, 14, 15, 2, 3, 6] -> [12]
[12, 15, 2] -> [3]
[12, 15, 2] -> [6]
[12, 15, 2] -> [13]
[12, 15, 2] -> [14]
number of minimal keys : 2
########################

BCNF schemata : [13, 15, 2, 4, 6, 9]
FD set : 
[15, 2, 4, 6, 9] -> [13]
[13, 15, 2, 4, 6] -> [9]
number of minimal keys : 2
########################

BCNF schemata : [10, 11, 12, 14, 2, 4, 6]
FD set : 
[10, 11, 12, 2, 4, 6] -> [14]
[10, 11, 12, 14, 2, 4] -> [6]
number of minimal keys : 2
########################

BCNF schemata : [10, 11, 13, 14, 2, 4, 6, 7]
FD set : 
[10, 11, 2, 4, 6, 7] -> [13]
[10, 11, 2, 4, 6, 7] -> [14]
[10, 11, 13, 14, 2, 4, 6] -> [7]
number of minimal keys : 2
########################

BCNF schemata : [13, 15, 2, 4, 7, 9]
FD set : 
[15, 2, 4, 7, 9] -> [13]
[13, 15, 2, 4, 7] -> [9]
number of minimal keys : 2
########################

BCNF schemata : [10, 11, 12, 13, 2, 4, 7]
FD set : 
[10, 11, 12, 2, 4, 7] -> [13]
[10, 11, 12, 13, 2, 4] -> [7]
number of minimal keys : 2
########################

BCNF schemata : [10, 11, 12, 13, 2, 4, 6]
FD set : 
[10, 11, 12, 2, 4, 6] -> [13]
[10, 11, 12, 13, 2, 4] -> [6]
number of minimal keys : 2
########################

BCNF schemata : [12, 13, 14, 2, 5, 6, 7]
FD set : 
[12, 13, 2, 5, 6, 7] -> [14]
[12, 14, 2, 5, 6] -> [7]
[12, 14, 2, 5, 6] -> [13]
number of minimal keys : 2
########################

BCNF schemata : [10, 13, 14, 2, 5, 6, 7]
FD set : 
[10, 14, 2, 5, 6, 7] -> [13]
[10, 13, 14, 2, 5, 6] -> [7]
number of minimal keys : 2
########################

BCNF schemata : [10, 11, 14, 2, 5, 6]
FD set : 
[11, 14, 2, 5, 6] -> [10]
[10, 11, 2, 5] -> [6]
[10, 11, 2, 5] -> [14]
number of minimal keys : 2
########################

BCNF schemata : [12, 13, 14, 2, 5, 7, 8]
FD set : 
[12, 14, 2, 5, 7, 8] -> [13]
[12, 13, 14, 2, 5, 7] -> [8]
number of minimal keys : 2
########################

BCNF schemata : [10, 12, 13, 2, 5, 6, 8]
FD set : 
[10, 12, 2, 5, 6] -> [8]
[10, 12, 2, 5, 6] -> [13]
[10, 12, 13, 2, 5, 8] -> [6]
number of minimal keys : 2
########################

BCNF schemata : [13, 14, 15, 2, 5]
FD set : 
[13, 15, 2, 5] -> [14]
[14, 15, 2, 5] -> [13]
number of minimal keys : 2
########################

BCNF schemata : [12, 13, 14, 15, 2, 6, 7]
FD set : 
[13, 14, 15, 2, 6, 7] -> [12]
[12, 15, 2] -> [6]
[12, 15, 2] -> [7]
[12, 15, 2] -> [13]
[12, 15, 2] -> [14]
number of minimal keys : 2
########################

BCNF schemata : [12, 13, 14, 15, 3, 4, 6]
FD set : 
[12, 13, 15, 3, 4, 6] -> [14]
[12, 14, 15, 3, 4, 6] -> [13]
number of minimal keys : 2
########################

BCNF schemata : [10, 13, 14, 15, 3, 4, 7]
FD set : 
[10, 14, 15, 3, 4, 7] -> [13]
[10, 13, 14, 15, 4, 7] -> [3]
number of minimal keys : 2
########################

BCNF schemata : [12, 13, 14, 15, 3, 4, 7]
FD set : 
[12, 14, 15, 3, 4, 7] -> [13]
[12, 13, 14, 15, 4, 7] -> [3]
number of minimal keys : 2
########################

BCNF schemata : [10, 11, 13, 15, 3, 4]
FD set : 
[10, 11, 15, 3, 4] -> [13]
[10, 11, 13, 15, 4] -> [3]
number of minimal keys : 2
########################

BCNF schemata : [11, 13, 14, 15, 3, 4, 6]
FD set : 
[11, 13, 14, 15, 3, 4] -> [6]
[11, 13, 14, 15, 4, 6] -> [3]
number of minimal keys : 2
########################

BCNF schemata : [12, 14, 2, 3, 5, 6, 7]
FD set : 
[12, 14, 2, 5, 6] -> [3]
[12, 14, 2, 5, 6] -> [7]
[12, 14, 3, 5, 6, 7] -> [2]
number of minimal keys : 2
########################

BCNF schemata : [10, 11, 14, 3, 5, 6]
FD set : 
[10, 11, 3, 5, 6] -> [14]
[10, 11, 14, 5, 6] -> [3]
number of minimal keys : 2
########################

BCNF schemata : [11, 12, 13, 14, 3, 5, 6]
FD set : 
[11, 12, 13, 3, 5, 6] -> [14]
[11, 12, 14, 5, 6] -> [3]
[11, 12, 14, 5, 6] -> [13]
number of minimal keys : 2
########################

BCNF schemata : [1, 11, 12, 3, 5, 7, 8]
FD set : 
[1, 11, 12, 5, 7] -> [3]
[1, 11, 12, 5, 7] -> [8]
[11, 12, 3, 5, 7, 8] -> [1]
number of minimal keys : 2
########################

BCNF schemata : [11, 13, 15, 3, 5, 9]
FD set : 
[13, 15, 3, 5, 9] -> [11]
[11, 15, 5] -> [3]
[11, 15, 5] -> [9]
[11, 15, 5] -> [13]
number of minimal keys : 2
########################

BCNF schemata : [10, 11, 12, 15, 3, 6]
FD set : 
[10, 11, 15, 3, 6] -> [12]
[10, 11, 12, 15, 6] -> [3]
number of minimal keys : 2
########################

BCNF schemata : [11, 12, 13, 4, 5, 6, 8]
FD set : 
[11, 12, 4, 5, 6, 8] -> [13]
[11, 12, 13, 5, 6] -> [4]
[11, 12, 13, 5, 6] -> [8]
number of minimal keys : 2
########################

BCNF schemata : [12, 13, 15, 4, 5, 6]
FD set : 
[13, 15, 4, 5, 6] -> [12]
[12, 15, 5] -> [4]
[12, 15, 5] -> [6]
[12, 15, 5] -> [13]
number of minimal keys : 2
########################

BCNF schemata : [12, 13, 14, 15, 4, 5]
FD set : 
[13, 14, 15, 4, 5] -> [12]
[12, 15, 5] -> [4]
[12, 15, 5] -> [13]
[12, 15, 5] -> [14]
number of minimal keys : 2
########################

BCNF schemata : [12, 13, 14, 15, 4, 6, 7]
FD set : 
[12, 13, 15, 4, 6, 7] -> [14]
[12, 13, 14, 15, 4, 7] -> [6]
number of minimal keys : 2
########################

BCNF schemata : [10, 11, 13, 15, 4, 6]
FD set : 
[10, 11, 15, 4, 6] -> [13]
[10, 11, 13, 15, 4] -> [6]
number of minimal keys : 2
########################

BCNF schemata : [10, 13, 14, 15, 3, 4, 6]
FD set : 
[10, 15, 3, 4, 6] -> [13]
[10, 15, 3, 4, 6] -> [14]
[10, 13, 14, 15, 4, 6] -> [3]
number of minimal keys : 2
########################

BCNF schemata : [10, 11, 12, 13, 15, 4]
FD set : 
[10, 11, 13, 15, 4] -> [12]
[11, 12, 15, 4] -> [10]
[11, 12, 15, 4] -> [13]
number of minimal keys : 2
########################

BCNF schemata : [10, 12, 13, 14, 15, 4, 6]
FD set : 
[10, 12, 15, 4, 6] -> [13]
[10, 12, 15, 4, 6] -> [14]
[10, 12, 13, 14, 15, 4] -> [6]
number of minimal keys : 2
########################

BCNF schemata : [10, 11, 12, 14, 5, 6]
FD set : 
[11, 12, 14, 5, 6] -> [10]
[10, 11, 12, 5] -> [6]
[10, 11, 12, 5] -> [14]
number of minimal keys : 2
########################

BCNF schemata : [12, 13, 15, 5, 7, 9]
FD set : 
[13, 15, 5, 7, 9] -> [12]
[12, 15, 5] -> [7]
[12, 15, 5] -> [9]
[12, 15, 5] -> [13]
number of minimal keys : 2
########################

BCNF schemata : [10, 12, 13, 14, 3, 5, 7]
FD set : 
[10, 12, 14, 3, 5, 7] -> [13]
[10, 12, 13, 14, 5, 7] -> [3]
number of minimal keys : 2
########################

BCNF schemata : [11, 12, 14, 15, 6, 7]
FD set : 
[11, 12, 15, 6, 7] -> [14]
[11, 12, 14, 15, 7] -> [6]
number of minimal keys : 2
########################

BCNF schemata : [11, 12, 14, 15, 4, 6, 8]
FD set : 
[11, 12, 15, 4] -> [6]
[11, 12, 15, 4] -> [8]
[11, 12, 15, 4] -> [14]
[11, 12, 14, 15, 6, 8] -> [4]
number of minimal keys : 2
########################

BCNF schemata : [10, 11, 13, 15, 6, 7, 8]
FD set : 
[10, 11, 13, 15, 6] -> [7]
[10, 11, 13, 15, 6] -> [8]
[10, 11, 13, 15, 7, 8] -> [6]
number of minimal keys : 2
########################

BCNF schemata : [0, 1, 2, 9]
FD set : 
[0, 1, 2] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 1, 14, 2, 6]
FD set : 
[0, 1, 2, 6] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [0, 1, 14, 5]
FD set : 
[0, 1, 5] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [0, 1, 6, 9]
FD set : 
[0, 1, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 1, 14, 6, 8]
FD set : 
[0, 1, 14, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 1, 7, 9]
FD set : 
[0, 1, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 1, 11, 7, 8]
FD set : 
[0, 1, 11, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 1, 13, 14, 7]
FD set : 
[0, 1, 13, 7] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [0, 1, 14, 8, 9]
FD set : 
[0, 1, 14, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 1, 10, 13]
FD set : 
[0, 1, 10] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [0, 1, 10, 14]
FD set : 
[0, 1, 10] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [0, 1, 11, 9]
FD set : 
[0, 1, 11] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 1, 11, 13, 14]
FD set : 
[0, 1, 11, 14] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [0, 1, 12, 13]
FD set : 
[0, 1, 12] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [0, 1, 12, 14]
FD set : 
[0, 1, 12] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [0, 1, 13, 9]
FD set : 
[0, 1, 13] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 1, 13, 15]
FD set : 
[0, 1, 15] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [0, 1, 14, 15]
FD set : 
[0, 1, 15] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [0, 2, 4, 9]
FD set : 
[0, 2, 4] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 14, 2, 4, 6]
FD set : 
[0, 2, 4, 6] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [0, 10, 14, 2, 4]
FD set : 
[0, 10, 2, 4] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [0, 11, 2, 4, 7]
FD set : 
[0, 11, 2, 4] -> [7]
number of minimal keys : 1
########################

BCNF schemata : [0, 12, 13, 2, 4]
FD set : 
[0, 12, 2, 4] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [0, 12, 14, 2, 4]
FD set : 
[0, 12, 2, 4] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [0, 13, 2, 4, 8]
FD set : 
[0, 13, 2, 4] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 14, 2, 4, 8]
FD set : 
[0, 14, 2, 4] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 14, 2, 5]
FD set : 
[0, 2, 5] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [0, 2, 6, 7, 9]
FD set : 
[0, 2, 6, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 14, 2, 6, 7, 8]
FD set : 
[0, 14, 2, 6, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 13, 14, 2, 6, 7]
FD set : 
[0, 14, 2, 6, 7] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [0, 10, 14, 2, 6]
FD set : 
[0, 10, 2, 6] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [0, 12, 2, 6, 7]
FD set : 
[0, 12, 2, 6] -> [7]
number of minimal keys : 1
########################

BCNF schemata : [0, 13, 2, 6, 9]
FD set : 
[0, 13, 2, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 14, 2, 6, 9]
FD set : 
[0, 14, 2, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 10, 2, 7, 8]
FD set : 
[0, 10, 2, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 11, 2, 7, 9]
FD set : 
[0, 11, 2, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 12, 2, 7, 8]
FD set : 
[0, 12, 2, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 14, 2, 7, 9]
FD set : 
[0, 14, 2, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 11, 2, 8, 9]
FD set : 
[0, 11, 2, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 13, 14, 2, 8, 9]
FD set : 
[0, 13, 14, 2, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 10, 11, 2, 7]
FD set : 
[0, 10, 11, 2] -> [7]
number of minimal keys : 1
########################

BCNF schemata : [0, 10, 12, 2, 8]
FD set : 
[0, 10, 12, 2] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 10, 13, 2, 8]
FD set : 
[0, 10, 13, 2] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 10, 13, 14, 2]
FD set : 
[0, 10, 14, 2] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [0, 11, 13, 2, 9]
FD set : 
[0, 11, 13, 2] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 11, 14, 2, 9]
FD set : 
[0, 11, 14, 2] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 12, 2, 9]
FD set : 
[0, 12, 2] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 12, 13, 2, 8]
FD set : 
[0, 12, 13, 2] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 12, 14, 2, 8]
FD set : 
[0, 12, 14, 2] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 15, 2, 7]
FD set : 
[0, 15, 2] -> [7]
number of minimal keys : 1
########################

BCNF schemata : [0, 14, 15, 2]
FD set : 
[0, 15, 2] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [0, 11, 4, 6, 7, 8, 9]
FD set : 
[0, 11, 4, 6, 7, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 10, 12, 13, 4, 6, 7]
FD set : 
[0, 10, 12, 4, 6, 7] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [0, 11, 13, 14, 4, 6, 7, 8]
FD set : 
[0, 11, 13, 14, 4, 6, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 12, 4, 6, 7, 8]
FD set : 
[0, 12, 4, 6, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 12, 4, 6, 7, 9]
FD set : 
[0, 12, 4, 6, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 11, 13, 4, 6, 8, 9]
FD set : 
[0, 11, 13, 4, 6, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 10, 12, 4, 6, 8]
FD set : 
[0, 10, 12, 4, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 10, 12, 13, 14, 4, 6]
FD set : 
[0, 10, 12, 13, 4, 6] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [0, 10, 13, 14, 4, 6, 8]
FD set : 
[0, 10, 13, 14, 4, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 11, 14, 4, 6, 9]
FD set : 
[0, 11, 14, 4, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 12, 13, 4, 6, 9]
FD set : 
[0, 12, 13, 4, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 12, 14, 4, 6, 9]
FD set : 
[0, 12, 14, 4, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 10, 12, 13, 4, 7, 8]
FD set : 
[0, 10, 12, 13, 4, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 10, 13, 14, 4, 7, 8]
FD set : 
[0, 10, 13, 14, 4, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 11, 14, 4, 7, 9]
FD set : 
[0, 11, 14, 4, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 12, 13, 4, 7, 9]
FD set : 
[0, 12, 13, 4, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 12, 13, 14, 4, 7, 8]
FD set : 
[0, 12, 13, 14, 4, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 11, 13, 14, 4, 8, 9]
FD set : 
[0, 11, 13, 14, 4, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 10, 11, 13, 14, 4, 8]
FD set : 
[0, 10, 11, 13, 14, 4] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 10, 12, 13, 14, 4, 8]
FD set : 
[0, 10, 12, 13, 14, 4] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 11, 12, 4, 9]
FD set : 
[0, 11, 12, 4] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 11, 12, 13, 14, 4, 6]
FD set : 
[0, 11, 12, 13, 14, 4] -> [6]
number of minimal keys : 1
########################

BCNF schemata : [0, 15, 4, 7]
FD set : 
[0, 15, 4] -> [7]
number of minimal keys : 1
########################

BCNF schemata : [0, 14, 15, 4]
FD set : 
[0, 15, 4] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [0, 5, 9]
FD set : 
[0, 5] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 14, 5, 6]
FD set : 
[0, 5, 6] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [0, 13, 5, 7]
FD set : 
[0, 5, 7] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [0, 14, 5, 7]
FD set : 
[0, 5, 7] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [0, 13, 4, 5]
FD set : 
[0, 13, 5] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [0, 14, 4, 5]
FD set : 
[0, 14, 5] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [0, 11, 12, 14, 6, 7, 8]
FD set : 
[0, 11, 12, 14, 6, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 11, 13, 14, 6, 7, 9]
FD set : 
[0, 11, 13, 14, 6, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 12, 14, 6, 7, 9]
FD set : 
[0, 12, 14, 6, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 11, 13, 14, 6, 8, 9]
FD set : 
[0, 11, 13, 14, 6, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 10, 11, 12, 6, 8]
FD set : 
[0, 10, 11, 12, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 10, 11, 12, 13, 6, 7]
FD set : 
[0, 10, 11, 12, 13, 6] -> [7]
number of minimal keys : 1
########################

BCNF schemata : [0, 10, 11, 12, 14, 6, 7]
FD set : 
[0, 10, 11, 12, 14, 6] -> [7]
number of minimal keys : 1
########################

BCNF schemata : [0, 11, 12, 6, 9]
FD set : 
[0, 11, 12, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 11, 12, 13, 14, 6, 8]
FD set : 
[0, 11, 12, 13, 14, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 11, 12, 7, 9]
FD set : 
[0, 11, 12, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [0, 15, 7, 8]
FD set : 
[0, 15, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [0, 10, 11, 12, 13, 14, 7]
FD set : 
[0, 10, 11, 12, 13, 14] -> [7]
number of minimal keys : 1
########################

BCNF schemata : [0, 10, 15, 7]
FD set : 
[0, 10, 15] -> [7]
number of minimal keys : 1
########################

BCNF schemata : [0, 10, 14, 15]
FD set : 
[0, 10, 15] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [0, 11, 15, 7]
FD set : 
[0, 11, 15] -> [7]
number of minimal keys : 1
########################

BCNF schemata : [0, 11, 14, 15]
FD set : 
[0, 11, 15] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [0, 15, 9]
FD set : 
[0, 15] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 13, 2, 3, 6, 7, 8]
FD set : 
[1, 10, 13, 2, 3, 6, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 14, 2, 3, 6, 7, 8]
FD set : 
[1, 10, 14, 2, 3, 6, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 13, 2, 3, 6, 7, 8]
FD set : 
[1, 11, 13, 2, 3, 6, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 13, 2, 3, 6, 7, 8]
FD set : 
[1, 12, 13, 2, 3, 6, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 13, 2, 3, 6, 9]
FD set : 
[1, 11, 13, 2, 3, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 14, 2, 3, 6, 9]
FD set : 
[1, 11, 14, 2, 3, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 2, 3, 7, 9]
FD set : 
[1, 11, 2, 3, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 12, 2, 3, 7, 8]
FD set : 
[1, 11, 12, 2, 3, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 13, 14, 2, 3, 7, 8]
FD set : 
[1, 12, 13, 14, 2, 3, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 12, 14, 2, 3, 6]
FD set : 
[1, 11, 12, 14, 2, 3] -> [6]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 13, 14, 2, 3, 9]
FD set : 
[1, 11, 13, 14, 2, 3] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 13, 2, 3, 9]
FD set : 
[1, 12, 13, 2, 3] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 12, 13, 2, 6, 7]
FD set : 
[1, 11, 12, 2, 6, 7] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 13, 2, 6, 7, 9]
FD set : 
[1, 11, 13, 2, 6, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 2, 6, 7, 9]
FD set : 
[1, 12, 2, 6, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 12, 13, 2, 6, 8]
FD set : 
[1, 10, 12, 13, 2, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 13, 14, 2, 6, 9]
FD set : 
[1, 11, 13, 14, 2, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 13, 2, 6, 9]
FD set : 
[1, 12, 13, 2, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 14, 2, 6, 9]
FD set : 
[1, 12, 14, 2, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 12, 13, 2, 7, 8]
FD set : 
[1, 10, 12, 13, 2, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 13, 14, 2, 7, 9]
FD set : 
[1, 11, 13, 14, 2, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 15, 2, 8, 9]
FD set : 
[1, 15, 2, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 11, 13, 14, 2, 8]
FD set : 
[1, 10, 11, 13, 14, 2] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 13, 15, 2, 9]
FD set : 
[1, 13, 15, 2] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 14, 2, 3, 4, 6, 7]
FD set : 
[1, 14, 3, 4, 6, 7] -> [2]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 14, 2, 3, 4, 6]
FD set : 
[1, 10, 14, 3, 4, 6] -> [2]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 14, 2, 3, 4, 7]
FD set : 
[1, 10, 14, 3, 4, 7] -> [2]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 14, 2, 3, 4, 7]
FD set : 
[1, 11, 14, 3, 4, 7] -> [2]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 13, 3, 5, 6, 7]
FD set : 
[1, 10, 3, 5, 6, 7] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 13, 14, 3, 5, 6]
FD set : 
[1, 10, 14, 3, 5, 6] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 3, 5, 6, 9]
FD set : 
[1, 11, 3, 5, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 13, 3, 5, 6, 8]
FD set : 
[1, 11, 13, 3, 5, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 13, 14, 3, 5, 6]
FD set : 
[1, 11, 14, 3, 5, 6] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 13, 14, 3, 5, 6]
FD set : 
[1, 12, 14, 3, 5, 6] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 13, 14, 3, 5, 7]
FD set : 
[1, 10, 14, 3, 5, 7] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 14, 3, 5, 7, 8]
FD set : 
[1, 12, 14, 3, 5, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 12, 13, 3, 5, 8]
FD set : 
[1, 11, 12, 3, 5, 8] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 12, 13, 3, 5, 8]
FD set : 
[1, 10, 12, 13, 3, 5] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 13, 14, 3, 5, 8]
FD set : 
[1, 10, 13, 14, 3, 5] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 13, 3, 5, 9]
FD set : 
[1, 11, 13, 3, 5] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 13, 14, 3, 5, 8]
FD set : 
[1, 11, 13, 14, 3, 5] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 14, 3, 5, 9]
FD set : 
[1, 11, 14, 3, 5] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 14, 3, 5, 9]
FD set : 
[1, 12, 14, 3, 5] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 13, 14, 3, 6, 7, 8]
FD set : 
[1, 12, 13, 14, 3, 6, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 13, 3, 6, 8, 9]
FD set : 
[1, 11, 13, 3, 6, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 11, 3, 6, 8]
FD set : 
[1, 10, 11, 3, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 12, 13, 3, 6, 8]
FD set : 
[1, 10, 12, 13, 3, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 12, 14, 3, 6, 8]
FD set : 
[1, 10, 12, 14, 3, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 12, 13, 3, 6, 8]
FD set : 
[1, 11, 12, 13, 3, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 13, 14, 3, 6, 9]
FD set : 
[1, 11, 13, 14, 3, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 13, 3, 6, 9]
FD set : 
[1, 12, 13, 3, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 14, 3, 6, 9]
FD set : 
[1, 12, 14, 3, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 15, 3, 6, 8]
FD set : 
[1, 15, 3, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 12, 13, 3, 7, 8]
FD set : 
[1, 10, 12, 13, 3, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 12, 14, 3, 7, 8]
FD set : 
[1, 10, 12, 14, 3, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 12, 13, 3, 7, 8]
FD set : 
[1, 11, 12, 13, 3, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 13, 3, 7, 9]
FD set : 
[1, 11, 13, 3, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 14, 3, 7, 9]
FD set : 
[1, 11, 14, 3, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 13, 3, 7, 9]
FD set : 
[1, 12, 13, 3, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 14, 3, 7, 9]
FD set : 
[1, 12, 14, 3, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 14, 3, 8, 9]
FD set : 
[1, 11, 14, 3, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 15, 3, 8, 9]
FD set : 
[1, 15, 3, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 11, 13, 14, 2, 3]
FD set : 
[1, 10, 11, 13, 14, 3] -> [2]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 12, 14, 3, 8]
FD set : 
[1, 11, 12, 14, 3] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 13, 14, 3, 9]
FD set : 
[1, 12, 13, 14, 3] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 13, 2, 4, 6, 7]
FD set : 
[1, 10, 13, 4, 6, 7] -> [2]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 14, 3, 4, 6, 7]
FD set : 
[1, 12, 14, 4, 6, 7] -> [3]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 11, 14, 4, 7]
FD set : 
[1, 10, 11, 14, 4] -> [7]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 13, 14, 5, 6, 7]
FD set : 
[1, 10, 14, 5, 6, 7] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 13, 14, 5, 6, 7]
FD set : 
[1, 11, 14, 5, 6, 7] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 11, 3, 5, 6]
FD set : 
[1, 10, 11, 5, 6] -> [3]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 12, 5, 6, 8]
FD set : 
[1, 10, 12, 5, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 12, 13, 5, 6]
FD set : 
[1, 10, 12, 5, 6] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 14, 5, 6, 8]
FD set : 
[1, 10, 14, 5, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 12, 13, 5, 6]
FD set : 
[1, 11, 12, 5, 6] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 13, 5, 6, 9]
FD set : 
[1, 11, 13, 5, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 13, 14, 5, 6, 8]
FD set : 
[1, 11, 13, 14, 5, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 14, 5, 6, 9]
FD set : 
[1, 11, 14, 5, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 5, 6, 9]
FD set : 
[1, 12, 5, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 13, 15, 5, 6]
FD set : 
[1, 15, 5, 6] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 12, 13, 5, 7]
FD set : 
[1, 10, 12, 5, 7] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 12, 14, 5, 7]
FD set : 
[1, 10, 12, 5, 7] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 14, 5, 7, 8]
FD set : 
[1, 10, 14, 5, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 5, 7, 9]
FD set : 
[1, 11, 5, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 12, 13, 5, 7]
FD set : 
[1, 11, 12, 5, 7] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [1, 13, 15, 5, 7]
FD set : 
[1, 15, 5, 7] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 13, 5, 8, 9]
FD set : 
[1, 11, 13, 5, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 14, 5, 8, 9]
FD set : 
[1, 11, 14, 5, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 11, 5, 8]
FD set : 
[1, 10, 11, 5] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 11, 13, 3, 5]
FD set : 
[1, 10, 11, 13, 5] -> [3]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 11, 13, 5, 7]
FD set : 
[1, 10, 11, 13, 5] -> [7]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 12, 14, 5, 8]
FD set : 
[1, 10, 12, 14, 5] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 13, 15, 5, 9]
FD set : 
[1, 13, 15, 5] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 13, 14, 15, 5]
FD set : 
[1, 14, 15, 5] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 13, 6, 7, 8, 9]
FD set : 
[1, 11, 13, 6, 7, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 14, 6, 7, 8, 9]
FD set : 
[1, 11, 14, 6, 7, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 12, 14, 6, 7, 8]
FD set : 
[1, 10, 12, 14, 6, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 14, 15, 6, 7]
FD set : 
[1, 15, 6, 7] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 11, 14, 6, 8]
FD set : 
[1, 10, 11, 14, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 12, 13, 14, 6, 8]
FD set : 
[1, 10, 12, 13, 14, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 13, 14, 7, 8, 9]
FD set : 
[1, 11, 13, 14, 7, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 11, 12, 14, 7]
FD set : 
[1, 10, 11, 12, 7] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 11, 13, 7, 8]
FD set : 
[1, 10, 11, 13, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 11, 14, 2, 7]
FD set : 
[1, 10, 11, 14, 7] -> [2]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 12, 14, 2, 7]
FD set : 
[1, 11, 12, 14, 7] -> [2]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 12, 14, 7, 8]
FD set : 
[1, 11, 12, 14, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 13, 14, 7, 9]
FD set : 
[1, 12, 13, 14, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 11, 12, 13, 3, 8]
FD set : 
[1, 10, 11, 12, 13, 8] -> [3]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 15, 6]
FD set : 
[1, 10, 15] -> [6]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 13, 15]
FD set : 
[1, 10, 15] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 12, 9]
FD set : 
[1, 11, 12] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 2, 3, 4, 6, 7, 8, 9]
FD set : 
[11, 2, 3, 4, 6, 7, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 2, 3, 4, 6, 8, 9]
FD set : 
[11, 13, 2, 3, 4, 6, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 14, 2, 3, 4, 6, 8, 9]
FD set : 
[11, 14, 2, 3, 4, 6, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [10, 11, 13, 2, 3, 4, 6]
FD set : 
[10, 11, 2, 3, 4, 6] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [10, 11, 14, 2, 3, 4, 6]
FD set : 
[10, 11, 2, 3, 4, 6] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 13, 2, 3, 4, 6]
FD set : 
[11, 12, 2, 3, 4, 6] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [12, 2, 3, 4, 6, 9]
FD set : 
[12, 2, 3, 4, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [10, 12, 13, 2, 3, 4, 7, 8]
FD set : 
[10, 12, 13, 2, 3, 4, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [12, 13, 2, 3, 4, 7, 9]
FD set : 
[12, 13, 2, 3, 4, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [13, 15, 2, 3, 4, 7]
FD set : 
[15, 2, 3, 4, 7] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 14, 2, 3, 4, 8, 9]
FD set : 
[11, 13, 14, 2, 3, 4, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [10, 12, 13, 14, 2, 3, 4, 8]
FD set : 
[10, 12, 13, 14, 2, 3, 4] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 13, 2, 3, 4, 8]
FD set : 
[11, 12, 13, 2, 3, 4] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 14, 2, 3, 4, 8]
FD set : 
[11, 12, 14, 2, 3, 4] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [12, 14, 2, 3, 4, 9]
FD set : 
[12, 14, 2, 3, 4] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 13, 2, 3, 5, 6, 7]
FD set : 
[13, 2, 3, 5, 6, 7] -> [1]
number of minimal keys : 1
########################

BCNF schemata : [13, 14, 2, 3, 5, 6, 8, 9]
FD set : 
[13, 14, 2, 3, 5, 6, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 2, 3, 5, 6]
FD set : 
[11, 2, 3, 5, 6] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [13, 2, 3, 4, 5, 6]
FD set : 
[13, 2, 3, 5, 6] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [14, 2, 3, 4, 5, 6]
FD set : 
[14, 2, 3, 5, 6] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [13, 2, 3, 4, 5, 7, 8]
FD set : 
[13, 2, 3, 5, 7, 8] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [10, 2, 3, 5, 7, 8]
FD set : 
[10, 2, 3, 5, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [11, 2, 3, 5, 7, 8]
FD set : 
[11, 2, 3, 5, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 14, 2, 3, 5, 7]
FD set : 
[11, 13, 2, 3, 5, 7] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [12, 13, 2, 3, 5, 7, 8]
FD set : 
[12, 13, 2, 3, 5, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [13, 14, 2, 3, 4, 5, 7]
FD set : 
[13, 14, 2, 3, 5, 7] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [10, 2, 3, 4, 5]
FD set : 
[10, 2, 3, 5] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 13, 2, 3, 5]
FD set : 
[10, 13, 2, 3, 5] -> [1]
number of minimal keys : 1
########################

BCNF schemata : [11, 2, 3, 5, 9]
FD set : 
[11, 2, 3, 5] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 14, 2, 3, 5, 8]
FD set : 
[11, 14, 2, 3, 5] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 2, 3, 5]
FD set : 
[12, 2, 3, 5] -> [1]
number of minimal keys : 1
########################

BCNF schemata : [11, 14, 2, 3, 6, 7, 8, 9]
FD set : 
[11, 14, 2, 3, 6, 7, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [10, 11, 2, 3, 6, 7, 8]
FD set : 
[10, 11, 2, 3, 6, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [10, 12, 13, 2, 3, 6, 7, 8]
FD set : 
[10, 12, 13, 2, 3, 6, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 2, 3, 7, 9]
FD set : 
[11, 12, 2, 3, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [15, 2, 3, 8, 9]
FD set : 
[15, 2, 3, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 13, 2, 3, 9]
FD set : 
[11, 12, 13, 2, 3] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 2, 4, 6, 7, 8, 9]
FD set : 
[11, 13, 2, 4, 6, 7, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [12, 2, 4, 6, 7, 9]
FD set : 
[12, 2, 4, 6, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 14, 2, 4, 6, 8, 9]
FD set : 
[11, 13, 14, 2, 4, 6, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [10, 11, 2, 4, 6, 8]
FD set : 
[10, 11, 2, 4, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [10, 12, 13, 14, 2, 4, 6, 7]
FD set : 
[10, 12, 13, 14, 2, 4, 6] -> [7]
number of minimal keys : 1
########################

BCNF schemata : [10, 12, 14, 2, 4, 6, 8]
FD set : 
[10, 12, 14, 2, 4, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 14, 2, 4, 6, 8]
FD set : 
[11, 12, 14, 2, 4, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [12, 14, 2, 4, 6, 9]
FD set : 
[12, 14, 2, 4, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 14, 2, 4, 7, 8, 9]
FD set : 
[11, 13, 14, 2, 4, 7, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 2, 4, 7, 8]
FD set : 
[11, 12, 2, 4, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [12, 13, 14, 2, 4, 7, 9]
FD set : 
[12, 13, 14, 2, 4, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [10, 11, 13, 14, 2, 3, 4, 8]
FD set : 
[10, 11, 13, 14, 2, 4, 8] -> [3]
number of minimal keys : 1
########################

BCNF schemata : [15, 2, 4, 8, 9]
FD set : 
[15, 2, 4, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [10, 11, 12, 2, 4, 8]
FD set : 
[10, 11, 12, 2, 4] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 2, 4, 9]
FD set : 
[11, 12, 2, 4] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 13, 14, 2, 4, 6]
FD set : 
[11, 12, 13, 14, 2, 4] -> [6]
number of minimal keys : 1
########################

BCNF schemata : [14, 2, 4, 5, 6, 7, 8]
FD set : 
[14, 2, 5, 6, 7, 8] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [14, 2, 4, 5, 6, 7, 9]
FD set : 
[14, 2, 5, 6, 7, 9] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [11, 2, 3, 5, 6, 7]
FD set : 
[11, 2, 5, 6, 7] -> [3]
number of minimal keys : 1
########################

BCNF schemata : [13, 2, 4, 5, 6, 7]
FD set : 
[13, 2, 5, 6, 7] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 2, 5, 6]
FD set : 
[10, 2, 5, 6] -> [1]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 2, 5, 6]
FD set : 
[11, 2, 5, 6] -> [1]
number of minimal keys : 1
########################

BCNF schemata : [11, 2, 5, 6, 9]
FD set : 
[11, 2, 5, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 2, 5, 6]
FD set : 
[12, 2, 5, 6] -> [1]
number of minimal keys : 1
########################

BCNF schemata : [13, 14, 2, 4, 5, 7, 8]
FD set : 
[13, 14, 2, 5, 7, 8] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [13, 14, 2, 4, 5, 7, 9]
FD set : 
[13, 14, 2, 5, 7, 9] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 2, 5, 7]
FD set : 
[10, 2, 5, 7] -> [1]
number of minimal keys : 1
########################

BCNF schemata : [10, 13, 2, 5, 7, 8]
FD set : 
[10, 13, 2, 5, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 2, 5, 7]
FD set : 
[11, 2, 5, 7] -> [1]
number of minimal keys : 1
########################

BCNF schemata : [11, 14, 2, 5, 7, 8]
FD set : 
[11, 14, 2, 5, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 2, 5, 7]
FD set : 
[12, 2, 5, 7] -> [1]
number of minimal keys : 1
########################

BCNF schemata : [12, 2, 5, 7, 9]
FD set : 
[12, 2, 5, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [10, 2, 4, 5, 8]
FD set : 
[10, 2, 5, 8] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 2, 5, 8]
FD set : 
[11, 2, 5, 8] -> [1]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 2, 5, 8]
FD set : 
[12, 2, 5, 8] -> [1]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 12, 2, 5]
FD set : 
[10, 12, 2, 5] -> [1]
number of minimal keys : 1
########################

BCNF schemata : [10, 12, 13, 14, 2, 5]
FD set : 
[10, 12, 14, 2, 5] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [10, 13, 2, 4, 5]
FD set : 
[10, 13, 2, 5] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [1, 10, 14, 2, 5]
FD set : 
[10, 14, 2, 5] -> [1]
number of minimal keys : 1
########################

BCNF schemata : [10, 14, 2, 5, 8]
FD set : 
[10, 14, 2, 5] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [11, 2, 4, 5]
FD set : 
[11, 2, 5] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 2, 5, 8]
FD set : 
[11, 12, 2, 5] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 13, 2, 5]
FD set : 
[11, 12, 2, 5] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [1, 11, 14, 2, 5]
FD set : 
[11, 14, 2, 5] -> [1]
number of minimal keys : 1
########################

BCNF schemata : [12, 2, 4, 5]
FD set : 
[12, 2, 5] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 13, 2, 5]
FD set : 
[12, 13, 2, 5] -> [1]
number of minimal keys : 1
########################

BCNF schemata : [1, 12, 14, 2, 5]
FD set : 
[12, 14, 2, 5] -> [1]
number of minimal keys : 1
########################

BCNF schemata : [1, 15, 2, 5]
FD set : 
[15, 2, 5] -> [1]
number of minimal keys : 1
########################

BCNF schemata : [15, 2, 5, 9]
FD set : 
[15, 2, 5] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [10, 11, 12, 2, 6, 7, 8]
FD set : 
[10, 11, 12, 2, 6, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 2, 6, 7, 9]
FD set : 
[11, 12, 2, 6, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 14, 2, 6, 7, 8]
FD set : 
[11, 12, 14, 2, 6, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [15, 2, 6, 8, 9]
FD set : 
[15, 2, 6, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 13, 2, 6, 9]
FD set : 
[11, 12, 13, 2, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [14, 15, 2, 7, 8, 9]
FD set : 
[14, 15, 2, 7, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [10, 11, 12, 14, 2, 3, 7]
FD set : 
[10, 11, 12, 14, 2, 7] -> [3]
number of minimal keys : 1
########################

BCNF schemata : [10, 11, 12, 14, 2, 7, 8]
FD set : 
[10, 11, 12, 14, 2, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 14, 2, 7, 9]
FD set : 
[11, 12, 14, 2, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [13, 15, 2, 8, 9]
FD set : 
[13, 15, 2, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 15, 2, 9]
FD set : 
[11, 15, 2] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 14, 3, 4, 5, 7, 8]
FD set : 
[11, 13, 14, 3, 4, 5, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [14, 15, 3, 4, 6, 7, 8, 9]
FD set : 
[14, 15, 3, 4, 6, 7, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 13, 14, 3, 4, 6, 9]
FD set : 
[11, 12, 13, 14, 3, 4, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [12, 14, 15, 3, 4, 6, 8]
FD set : 
[12, 14, 15, 3, 4, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [10, 13, 15, 3, 4, 7, 8]
FD set : 
[10, 13, 15, 3, 4, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [11, 15, 3, 4, 7, 9]
FD set : 
[11, 15, 3, 4, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [10, 12, 14, 15, 3, 4]
FD set : 
[10, 12, 15, 3, 4] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [11, 3, 5, 6, 7, 8]
FD set : 
[11, 3, 5, 6, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 14, 3, 5, 6, 7]
FD set : 
[11, 14, 3, 5, 6, 7] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [11, 3, 5, 6, 8, 9]
FD set : 
[11, 3, 5, 6, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 3, 4, 5, 6]
FD set : 
[11, 12, 3, 5, 6] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 3, 5, 6, 9]
FD set : 
[11, 13, 3, 5, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 14, 3, 4, 5, 6]
FD set : 
[11, 13, 14, 3, 5, 6] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 14, 3, 5, 6, 8]
FD set : 
[11, 13, 14, 3, 5, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [11, 14, 3, 5, 6, 9]
FD set : 
[11, 14, 3, 5, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [12, 3, 5, 6, 9]
FD set : 
[12, 3, 5, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [12, 13, 14, 3, 4, 5, 6]
FD set : 
[12, 13, 14, 3, 5, 6] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [13, 15, 3, 5, 6]
FD set : 
[15, 3, 5, 6] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [10, 11, 3, 5, 6, 7]
FD set : 
[10, 11, 3, 5, 7] -> [6]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 13, 3, 5, 7]
FD set : 
[11, 12, 3, 5, 7] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [12, 14, 3, 5, 7, 9]
FD set : 
[12, 14, 3, 5, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [13, 15, 3, 5, 7]
FD set : 
[15, 3, 5, 7] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [14, 15, 3, 5, 7]
FD set : 
[15, 3, 5, 7] -> [14]
number of minimal keys : 1
########################

BCNF schemata : [11, 14, 3, 5, 8, 9]
FD set : 
[11, 14, 3, 5, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [10, 11, 3, 5, 8]
FD set : 
[10, 11, 3, 5] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [10, 11, 13, 3, 4, 5]
FD set : 
[10, 11, 13, 3, 5] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [10, 12, 14, 3, 4, 5]
FD set : 
[10, 12, 14, 3, 5] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 14, 3, 4, 5]
FD set : 
[11, 12, 14, 3, 5] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 14, 3, 5, 8]
FD set : 
[11, 12, 14, 3, 5] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [12, 13, 3, 5, 9]
FD set : 
[12, 13, 3, 5] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [14, 15, 3, 5, 9]
FD set : 
[14, 15, 3, 5] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [15, 3, 4, 5]
FD set : 
[15, 3, 5] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [12, 13, 15, 3, 6, 7, 8]
FD set : 
[12, 13, 15, 3, 6, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [10, 12, 15, 3, 6, 8]
FD set : 
[10, 12, 15, 3, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 15, 3, 6, 8]
FD set : 
[11, 12, 15, 3, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [12, 13, 14, 15, 3, 6, 8]
FD set : 
[12, 13, 14, 15, 3, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [12, 15, 3, 6, 9]
FD set : 
[12, 15, 3, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 15, 3, 7, 8, 9]
FD set : 
[11, 15, 3, 7, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [10, 13, 14, 15, 3, 7, 8]
FD set : 
[10, 13, 14, 15, 3, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 15, 3, 7, 9]
FD set : 
[11, 13, 15, 3, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [12, 13, 15, 3, 7, 9]
FD set : 
[12, 13, 15, 3, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 14, 15, 3, 8, 9]
FD set : 
[11, 14, 15, 3, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [10, 12, 13, 14, 15, 3, 8]
FD set : 
[10, 12, 13, 14, 15, 3] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 14, 15, 3, 6]
FD set : 
[11, 12, 14, 15, 3] -> [6]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 15, 3, 9]
FD set : 
[11, 12, 15, 3] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 14, 15, 3, 9]
FD set : 
[11, 13, 14, 15, 3] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [12, 14, 15, 3, 9]
FD set : 
[12, 14, 15, 3] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [12, 13, 4, 5, 7, 9]
FD set : 
[12, 13, 4, 5, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [12, 14, 4, 5, 7, 9]
FD set : 
[12, 14, 4, 5, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [12, 15, 4, 6, 9]
FD set : 
[12, 15, 4, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [10, 12, 14, 15, 4, 8]
FD set : 
[10, 12, 14, 15, 4] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [11, 14, 15, 4, 9]
FD set : 
[11, 14, 15, 4] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [12, 13, 15, 4, 9]
FD set : 
[12, 13, 15, 4] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [12, 14, 15, 4, 9]
FD set : 
[12, 14, 15, 4] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 5, 6, 7, 8, 9]
FD set : 
[11, 5, 6, 7, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 4, 5, 6, 7, 8]
FD set : 
[11, 13, 5, 6, 7, 8] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [12, 14, 4, 5, 6, 7, 8]
FD set : 
[12, 14, 5, 6, 7, 8] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [10, 11, 4, 5, 6, 7]
FD set : 
[10, 11, 5, 6, 7] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [10, 12, 3, 5, 6, 7]
FD set : 
[10, 12, 5, 6, 7] -> [3]
number of minimal keys : 1
########################

BCNF schemata : [10, 12, 5, 6, 7, 8]
FD set : 
[10, 12, 5, 6, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 3, 5, 6, 7]
FD set : 
[11, 12, 5, 6, 7] -> [3]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 5, 6, 7, 9]
FD set : 
[11, 13, 5, 6, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 14, 4, 5, 6, 7]
FD set : 
[11, 13, 14, 5, 6, 7] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [11, 14, 5, 6, 7, 9]
FD set : 
[11, 14, 5, 6, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [12, 5, 6, 7, 9]
FD set : 
[12, 5, 6, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [12, 13, 14, 5, 6, 7, 8]
FD set : 
[12, 13, 14, 5, 6, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [10, 12, 13, 3, 5, 6, 8]
FD set : 
[10, 12, 13, 5, 6, 8] -> [3]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 5, 6, 8, 9]
FD set : 
[11, 13, 5, 6, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 14, 5, 6, 8, 9]
FD set : 
[11, 14, 5, 6, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [15, 4, 5, 6, 9]
FD set : 
[15, 5, 6, 9] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [13, 15, 5, 6, 9]
FD set : 
[15, 5, 6, 9] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [10, 11, 5, 6, 8]
FD set : 
[10, 11, 5, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [10, 12, 13, 4, 5, 6]
FD set : 
[10, 12, 13, 5, 6] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [10, 12, 14, 4, 5, 6]
FD set : 
[10, 12, 14, 5, 6] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [10, 12, 14, 5, 6, 8]
FD set : 
[10, 12, 14, 5, 6] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 14, 5, 6, 9]
FD set : 
[11, 13, 14, 5, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [12, 13, 5, 6, 9]
FD set : 
[12, 13, 5, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [12, 14, 5, 6, 9]
FD set : 
[12, 14, 5, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 4, 5, 7, 8]
FD set : 
[11, 12, 5, 7, 8] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 5, 7, 8, 9]
FD set : 
[11, 13, 5, 7, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 14, 5, 7, 8, 9]
FD set : 
[11, 14, 5, 7, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [15, 4, 5, 7, 9]
FD set : 
[15, 5, 7, 9] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [10, 11, 5, 7, 8]
FD set : 
[10, 11, 5, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [10, 11, 13, 4, 5, 7]
FD set : 
[10, 11, 13, 5, 7] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [10, 12, 14, 4, 5, 7]
FD set : 
[10, 12, 14, 5, 7] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [10, 12, 14, 5, 7, 8]
FD set : 
[10, 12, 14, 5, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 13, 4, 5, 7]
FD set : 
[11, 12, 13, 5, 7] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 14, 3, 5, 7]
FD set : 
[11, 12, 14, 5, 7] -> [3]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 14, 5, 7, 9]
FD set : 
[11, 13, 14, 5, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [13, 15, 4, 5, 7]
FD set : 
[13, 15, 5, 7] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [14, 15, 5, 7, 9]
FD set : 
[14, 15, 5, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [10, 11, 12, 13, 5]
FD set : 
[10, 11, 12, 5] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [10, 11, 14, 4, 5]
FD set : 
[10, 11, 14, 5] -> [4]
number of minimal keys : 1
########################

BCNF schemata : [10, 15, 5, 7]
FD set : 
[10, 15, 5] -> [7]
number of minimal keys : 1
########################

BCNF schemata : [10, 13, 15, 5]
FD set : 
[10, 15, 5] -> [13]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 5, 9]
FD set : 
[11, 12, 5] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 13, 14, 5, 8]
FD set : 
[11, 12, 13, 14, 5] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [12, 13, 14, 5, 9]
FD set : 
[12, 13, 14, 5] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [13, 14, 15, 5, 9]
FD set : 
[13, 14, 15, 5] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 15, 6, 7, 8, 9]
FD set : 
[11, 15, 6, 7, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 14, 15, 6, 7, 9]
FD set : 
[11, 13, 14, 15, 6, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [12, 15, 6, 7, 9]
FD set : 
[12, 15, 6, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 14, 15, 6, 8, 9]
FD set : 
[11, 13, 14, 15, 6, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 15, 6, 9]
FD set : 
[11, 12, 15, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [12, 14, 15, 6, 9]
FD set : 
[12, 14, 15, 6] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 13, 15, 7, 8, 9]
FD set : 
[11, 13, 15, 7, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 14, 15, 7, 8, 9]
FD set : 
[11, 14, 15, 7, 8] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [10, 12, 14, 15, 7, 8]
FD set : 
[10, 12, 14, 15, 7] -> [8]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 15, 7, 9]
FD set : 
[11, 12, 15, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [12, 14, 15, 7, 9]
FD set : 
[12, 14, 15, 7] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [10, 9]
FD set : 
[10] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [11, 12, 13, 15, 9]
FD set : 
[11, 12, 13, 15] -> [9]
number of minimal keys : 1
########################

BCNF schemata : [12, 13, 14, 15, 9]
FD set : 
[12, 13, 14, 15] -> [9]
number of minimal keys : 1
########################


=============================

average key num on BCNF schematas : 1.381720430107527

=============================

final decomposition number of schemata in 3NF, not in BCNF : 29

=============================

3NF (not BCNF) schemata as follows :

3NF schemata : [11, 14, 15, 2, 3, 4, 6, 7, 8]
FD set : 
[11, 14, 2, 3, 4, 6, 7, 8] -> [15]
[15, 2, 3, 4, 6, 8] -> [11]
[15, 2, 3, 4, 6, 8] -> [14]
[15, 2, 3, 4, 7] -> [6]
[15, 2, 3, 4, 7] -> [8]
[15, 2, 3, 4, 7] -> [11]
[15, 2, 3, 4, 7] -> [14]
[15, 2, 3, 6, 7, 8] -> [4]
[15, 2, 3, 6, 7, 8] -> [11]
[15, 2, 3, 6, 7, 8] -> [14]
[14, 15, 2, 3, 6, 7] -> [4]
[14, 15, 2, 3, 6, 7] -> [8]
[14, 15, 2, 3, 6, 7] -> [11]
[14, 15, 2, 3, 6, 8] -> [4]
[14, 15, 2, 3, 6, 8] -> [7]
[14, 15, 2, 3, 6, 8] -> [11]
[11, 15, 2, 3] -> [4]
[11, 15, 2, 3] -> [6]
[11, 15, 2, 3] -> [7]
[11, 15, 2, 3] -> [8]
[11, 15, 2, 3] -> [14]
[15, 2, 4, 6, 7] -> [8]
[15, 2, 4, 6, 8] -> [7]
[14, 15, 2, 4, 6] -> [3]
[14, 15, 2, 4, 6] -> [7]
[14, 15, 2, 4, 6] -> [8]
[14, 15, 2, 4, 6] -> [11]
[15, 2, 4, 7, 8] -> [6]
[14, 15, 2, 4, 7] -> [3]
[14, 15, 2, 4, 7] -> [6]
[14, 15, 2, 4, 7] -> [8]
[14, 15, 2, 4, 7] -> [11]
[14, 15, 2, 4, 8] -> [3]
[14, 15, 2, 4, 8] -> [6]
[14, 15, 2, 4, 8] -> [7]
[14, 15, 2, 4, 8] -> [11]
[11, 15, 2, 4] -> [3]
[11, 15, 2, 4] -> [6]
[11, 15, 2, 4] -> [7]
[11, 15, 2, 4] -> [8]
[11, 15, 2, 4] -> [14]
[14, 15, 2, 6, 7, 8] -> [3]
[14, 15, 2, 6, 7, 8] -> [4]
[14, 15, 2, 6, 7, 8] -> [11]
[11, 15, 2, 6] -> [3]
[11, 15, 2, 6] -> [4]
[11, 15, 2, 6] -> [7]
[11, 15, 2, 6] -> [8]
[11, 15, 2, 6] -> [14]
[11, 15, 2, 7] -> [3]
[11, 15, 2, 7] -> [4]
[11, 15, 2, 7] -> [6]
[11, 15, 2, 7] -> [8]
[11, 15, 2, 7] -> [14]
[11, 14, 15, 2, 8] -> [3]
[11, 14, 15, 2, 8] -> [4]
[11, 14, 15, 2, 8] -> [6]
[11, 14, 15, 2, 8] -> [7]
[11, 15, 3, 4, 6, 7] -> [2]
[11, 15, 3, 4, 6, 7] -> [14]
[11, 14, 15, 3, 4, 6, 8] -> [2]
[11, 14, 15, 3, 4, 6, 8] -> [7]
[11, 14, 15, 3, 4, 7] -> [2]
[11, 14, 15, 3, 4, 7] -> [6]
[11, 14, 15, 4, 6, 7] -> [2]
[11, 14, 15, 4, 6, 7] -> [3]
[11, 15, 4, 6, 7] -> [8]
[11, 14, 15, 4, 7] -> [8]
number of minimal keys : 19
########################

3NF schemata : [10, 11, 13, 14, 15, 2, 3, 6, 7]
FD set : 
[10, 11, 13, 14, 2, 3, 6, 7] -> [15]
[13, 15, 2, 3, 6, 7] -> [10]
[13, 15, 2, 3, 6, 7] -> [11]
[13, 15, 2, 3, 6, 7] -> [14]
[14, 15, 2, 3, 6, 7] -> [10]
[14, 15, 2, 3, 6, 7] -> [11]
[14, 15, 2, 3, 6, 7] -> [13]
[13, 14, 15, 2, 3, 6] -> [7]
[13, 14, 15, 2, 3, 6] -> [10]
[13, 14, 15, 2, 3, 6] -> [11]
[11, 15, 2, 3] -> [6]
[11, 15, 2, 3] -> [7]
[11, 15, 2, 3] -> [10]
[11, 15, 2, 3] -> [13]
[11, 15, 2, 3] -> [14]
[13, 14, 15, 2, 6, 7] -> [3]
[13, 14, 15, 2, 6, 7] -> [10]
[13, 14, 15, 2, 6, 7] -> [11]
[11, 15, 2, 6] -> [3]
[11, 15, 2, 6] -> [7]
[11, 15, 2, 6] -> [10]
[11, 15, 2, 6] -> [13]
[11, 15, 2, 6] -> [14]
[11, 15, 2, 7] -> [3]
[11, 15, 2, 7] -> [6]
[11, 15, 2, 7] -> [10]
[11, 15, 2, 7] -> [13]
[11, 15, 2, 7] -> [14]
[10, 15, 2] -> [3]
[10, 15, 2] -> [6]
[10, 15, 2] -> [7]
[10, 15, 2] -> [11]
[10, 15, 2] -> [13]
[10, 15, 2] -> [14]
[11, 13, 15, 2] -> [3]
[11, 13, 15, 2] -> [6]
[11, 13, 15, 2] -> [7]
[11, 13, 15, 2] -> [10]
[11, 13, 15, 2] -> [14]
[10, 11, 15, 3, 6] -> [2]
[10, 11, 15, 3, 6] -> [7]
[10, 11, 15, 3, 6] -> [13]
[10, 11, 15, 3, 6] -> [14]
[10, 11, 14, 15, 3] -> [2]
[10, 11, 14, 15, 3] -> [6]
[10, 11, 14, 15, 3] -> [7]
[10, 11, 14, 15, 3] -> [13]
[10, 11, 13, 15, 6] -> [7]
[10, 11, 14, 15, 6] -> [2]
[10, 11, 14, 15, 6] -> [3]
[10, 11, 14, 15, 6] -> [7]
[10, 11, 14, 15, 6] -> [13]
[10, 11, 14, 15, 7] -> [2]
[10, 11, 14, 15, 7] -> [3]
[10, 11, 14, 15, 7] -> [6]
[10, 11, 14, 15, 7] -> [13]
number of minimal keys : 14
########################

3NF schemata : [10, 11, 12, 13, 14, 15, 2, 6, 8]
FD set : 
[10, 11, 12, 13, 14, 2, 6, 8] -> [15]
[13, 14, 15, 2, 6, 8] -> [10]
[13, 14, 15, 2, 6, 8] -> [11]
[13, 14, 15, 2, 6, 8] -> [12]
[11, 15, 2, 6] -> [8]
[11, 15, 2, 6] -> [10]
[11, 15, 2, 6] -> [12]
[11, 15, 2, 6] -> [13]
[11, 15, 2, 6] -> [14]
[11, 14, 15, 2, 8] -> [6]
[11, 14, 15, 2, 8] -> [10]
[11, 14, 15, 2, 8] -> [12]
[11, 14, 15, 2, 8] -> [13]
[10, 15, 2] -> [6]
[10, 15, 2] -> [8]
[10, 15, 2] -> [11]
[10, 15, 2] -> [12]
[10, 15, 2] -> [13]
[10, 15, 2] -> [14]
[11, 13, 15, 2] -> [6]
[11, 13, 15, 2] -> [8]
[11, 13, 15, 2] -> [10]
[11, 13, 15, 2] -> [12]
[11, 13, 15, 2] -> [14]
[12, 15, 2] -> [6]
[12, 15, 2] -> [8]
[12, 15, 2] -> [10]
[12, 15, 2] -> [11]
[12, 15, 2] -> [13]
[12, 15, 2] -> [14]
[11, 12, 14, 15, 6, 8] -> [2]
[11, 12, 14, 15, 6, 8] -> [10]
[11, 12, 14, 15, 6, 8] -> [13]
[10, 11, 12, 15, 6] -> [2]
[10, 11, 12, 15, 6] -> [13]
[10, 11, 12, 15, 6] -> [14]
[10, 11, 13, 15, 6] -> [8]
[10, 11, 14, 15, 6] -> [2]
[10, 11, 14, 15, 6] -> [8]
[10, 11, 14, 15, 6] -> [12]
[10, 11, 14, 15, 6] -> [13]
[11, 12, 13, 15, 6] -> [2]
[11, 12, 13, 15, 6] -> [8]
[11, 12, 13, 15, 6] -> [10]
[11, 12, 13, 15, 6] -> [14]
[11, 12, 13, 14, 15, 8] -> [2]
[11, 12, 13, 14, 15, 8] -> [6]
[11, 12, 13, 14, 15, 8] -> [10]
[10, 11, 12, 14, 15] -> [2]
[10, 11, 12, 14, 15] -> [6]
[10, 11, 12, 14, 15] -> [13]
[10, 11, 12, 15] -> [8]
[10, 11, 13, 14, 15] -> [8]
number of minimal keys : 13
########################

3NF schemata : [10, 11, 13, 14, 15, 2, 4, 7, 8]
FD set : 
[10, 11, 13, 14, 2, 4, 7, 8] -> [15]
[15, 2, 4, 7, 8] -> [13]
[13, 15, 2, 4, 7] -> [8]
[14, 15, 2, 4, 7] -> [8]
[14, 15, 2, 4, 7] -> [10]
[14, 15, 2, 4, 7] -> [11]
[14, 15, 2, 4, 8] -> [7]
[14, 15, 2, 4, 8] -> [10]
[14, 15, 2, 4, 8] -> [11]
[11, 15, 2, 4] -> [7]
[11, 15, 2, 4] -> [8]
[11, 15, 2, 4] -> [10]
[11, 15, 2, 4] -> [13]
[11, 15, 2, 4] -> [14]
[14, 15, 2, 4] -> [13]
[11, 15, 2, 7] -> [4]
[11, 15, 2, 7] -> [8]
[11, 15, 2, 7] -> [10]
[11, 15, 2, 7] -> [13]
[11, 15, 2, 7] -> [14]
[11, 14, 15, 2, 8] -> [4]
[11, 14, 15, 2, 8] -> [7]
[11, 14, 15, 2, 8] -> [10]
[11, 14, 15, 2, 8] -> [13]
[10, 15, 2] -> [4]
[10, 15, 2] -> [7]
[10, 15, 2] -> [8]
[10, 15, 2] -> [11]
[10, 15, 2] -> [13]
[10, 15, 2] -> [14]
[11, 13, 15, 2] -> [4]
[11, 13, 15, 2] -> [7]
[11, 13, 15, 2] -> [8]
[11, 13, 15, 2] -> [10]
[11, 13, 15, 2] -> [14]
[10, 11, 15, 4, 7] -> [2]
[10, 11, 15, 4, 7] -> [13]
[10, 11, 15, 4, 7] -> [14]
[10, 14, 15, 4, 7] -> [8]
[11, 13, 15, 4, 7] -> [8]
[11, 14, 15, 4, 7] -> [8]
[10, 11, 13, 15, 4] -> [2]
[10, 11, 13, 15, 4] -> [7]
[10, 11, 13, 15, 4] -> [14]
[10, 11, 14, 15, 4] -> [2]
[10, 11, 14, 15, 4] -> [7]
[10, 11, 14, 15, 4] -> [13]
[10, 11, 15, 4] -> [8]
[11, 13, 14, 15, 4] -> [8]
[10, 11, 14, 15, 7] -> [2]
[10, 11, 14, 15, 7] -> [4]
[10, 11, 14, 15, 7] -> [8]
[10, 11, 14, 15, 7] -> [13]
[10, 11, 13, 14, 15] -> [8]
number of minimal keys : 12
########################

3NF schemata : [10, 11, 12, 13, 15, 2, 3, 7, 8]
FD set : 
[10, 11, 12, 13, 2, 3, 7, 8] -> [15]
[11, 15, 2, 3] -> [7]
[11, 15, 2, 3] -> [8]
[11, 15, 2, 3] -> [10]
[11, 15, 2, 3] -> [12]
[11, 15, 2, 3] -> [13]
[11, 15, 2, 7] -> [3]
[11, 15, 2, 7] -> [8]
[11, 15, 2, 7] -> [10]
[11, 15, 2, 7] -> [12]
[11, 15, 2, 7] -> [13]
[10, 15, 2] -> [3]
[10, 15, 2] -> [7]
[10, 15, 2] -> [8]
[10, 15, 2] -> [11]
[10, 15, 2] -> [12]
[10, 15, 2] -> [13]
[11, 13, 15, 2] -> [3]
[11, 13, 15, 2] -> [7]
[11, 13, 15, 2] -> [8]
[11, 13, 15, 2] -> [10]
[11, 13, 15, 2] -> [12]
[12, 15, 2] -> [3]
[12, 15, 2] -> [7]
[12, 15, 2] -> [8]
[12, 15, 2] -> [10]
[12, 15, 2] -> [11]
[12, 15, 2] -> [13]
[10, 11, 13, 15, 3, 7, 8] -> [2]
[10, 11, 13, 15, 3, 7, 8] -> [12]
[10, 12, 13, 15, 3, 7] -> [2]
[10, 12, 13, 15, 3, 7] -> [8]
[10, 12, 13, 15, 3, 7] -> [11]
[10, 11, 12, 13, 15, 3] -> [2]
[10, 11, 12, 13, 15, 3] -> [7]
[11, 12, 13, 15, 3] -> [8]
[10, 11, 12, 15, 7] -> [2]
[10, 11, 12, 15, 7] -> [3]
[10, 11, 12, 15, 7] -> [13]
[11, 12, 13, 15, 7] -> [2]
[11, 12, 13, 15, 7] -> [3]
[11, 12, 13, 15, 7] -> [8]
[11, 12, 13, 15, 7] -> [10]
[10, 11, 12, 15] -> [8]
number of minimal keys : 11
########################

3NF schemata : [1, 10, 11, 15, 2, 3, 7, 8]
FD set : 
[1, 10, 11, 2, 3, 7, 8] -> [15]
[1, 15, 2, 3, 7] -> [10]
[1, 15, 2, 3, 7] -> [11]
[1, 15, 2, 3, 8] -> [7]
[1, 15, 2, 3, 8] -> [10]
[1, 15, 2, 3, 8] -> [11]
[1, 15, 3, 7] -> [8]
[1, 10, 15] -> [2]
[1, 10, 15] -> [3]
[1, 10, 15] -> [7]
[1, 10, 15] -> [8]
[1, 10, 15] -> [11]
[1, 11, 15] -> [2]
[1, 11, 15] -> [3]
[1, 11, 15] -> [7]
[1, 11, 15] -> [8]
[1, 11, 15] -> [10]
[11, 15, 2, 3] -> [1]
[11, 15, 2, 3] -> [7]
[11, 15, 2, 3] -> [8]
[11, 15, 2, 3] -> [10]
[11, 15, 2, 7] -> [1]
[11, 15, 2, 7] -> [3]
[11, 15, 2, 7] -> [8]
[11, 15, 2, 7] -> [10]
[10, 15, 2] -> [1]
[10, 15, 2] -> [3]
[10, 15, 2] -> [7]
[10, 15, 2] -> [8]
[10, 15, 2] -> [11]
number of minimal keys : 8
########################

3NF schemata : [1, 10, 11, 12, 15, 2, 3, 8]
FD set : 
[1, 10, 11, 12, 2, 3, 8] -> [15]
[1, 15, 2, 3, 8] -> [10]
[1, 15, 2, 3, 8] -> [11]
[1, 15, 2, 3, 8] -> [12]
[1, 10, 15] -> [2]
[1, 10, 15] -> [3]
[1, 10, 15] -> [8]
[1, 10, 15] -> [11]
[1, 10, 15] -> [12]
[1, 11, 15] -> [2]
[1, 11, 15] -> [3]
[1, 11, 15] -> [8]
[1, 11, 15] -> [10]
[1, 11, 15] -> [12]
[1, 12, 15] -> [2]
[1, 12, 15] -> [3]
[1, 12, 15] -> [8]
[1, 12, 15] -> [10]
[1, 12, 15] -> [11]
[11, 15, 2, 3] -> [1]
[11, 15, 2, 3] -> [8]
[11, 15, 2, 3] -> [10]
[11, 15, 2, 3] -> [12]
[10, 15, 2] -> [1]
[10, 15, 2] -> [3]
[10, 15, 2] -> [8]
[10, 15, 2] -> [11]
[10, 15, 2] -> [12]
[12, 15, 2] -> [1]
[12, 15, 2] -> [3]
[12, 15, 2] -> [8]
[12, 15, 2] -> [10]
[12, 15, 2] -> [11]
[10, 11, 12, 15] -> [8]
number of minimal keys : 8
########################

3NF schemata : [10, 13, 14, 15, 2, 4, 6, 7, 8]
FD set : 
[10, 13, 14, 2, 4, 6, 7, 8] -> [15]
[15, 2, 4, 6, 7] -> [8]
[15, 2, 4, 6, 7] -> [13]
[15, 2, 4, 6, 8] -> [7]
[15, 2, 4, 6, 8] -> [13]
[13, 15, 2, 4, 6] -> [7]
[13, 15, 2, 4, 6] -> [8]
[14, 15, 2, 4, 6] -> [7]
[14, 15, 2, 4, 6] -> [8]
[14, 15, 2, 4, 6] -> [10]
[15, 2, 4, 7, 8] -> [6]
[15, 2, 4, 7, 8] -> [13]
[13, 15, 2, 4, 7] -> [6]
[13, 15, 2, 4, 7] -> [8]
[14, 15, 2, 4, 7] -> [6]
[14, 15, 2, 4, 7] -> [8]
[14, 15, 2, 4, 7] -> [10]
[14, 15, 2, 4, 8] -> [6]
[14, 15, 2, 4, 8] -> [7]
[14, 15, 2, 4, 8] -> [10]
[14, 15, 2, 4] -> [13]
[14, 15, 2, 6, 7, 8] -> [4]
[14, 15, 2, 6, 7, 8] -> [10]
[14, 15, 2, 6, 7, 8] -> [13]
[13, 14, 15, 2, 6, 7] -> [4]
[13, 14, 15, 2, 6, 7] -> [8]
[13, 14, 15, 2, 6, 7] -> [10]
[13, 14, 15, 2, 6, 8] -> [4]
[13, 14, 15, 2, 6, 8] -> [7]
[13, 14, 15, 2, 6, 8] -> [10]
[10, 15, 2] -> [4]
[10, 15, 2] -> [6]
[10, 15, 2] -> [7]
[10, 15, 2] -> [8]
[10, 15, 2] -> [13]
[10, 15, 2] -> [14]
[10, 15, 4, 6, 7] -> [8]
[10, 15, 4, 6, 7] -> [13]
[10, 13, 14, 15, 4, 6, 8] -> [7]
[10, 14, 15, 4, 7] -> [8]
[10, 13, 14, 15, 6, 7, 8] -> [4]
number of minimal keys : 8
########################

3NF schemata : [1, 11, 12, 13, 15, 2, 7, 8]
FD set : 
[1, 11, 12, 13, 2, 7, 8] -> [15]
[1, 15, 2, 7] -> [13]
[1, 15, 7, 8] -> [13]
[1, 11, 15] -> [2]
[1, 11, 15] -> [7]
[1, 11, 15] -> [8]
[1, 11, 15] -> [12]
[1, 11, 15] -> [13]
[1, 12, 15] -> [2]
[1, 12, 15] -> [7]
[1, 12, 15] -> [8]
[1, 12, 15] -> [11]
[1, 12, 15] -> [13]
[11, 15, 2, 7] -> [1]
[11, 15, 2, 7] -> [8]
[11, 15, 2, 7] -> [12]
[11, 15, 2, 7] -> [13]
[11, 13, 15, 2] -> [1]
[11, 13, 15, 2] -> [7]
[11, 13, 15, 2] -> [8]
[11, 13, 15, 2] -> [12]
[12, 15, 2] -> [1]
[12, 15, 2] -> [7]
[12, 15, 2] -> [8]
[12, 15, 2] -> [11]
[12, 15, 2] -> [13]
[11, 12, 13, 15, 7] -> [1]
[11, 12, 13, 15, 7] -> [2]
[11, 12, 13, 15, 7] -> [8]
number of minimal keys : 7
########################

3NF schemata : [1, 11, 12, 13, 15, 6, 7, 8]
FD set : 
[1, 11, 12, 13, 6, 7, 8] -> [15]
[1, 15, 6, 7] -> [8]
[1, 15, 6, 7] -> [11]
[1, 15, 6, 7] -> [12]
[1, 15, 6, 7] -> [13]
[1, 15, 7, 8] -> [13]
[1, 11, 15] -> [6]
[1, 11, 15] -> [7]
[1, 11, 15] -> [8]
[1, 11, 15] -> [12]
[1, 11, 15] -> [13]
[1, 12, 15] -> [6]
[1, 12, 15] -> [7]
[1, 12, 15] -> [8]
[1, 12, 15] -> [11]
[1, 12, 15] -> [13]
[11, 12, 15, 6, 7] -> [1]
[11, 12, 15, 6, 7] -> [8]
[11, 12, 15, 6, 7] -> [13]
[11, 12, 13, 15, 6] -> [1]
[11, 12, 13, 15, 6] -> [7]
[11, 12, 13, 15, 6] -> [8]
[11, 12, 13, 15, 7] -> [1]
[11, 12, 13, 15, 7] -> [6]
[11, 12, 13, 15, 7] -> [8]
number of minimal keys : 7
########################

3NF schemata : [11, 12, 13, 15, 2, 4, 6, 8]
FD set : 
[11, 12, 13, 2, 4, 6, 8] -> [15]
[15, 2, 4, 6, 8] -> [13]
[13, 15, 2, 4, 6] -> [8]
[11, 15, 2, 4] -> [6]
[11, 15, 2, 4] -> [8]
[11, 15, 2, 4] -> [12]
[11, 15, 2, 4] -> [13]
[11, 15, 2, 6] -> [4]
[11, 15, 2, 6] -> [8]
[11, 15, 2, 6] -> [12]
[11, 15, 2, 6] -> [13]
[11, 13, 15, 2] -> [4]
[11, 13, 15, 2] -> [6]
[11, 13, 15, 2] -> [8]
[11, 13, 15, 2] -> [12]
[12, 15, 2] -> [4]
[12, 15, 2] -> [6]
[12, 15, 2] -> [8]
[12, 15, 2] -> [11]
[12, 15, 2] -> [13]
[11, 13, 15, 4, 6] -> [8]
[11, 12, 15, 4] -> [2]
[11, 12, 15, 4] -> [6]
[11, 12, 15, 4] -> [8]
[11, 12, 15, 4] -> [13]
[11, 12, 13, 15, 6] -> [2]
[11, 12, 13, 15, 6] -> [4]
[11, 12, 13, 15, 6] -> [8]
number of minimal keys : 7
########################

3NF schemata : [11, 13, 14, 15, 5, 6, 7, 8]
FD set : 
[11, 13, 14, 5, 6, 7, 8] -> [15]
[15, 5, 6, 7] -> [8]
[15, 5, 6, 7] -> [11]
[15, 5, 6, 7] -> [13]
[15, 5, 6, 7] -> [14]
[15, 5, 6, 8] -> [7]
[15, 5, 6, 8] -> [11]
[15, 5, 6, 8] -> [13]
[15, 5, 6, 8] -> [14]
[14, 15, 5, 6] -> [7]
[14, 15, 5, 6] -> [8]
[14, 15, 5, 6] -> [11]
[14, 15, 5, 6] -> [13]
[13, 15, 5, 7, 8] -> [6]
[13, 15, 5, 7, 8] -> [11]
[13, 15, 5, 7, 8] -> [14]
[13, 14, 15, 5, 7] -> [6]
[13, 14, 15, 5, 7] -> [11]
[14, 15, 5, 7] -> [8]
[11, 15, 5] -> [6]
[11, 15, 5] -> [7]
[11, 15, 5] -> [8]
[11, 15, 5] -> [13]
[11, 15, 5] -> [14]
[13, 14, 15, 5] -> [8]
number of minimal keys : 7
########################

3NF schemata : [10, 12, 13, 15, 2, 4, 6, 7, 8]
FD set : 
[10, 12, 13, 2, 4, 6, 7, 8] -> [15]
[15, 2, 4, 6, 7] -> [8]
[15, 2, 4, 6, 7] -> [13]
[15, 2, 4, 6, 8] -> [7]
[15, 2, 4, 6, 8] -> [13]
[13, 15, 2, 4, 6] -> [7]
[13, 15, 2, 4, 6] -> [8]
[15, 2, 4, 7, 8] -> [6]
[15, 2, 4, 7, 8] -> [13]
[13, 15, 2, 4, 7] -> [6]
[13, 15, 2, 4, 7] -> [8]
[10, 15, 2] -> [4]
[10, 15, 2] -> [6]
[10, 15, 2] -> [7]
[10, 15, 2] -> [8]
[10, 15, 2] -> [12]
[10, 15, 2] -> [13]
[12, 15, 2] -> [4]
[12, 15, 2] -> [6]
[12, 15, 2] -> [7]
[12, 15, 2] -> [8]
[12, 15, 2] -> [10]
[12, 15, 2] -> [13]
[10, 15, 4, 6, 7] -> [8]
[10, 15, 4, 6, 7] -> [13]
[12, 13, 15, 4, 6, 7] -> [2]
[12, 13, 15, 4, 6, 7] -> [10]
[12, 15, 4, 6, 7] -> [8]
[10, 12, 15, 4, 6] -> [2]
[10, 12, 15, 4, 6] -> [7]
[10, 12, 15, 4, 6] -> [8]
[10, 12, 15, 4, 6] -> [13]
[10, 12, 13, 15, 4, 7] -> [2]
[10, 12, 13, 15, 4, 7] -> [6]
[12, 13, 15, 4, 7] -> [8]
[10, 12, 13, 15, 4] -> [8]
[10, 12, 15, 6, 7] -> [8]
[10, 12, 15, 6, 7] -> [13]
number of minimal keys : 6
########################

3NF schemata : [0, 11, 13, 14, 2, 6, 8]
FD set : 
[0, 13, 14, 2, 6, 8] -> [11]
[0, 11, 2, 6] -> [8]
[0, 11, 13, 2, 6] -> [14]
[0, 11, 14, 2, 6] -> [13]
[0, 11, 13, 14, 2] -> [6]
[0, 11, 13, 14, 2] -> [8]
number of minimal keys : 4
########################

3NF schemata : [1, 14, 2, 4, 5, 6, 7]
FD set : 
[1, 4] -> [5]
[1, 5] -> [4]
[14, 2, 4, 5, 6, 7] -> [1]
number of minimal keys : 3
########################

3NF schemata : [10, 13, 14, 3, 4, 5, 6, 7, 8]
FD set : 
[10, 13, 3, 5, 6, 7] -> [4]
[10, 13, 3, 5, 6, 7] -> [8]
[10, 13, 3, 5, 6, 7] -> [14]
[10, 14, 3, 5, 6, 7] -> [4]
[10, 14, 3, 5, 6, 7] -> [8]
[10, 14, 3, 5, 6, 7] -> [13]
[10, 13, 14, 3, 5, 6] -> [4]
[10, 13, 14, 4, 5, 6, 7, 8] -> [3]
number of minimal keys : 3
########################

3NF schemata : [0, 10, 11, 14, 4, 6, 7]
FD set : 
[0, 10, 11, 4, 6] -> [7]
[0, 10, 11, 14, 4, 7] -> [6]
number of minimal keys : 2
########################

3NF schemata : [0, 10, 11, 13, 14, 6, 7, 8]
FD set : 
[0, 10, 11, 14, 6, 7, 8] -> [13]
[0, 10, 11, 13, 6, 7] -> [8]
number of minimal keys : 2
########################

3NF schemata : [1, 12, 13, 3, 5, 6, 7, 8]
FD set : 
[1, 12, 3, 5, 6, 7, 8] -> [13]
[1, 12, 13, 5, 6, 7] -> [8]
number of minimal keys : 2
########################

3NF schemata : [1, 11, 12, 13, 14, 2, 6, 8]
FD set : 
[1, 11, 12, 2, 6] -> [8]
[1, 11, 12, 13, 14, 2] -> [8]
[1, 11, 12, 13, 14, 6, 8] -> [2]
number of minimal keys : 2
########################

3NF schemata : [1, 13, 15, 6, 8, 9]
FD set : 
[1, 15, 6, 8] -> [9]
[1, 13, 15, 6, 9] -> [8]
[1, 13, 15, 8] -> [9]
number of minimal keys : 2
########################

3NF schemata : [1, 14, 15, 6, 8, 9]
FD set : 
[1, 15, 6, 8] -> [9]
[1, 14, 15, 6, 9] -> [8]
[1, 14, 15, 8] -> [9]
number of minimal keys : 2
########################

3NF schemata : [1, 13, 14, 15, 8, 9]
FD set : 
[1, 13, 15, 8] -> [9]
[1, 14, 15, 8] -> [9]
[1, 13, 14, 15, 9] -> [8]
number of minimal keys : 2
########################

3NF schemata : [10, 11, 13, 14, 2, 3, 4, 7]
FD set : 
[10, 11, 2, 3, 4, 7] -> [14]
[10, 11, 13, 14, 2, 4, 7] -> [3]
number of minimal keys : 2
########################

3NF schemata : [10, 12, 13, 3, 4, 5, 7, 8]
FD set : 
[10, 12, 3, 4, 5, 7, 8] -> [13]
[10, 12, 13, 3, 5] -> [4]
[10, 12, 13, 5, 7] -> [8]
number of minimal keys : 2
########################

3NF schemata : [11, 13, 15, 3, 4, 6, 8, 9]
FD set : 
[11, 15, 3, 4, 6, 8, 9] -> [13]
[11, 13, 15, 3, 4] -> [8]
[11, 13, 15, 3, 6] -> [9]
[11, 13, 15, 4, 6] -> [8]
[11, 13, 15, 4] -> [9]
number of minimal keys : 2
########################

3NF schemata : [12, 14, 15, 4, 6, 7, 8]
FD set : 
[12, 15, 4, 6, 7] -> [8]
[12, 14, 15, 4, 6, 8] -> [7]
[12, 14, 15, 4, 7] -> [8]
number of minimal keys : 2
########################

3NF schemata : [15, 5, 7, 8, 9]
FD set : 
[15, 5, 7, 9] -> [8]
[15, 5, 8] -> [9]
number of minimal keys : 2
########################

3NF schemata : [14, 15, 5, 8, 9]
FD set : 
[15, 5, 8] -> [9]
[14, 15, 5, 9] -> [8]
number of minimal keys : 2
########################


=============================

average key num on 3NF schematas : 5.620689655172414

=============================

distributions of key number in BCNF : 
key number of subschema : 1 , number : 419
key number of subschema : 2 , number : 104
key number of subschema : 3 , number : 22
key number of subschema : 4 , number : 5
key number of subschema : 5 , number : 3
key number of subschema : 6 , number : 3
key number of subschema : 10 , number : 1
key number of subschema : 15 , number : 1

=============================

distributions of key number in 3NF : 
key number of subschema : 2 , number : 13
key number of subschema : 19 , number : 1
key number of subschema : 3 , number : 2
key number of subschema : 4 , number : 1
key number of subschema : 6 , number : 1
key number of subschema : 7 , number : 4
key number of subschema : 8 , number : 3
key number of subschema : 11 , number : 1
key number of subschema : 12 , number : 1
key number of subschema : 13 , number : 1
key number of subschema : 14 , number : 1
exp 1 :
current schema : [2, 3, 4, 6, 7, 8, 11, 14, 15]
checking duplicate rows...
SELECT `2`, `3`, `4`, `6`, `7`, `8`, `11`, `14`, `15` FROM `lineitem` GROUP BY `2`, `3`, `4`, `6`, `7`, `8`, `11`, `14`, `15` HAVING COUNT(*) > 1
deleting 0 redundant tuples!
creating projection table...
Successfully create projection table of lineitem !
current table name : lineitem-alg1-3nf-proj, schema size : 9, fd number : 68 , in 3NF.

current num : 1 , fd : [2, 3, 4, 6, 7, 8, 11, 14] -> [15]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND  ( `lineitem-alg1-3nf-proj`.`15` != new.`15` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 398313
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND  ( `lineitem-alg1-3nf-proj`.`15` != new.`15` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 802065
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND  ( `lineitem-alg1-3nf-proj`.`15` != new.`15` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1196407

current num : 2 , fd : [2, 3, 4, 6, 8, 15] -> [11]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 401123
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 803281
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1210510

current num : 3 , fd : [2, 3, 4, 6, 8, 15] -> [14]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 396580
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 804450
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1195542

current num : 4 , fd : [2, 3, 4, 7, 15] -> [6]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 403090
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 799969
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1203272

current num : 5 , fd : [2, 3, 4, 7, 15] -> [8]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 400063
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 803322
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1197447

current num : 6 , fd : [2, 3, 4, 7, 15] -> [11]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 400379
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 796135
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1204641

current num : 7 , fd : [2, 3, 4, 7, 15] -> [14]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 400649
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 803265
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1194821

current num : 8 , fd : [2, 3, 6, 7, 8, 15] -> [4]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 401199
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 796424
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1200922

current num : 9 , fd : [2, 3, 6, 7, 8, 15] -> [11]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 399819
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 801816
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1193985

current num : 10 , fd : [2, 3, 6, 7, 8, 15] -> [14]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 400348
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 794561
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1206055

current num : 11 , fd : [2, 3, 6, 7, 14, 15] -> [4]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 400141
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 799045
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1202111

current num : 12 , fd : [2, 3, 6, 7, 14, 15] -> [8]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 399684
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 803509
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1196580

current num : 13 , fd : [2, 3, 6, 7, 14, 15] -> [11]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 399665
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 800123
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1199799

current num : 14 , fd : [2, 3, 6, 8, 14, 15] -> [4]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 402273
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 801262
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1203621

current num : 15 , fd : [2, 3, 6, 8, 14, 15] -> [7]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 400914
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 803158
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1196783

current num : 16 , fd : [2, 3, 6, 8, 14, 15] -> [11]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 400004
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 802572
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1201682

current num : 17 , fd : [2, 3, 11, 15] -> [4]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 402108
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 803973
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1203268

current num : 18 , fd : [2, 3, 11, 15] -> [6]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 400258
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 803457
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1205682

current num : 19 , fd : [2, 3, 11, 15] -> [7]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 402273
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 805132
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1204331

current num : 20 , fd : [2, 3, 11, 15] -> [8]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 402417
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 801005
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1204687

current num : 21 , fd : [2, 3, 11, 15] -> [14]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 399994
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 801407
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1202720

current num : 22 , fd : [2, 4, 6, 7, 15] -> [8]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 401397
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 805570
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1204442

current num : 23 , fd : [2, 4, 6, 8, 15] -> [7]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 398721
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 798427
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1199803

current num : 24 , fd : [2, 4, 6, 14, 15] -> [3]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 401390
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 803074
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1202175

current num : 25 , fd : [2, 4, 6, 14, 15] -> [7]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 401652
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 803587
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1209191

current num : 26 , fd : [2, 4, 6, 14, 15] -> [8]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 399798
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 806016
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1202301

current num : 27 , fd : [2, 4, 6, 14, 15] -> [11]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 400561
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 797393
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1204359

current num : 28 , fd : [2, 4, 7, 8, 15] -> [6]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 402009
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 806350
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1205477

current num : 29 , fd : [2, 4, 7, 14, 15] -> [3]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 402377
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 799659
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1205709

current num : 30 , fd : [2, 4, 7, 14, 15] -> [6]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 397913
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 804754
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1201802

current num : 31 , fd : [2, 4, 7, 14, 15] -> [8]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 402399
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 799144
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1207349

current num : 32 , fd : [2, 4, 7, 14, 15] -> [11]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 401864
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 801528
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1196043

current num : 33 , fd : [2, 4, 8, 14, 15] -> [3]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 402502
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 798755
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1202873

current num : 34 , fd : [2, 4, 8, 14, 15] -> [6]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 399815
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 806377
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1206844

current num : 35 , fd : [2, 4, 8, 14, 15] -> [7]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 402669
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 797363
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1206116

current num : 36 , fd : [2, 4, 8, 14, 15] -> [11]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 398731
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 800408
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1203307

current num : 37 , fd : [2, 4, 11, 15] -> [3]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 401767
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 800560
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1208045

current num : 38 , fd : [2, 4, 11, 15] -> [6]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 397992
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 802881
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1194734

current num : 39 , fd : [2, 4, 11, 15] -> [7]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 398872
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 796586
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1208868

current num : 40 , fd : [2, 4, 11, 15] -> [8]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 401146
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 804579
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1205314

current num : 41 , fd : [2, 4, 11, 15] -> [14]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 403668
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 800581
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1205565

current num : 42 , fd : [2, 6, 7, 8, 14, 15] -> [3]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 397295
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 801273
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1201601

current num : 43 , fd : [2, 6, 7, 8, 14, 15] -> [4]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 401504
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 798833
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1199642

current num : 44 , fd : [2, 6, 7, 8, 14, 15] -> [11]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 399584
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 804908
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`11` != new.`11` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1196236

current num : 45 , fd : [2, 6, 11, 15] -> [3]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 398990
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 796909
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1200296

current num : 46 , fd : [2, 6, 11, 15] -> [4]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 398422
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 798841
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1199747

current num : 47 , fd : [2, 6, 11, 15] -> [7]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 400859
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 798410
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1201936

current num : 48 , fd : [2, 6, 11, 15] -> [8]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 398341
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 802586
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1199961

current num : 49 , fd : [2, 6, 11, 15] -> [14]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 399170
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 796931
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1196469

current num : 50 , fd : [2, 7, 11, 15] -> [3]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 398440
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 801086
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1201059

current num : 51 , fd : [2, 7, 11, 15] -> [4]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 399090
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 799310
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1201249

current num : 52 , fd : [2, 7, 11, 15] -> [6]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 400263
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 802861
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1204824

current num : 53 , fd : [2, 7, 11, 15] -> [8]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 399136
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 795565
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1199329

current num : 54 , fd : [2, 7, 11, 15] -> [14]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 398589
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 805713
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1208553

current num : 55 , fd : [2, 8, 11, 14, 15] -> [3]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 401303
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 798964
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1198081

current num : 56 , fd : [2, 8, 11, 14, 15] -> [4]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 404153
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 798857
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`4` != new.`4` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1192808

current num : 57 , fd : [2, 8, 11, 14, 15] -> [6]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 401035
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 803372
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1199515

current num : 58 , fd : [2, 8, 11, 14, 15] -> [7]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 399613
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 805319
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`2` = new.`2` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1202621

current num : 59 , fd : [3, 4, 6, 7, 11, 15] -> [2]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`2` != new.`2` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 405441
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`2` != new.`2` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 805085
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`2` != new.`2` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1216190

current num : 60 , fd : [3, 4, 6, 7, 11, 15] -> [14]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 409775
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 814092
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`14` != new.`14` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1213845

current num : 61 , fd : [3, 4, 6, 8, 11, 14, 15] -> [2]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`2` != new.`2` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 405149
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`2` != new.`2` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 816739
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`2` != new.`2` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1215357

current num : 62 , fd : [3, 4, 6, 8, 11, 14, 15] -> [7]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 403750
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 815503
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`8` = new.`8` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`7` != new.`7` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1217994

current num : 63 , fd : [3, 4, 7, 11, 14, 15] -> [2]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`2` != new.`2` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 406926
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`2` != new.`2` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 811353
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`2` != new.`2` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1218371

current num : 64 , fd : [3, 4, 7, 11, 14, 15] -> [6]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 409206
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 815130
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`3` = new.`3` AND `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`6` != new.`6` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1212832

current num : 65 , fd : [4, 6, 7, 11, 14, 15] -> [2]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`2` != new.`2` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 400917
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`2` != new.`2` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 803587
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`2` != new.`2` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1200808

current num : 66 , fd : [4, 6, 7, 11, 14, 15] -> [3]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 401104
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 812994
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`3` != new.`3` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1211147

current num : 67 , fd : [4, 6, 7, 11, 15] -> [8]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 403949
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 799302
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`6` = new.`6` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1199805

current num : 68 , fd : [4, 7, 11, 14, 15] -> [8]
==================
starting to delete 60 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 60
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 403392
==================
starting to delete 120 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 120
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 799432
==================
starting to delete 180 records...
successfully delete records!
insert data into lineitem-alg1-3nf-proj, inserted tuples size : 180
add TRIGGER into table lineitem-alg1-3nf-proj...
CREATE TRIGGER `lineitem-alg1-3nf-proj_trigger`
AFTER INSERT ON `lineitem-alg1-3nf-proj`
FOR EACH ROW
BEGIN 
   set @violation = IF(EXISTS(SELECT * FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`4` = new.`4` AND `lineitem-alg1-3nf-proj`.`7` = new.`7` AND `lineitem-alg1-3nf-proj`.`11` = new.`11` AND `lineitem-alg1-3nf-proj`.`14` = new.`14` AND `lineitem-alg1-3nf-proj`.`15` = new.`15` AND  ( `lineitem-alg1-3nf-proj`.`8` != new.`8` )),'YES','NO');
   if @violation = 'YES' THEN
       DELETE FROM `lineitem-alg1-3nf-proj` WHERE `lineitem-alg1-3nf-proj`.`id` = new.`id` ;
   end if;
END 
current sql is (batch process) : INSERT INTO `lineitem-alg1-3nf-proj` VALUES( NULL ,  ? , ? , ? , ? , ? , ? , ? , ? , ? )
remove TRIGGER from table lineitem-alg1-3nf-proj...
DROP TRIGGER IF EXISTS `lineitem-alg1-3nf-proj_trigger`
execution time(ms): 1203678
After building index,insert 1/10 data median is 400859 ms, ave is 401087.25 ms
After building index,insert 2/10 data median is 801816 ms, ave is 802448.21 ms
After building index,insert 3/10 data median is 1202621 ms, ave is 1203222.6 ms
median : 400859,801816,1202621
average : 401087.25,802448.21,1203222.6
*******************************
